{
    "raw": [
        {
            "entry_point": "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void <init>()>",
            "children": [
                "<com.facebook.ads.AudienceNetworkActivity$1: void <init>(com.facebook.ads.AudienceNetworkActivity)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void finish()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onActivityResult(int,int,android.content.Intent)>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onBackPressed()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onConfigurationChanged(android.content.res.Configuration)>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: com.facebook.ads.internal.dynamicloading.DynamicLoader makeLoader(android.content.Context)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onDestroy()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onPause()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onResume()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onSaveInstanceState(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onStart()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onStop()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.ads.AudienceNetworkActivity: boolean onTouchEvent(android.view.MotionEvent)>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void attachBaseContext(android.content.Context)>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void closeOptionsMenu()>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: boolean dispatchKeyEvent(android.view.KeyEvent)>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: android.view.MenuInflater getMenuInflater()>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void invalidateOptionsMenu()>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onConfigurationChanged(android.content.res.Configuration)>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onContentChanged()>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onDestroy()>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: boolean onKeyDown(int,android.view.KeyEvent)>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: boolean onMenuItemSelected(int,android.view.MenuItem)>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: boolean onMenuOpened(int,android.view.Menu)>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onPanelClosed(int,android.view.Menu)>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onPostCreate(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onPostResume()>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onSaveInstanceState(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onStart()>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onStop()>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onTitleChanged(java.lang.CharSequence,int)>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void openOptionsMenu()>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void setContentView(int)>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void setTheme(int)>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.FacebookActivity: void <clinit>()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.FacebookActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.FacebookActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>",
            "children": [
                "<com.facebook.internal.instrument.crashshield.CrashShieldHandler: void handleThrowable(java.lang.Throwable,java.lang.Object)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.facebook.FacebookActivity: void onConfigurationChanged(android.content.res.Configuration)>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.FacebookActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.facebook.FacebookSdk: void sdkInitialize(android.content.Context)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.auth.api.signin.internal.SignInHubActivity: void <clinit>()>"
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.auth.api.signin.internal.SignInHubActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.auth.api.signin.internal.SignInHubActivity: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>"
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.auth.api.signin.internal.SignInHubActivity: void onActivityResult(int,int,android.content.Intent)>",
            "children": [
                "<com.google.android.gms.internal.auth-api.zzan: java.lang.Object checkNotNull(java.lang.Object)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.auth.api.signin.internal.SignInHubActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.google.android.gms.internal.auth-api.zzan: java.lang.Object checkNotNull(java.lang.Object)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.auth.api.signin.internal.SignInHubActivity: void onSaveInstanceState(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void <init>()>",
            "children": [
                "<androidx.lifecycle.LifecycleRegistry: void <init>(androidx.lifecycle.LifecycleOwner)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>",
            "children": [
                "<androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)>",
            "children": [
                "<androidx.core.app.ActivityCompat: androidx.core.app.ActivityCompat$PermissionCompatDelegate getPermissionCompatDelegate()>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<android.util.Log: int w(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: boolean onCreatePanelMenu(int,android.view.Menu)>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onDestroy()>",
            "children": [
                "<androidx.lifecycle.Lifecycle$Event: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onLowMemory()>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onMultiWindowModeChanged(boolean)>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onNewIntent(android.content.Intent)>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onPanelClosed(int,android.view.Menu)>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onPause()>",
            "children": [
                "<androidx.lifecycle.Lifecycle$Event: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onPictureInPictureModeChanged(boolean)>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onPostResume()>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>",
            "children": [
                "<android.util.Log: int w(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onResume()>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)>",
            "children": [
                "<java.lang.String: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onStart()>",
            "children": [
                "<androidx.lifecycle.Lifecycle$Event: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onStateNotSaved()>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onStop()>",
            "children": [
                "<androidx.lifecycle.Lifecycle$Event: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int)>",
            "children": [
                "<androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>",
            "children": [
                "<androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)>",
            "children": [
                "<androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>",
            "children": [
                "<androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.activity.ComponentActivity: void <init>()>",
            "children": [
                "<androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.activity.ComponentActivity: void onBackPressed()>"
        },
        {
            "entry_point": "Entry-point: <androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.activity.ComponentActivity: java.lang.Object onRetainNonConfigurationInstance()>",
            "children": [
                "<androidx.activity.ComponentActivity$NonConfigurationInstances: void <init>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)>",
            "children": [
                "<androidx.lifecycle.Lifecycle$State: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.core.app.ComponentActivity: void <init>()>",
            "children": [
                "<androidx.collection.SimpleArrayMap: void <init>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.core.app.ComponentActivity: boolean dispatchKeyEvent(android.view.KeyEvent)>",
            "children": [
                "<androidx.core.view.KeyEventDispatcher: boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.core.app.ComponentActivity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>",
            "children": [
                "<androidx.core.view.KeyEventDispatcher: boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.core.app.ComponentActivity: void onSaveInstanceState(android.os.Bundle)>",
            "children": [
                "<androidx.lifecycle.Lifecycle$State: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.applovin.sdk.AppLovinWebViewActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.sdk.AppLovinWebViewActivity: void onBackPressed()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.sdk.AppLovinWebViewActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.applovin.impl.sdk.utils.o: boolean b(java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void <clinit>()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void <init>()>",
            "children": [
                "<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onBackPressed()>",
            "children": [
                "<com.applovin.impl.sdk.utils.r: boolean f(android.content.Context)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onConfigurationChanged(android.content.res.Configuration)>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<android.webkit.WebView: void setDataDirectorySuffix(java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onDestroy()>",
            "children": [
                "<android.app.Activity: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: boolean onKeyDown(int,android.view.KeyEvent)>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onLowMemory()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onPause()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onResume()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onStop()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onWindowFocusChanged(boolean)>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.adview.AppLovinInterstitialActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.adview.s: void <init>()>",
            "children": [
                "<java.util.HashSet: void <init>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.adview.s: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.applovin.impl.a.h: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.adview.s: void onPause()>",
            "children": [
                "<com.applovin.impl.a.a$c: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.adview.s: void onResume()>",
            "children": [
                "<com.applovin.impl.a.a$c: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.adview.o: void <clinit>()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.adview.o: void <init>()>",
            "children": [
                "<android.os.Looper: android.os.Looper getMainLooper()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.adview.o: void onBackPressed()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.adview.o: void onCreate(android.os.Bundle)>",
            "children": [
                "<android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.adview.o: void onDestroy()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.adview.o: void onPause()>",
            "children": [
                "<java.lang.System: long currentTimeMillis()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.adview.o: void onResume()>",
            "children": [
                "<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.adview.o: void onSaveInstanceState(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.adview.o: void onWindowFocusChanged(boolean)>",
            "children": [
                "<com.applovin.impl.sdk.r: void f(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.applovin.mediation.MaxDebuggerAdUnitDetailActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.a.a: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.a.a: void onCreate(android.os.Bundle)>",
            "children": [
                "<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.a.a: void onDestroy()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.mediation.MaxDebuggerAdUnitsListActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.a.c: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.a.c: void onCreate(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.mediation.MaxDebuggerActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.b.a: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.b.a: void onCreate(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.b.a: boolean onCreateOptionsMenu(android.view.Menu)>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.b.a: void onDestroy()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.b.a: boolean onOptionsItemSelected(android.view.MenuItem)>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.b.a: void onStart()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.mediation.MaxDebuggerTestLiveNetworkActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.e.a: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.e.a: void onCreate(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.mediation.MaxDebuggerDetailActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.c.a: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.c.a: void onCreate(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.mediation.MaxDebuggerMultiAdActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.testmode.a: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.testmode.a: void onCreate(android.os.Bundle)>",
            "children": [
                "<java.lang.StringBuilder: void <init>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.testmode.a: void onDestroy()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.a: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.a: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.applovin.impl.sdk.utils.r: boolean e(android.content.Context)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.facebook.CustomTabActivity: void <clinit>()>",
            "children": [
                "<android.app.Activity: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.facebook.CustomTabActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.CustomTabActivity: void onActivityResult(int,int,android.content.Intent)>",
            "children": [
                "<androidx.localbroadcastmanager.content.LocalBroadcastManager: androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.facebook.CustomTabActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.facebook.CustomTabMainActivity: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.facebook.CustomTabActivity: void onDestroy()>",
            "children": [
                "<androidx.localbroadcastmanager.content.LocalBroadcastManager: androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.facebook.CustomTabMainActivity: void <clinit>()>",
            "children": [
                "<android.app.Activity: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.facebook.CustomTabMainActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.CustomTabMainActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<androidx.localbroadcastmanager.content.LocalBroadcastManager: androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.facebook.CustomTabMainActivity: void onNewIntent(android.content.Intent)>",
            "children": [
                "<androidx.localbroadcastmanager.content.LocalBroadcastManager: androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.facebook.CustomTabMainActivity: void onResume()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.unity.FBUnityLoginActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.unity.FBUnityLoginActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.facebook.unity.FBLogin: void loginWithReadPermissions(java.lang.String,com.facebook.unity.FBUnityLoginActivity)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.facebook.unity.FBUnityCreateGameGroupActivity: void <clinit>()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.unity.FBUnityCreateGameGroupActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.unity.FBUnityCreateGameGroupActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.facebook.unity.FBUnityDialogsActivity: void <clinit>()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.unity.FBUnityDialogsActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.unity.FBUnityDialogsActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<android.util.Log: int e(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.facebook.unity.FBUnityGameRequestActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.unity.FBUnityGameRequestActivity: void onCreate(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.unity.FBUnityGamingServicesFriendFinderActivity: void <clinit>()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.unity.FBUnityGamingServicesFriendFinderActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.unity.FBUnityGamingServicesFriendFinderActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<android.util.Log: int e(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.facebook.unity.FBUnityJoinGameGroupActivity: void <clinit>()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.unity.FBUnityJoinGameGroupActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.unity.FBUnityJoinGameGroupActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.facebook.internal.FacebookDialogBase: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.facebook.unity.BaseActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.unity.BaseActivity: void onActivityResult(int,int,android.content.Intent)>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.unity.BaseActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.facebook.FacebookSdk: void sdkInitialize(android.content.Context)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.facebook.unity.FBUnityAppLinkActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.unity.FBUnityDeepLinkingActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.unity.FBUnityAppLinkBaseActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.unity.FBUnityAppLinkBaseActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<android.util.Log: int v(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.ads.AdActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.ads.AdActivity: void onActivityResult(int,int,android.content.Intent)>",
            "children": [
                "<com.google.android.gms.internal.ads.zzbbk: void zzl(java.lang.String,java.lang.Throwable)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.ads.AdActivity: void onBackPressed()>",
            "children": [
                "<com.google.android.gms.internal.ads.zzbbk: void zzl(java.lang.String,java.lang.Throwable)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.ads.AdActivity: void onConfigurationChanged(android.content.res.Configuration)>",
            "children": [
                "<com.google.android.gms.internal.ads.zzbbk: void zzl(java.lang.String,java.lang.Throwable)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.ads.AdActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.google.android.gms.internal.ads.zzbbk: void zzl(java.lang.String,java.lang.Throwable)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.ads.AdActivity: void onDestroy()>",
            "children": [
                "<com.google.android.gms.internal.ads.zzbbk: void zzl(java.lang.String,java.lang.Throwable)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.ads.AdActivity: void onPause()>",
            "children": [
                "<com.google.android.gms.internal.ads.zzbbk: void zzl(java.lang.String,java.lang.Throwable)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.ads.AdActivity: void onRestart()>",
            "children": [
                "<com.google.android.gms.internal.ads.zzbbk: void zzl(java.lang.String,java.lang.Throwable)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.ads.AdActivity: void onResume()>",
            "children": [
                "<com.google.android.gms.internal.ads.zzbbk: void zzl(java.lang.String,java.lang.Throwable)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.ads.AdActivity: void onSaveInstanceState(android.os.Bundle)>",
            "children": [
                "<com.google.android.gms.internal.ads.zzbbk: void zzl(java.lang.String,java.lang.Throwable)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.ads.AdActivity: void onStart()>",
            "children": [
                "<com.google.android.gms.internal.ads.zzbbk: void zzl(java.lang.String,java.lang.Throwable)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.ads.AdActivity: void onStop()>",
            "children": [
                "<com.google.android.gms.internal.ads.zzbbk: void zzl(java.lang.String,java.lang.Throwable)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.ads.AdActivity: void onUserLeaveHint()>",
            "children": [
                "<com.google.android.gms.internal.ads.zzbbk: void zzl(java.lang.String,java.lang.Throwable)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.ads.AdActivity: void setContentView(int)>"
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.ads.AdActivity: void setContentView(android.view.View)>"
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.ads.AdActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>"
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.common.api.GoogleApiActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.common.api.GoogleApiActivity: void onActivityResult(int,int,android.content.Intent)>",
            "children": [
                "<com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.api.internal.GoogleApiManager zaa(android.content.Context)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.common.api.GoogleApiActivity: void onCreate(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.common.api.GoogleApiActivity: void onSaveInstanceState(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.google.firebase.MessagingUnityPlayerActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.google.firebase.MessagingUnityPlayerActivity: void onCreate(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.google.firebase.MessagingUnityPlayerActivity: void onNewIntent(android.content.Intent)>",
            "children": [
                "<com.google.firebase.messaging.MessageForwardingService: void enqueueWork(android.content.Context,android.content.Intent)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.prime31.UnityPlayerActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.prime31.UnityPlayerNativeActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.prime31.UnityPlayerNativeActivity: void onActivityResult(int,int,android.content.Intent)>"
        },
        {
            "entry_point": "Entry-point: <com.prime31.UnityPlayerNativeActivity: void onBackPressed()>"
        },
        {
            "entry_point": "Entry-point: <com.prime31.UnityPlayerNativeActivity: void onConfigurationChanged(android.content.res.Configuration)>"
        },
        {
            "entry_point": "Entry-point: <com.prime31.UnityPlayerNativeActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<java.lang.StringBuilder: void <init>(java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.prime31.UnityPlayerNativeActivity: void onDestroy()>"
        },
        {
            "entry_point": "Entry-point: <com.prime31.UnityPlayerNativeActivity: boolean onKeyDown(int,android.view.KeyEvent)>"
        },
        {
            "entry_point": "Entry-point: <com.prime31.UnityPlayerNativeActivity: boolean onKeyUp(int,android.view.KeyEvent)>"
        },
        {
            "entry_point": "Entry-point: <com.prime31.UnityPlayerNativeActivity: void onNewIntent(android.content.Intent)>"
        },
        {
            "entry_point": "Entry-point: <com.prime31.UnityPlayerNativeActivity: void onPause()>"
        },
        {
            "entry_point": "Entry-point: <com.prime31.UnityPlayerNativeActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>",
            "children": [
                "<android.os.Build$VERSION: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.prime31.UnityPlayerNativeActivity: void onRestart()>"
        },
        {
            "entry_point": "Entry-point: <com.prime31.UnityPlayerNativeActivity: void onRestoreInstanceState(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.prime31.UnityPlayerNativeActivity: void onResume()>"
        },
        {
            "entry_point": "Entry-point: <com.prime31.UnityPlayerNativeActivity: void onSaveInstanceState(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.prime31.UnityPlayerNativeActivity: void onStart()>"
        },
        {
            "entry_point": "Entry-point: <com.prime31.UnityPlayerNativeActivity: void onStop()>"
        },
        {
            "entry_point": "Entry-point: <com.prime31.UnityPlayerNativeActivity: void onTrimMemory(int)>"
        },
        {
            "entry_point": "Entry-point: <com.prime31.UnityPlayerNativeActivity: void onWindowFocusChanged(boolean)>"
        },
        {
            "entry_point": "Entry-point: <com.ryanwebb.androidscreenshot.MainActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.ryanwebb.androidscreenshot.MainActivity: void onCreate(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.unity.udp.sdk.UdpExtendedActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.unity.udp.sdk.UdpExtendedActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.unity.udp.sdk.ActivityExtension: void onCreate()>"
            ]
        },
        {
            "entry_point": "Entry-point: <net.gree.unitywebview.CUnityPlayerActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <net.gree.unitywebview.CUnityPlayerActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<android.view.View: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.unity3d.player.UnityPlayerActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.player.UnityPlayerActivity: boolean dispatchKeyEvent(android.view.KeyEvent)>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onConfigurationChanged(android.content.res.Configuration)>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<android.view.View: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onDestroy()>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.player.UnityPlayerActivity: boolean onGenericMotionEvent(android.view.MotionEvent)>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.player.UnityPlayerActivity: boolean onKeyDown(int,android.view.KeyEvent)>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.player.UnityPlayerActivity: boolean onKeyUp(int,android.view.KeyEvent)>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onLowMemory()>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onNewIntent(android.content.Intent)>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onPause()>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onResume()>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.player.UnityPlayerActivity: boolean onTouchEvent(android.view.MotionEvent)>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onTrimMemory(int)>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onWindowFocusChanged(boolean)>"
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.InterstitialActivity: void <clinit>()>"
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.InterstitialActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.InterstitialActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.ironsource.sdk.utils.Logger: void i(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.InterstitialActivity: void onPause()>",
            "children": [
                "<com.ironsource.sdk.utils.Logger: void i(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.InterstitialActivity: void onResume()>",
            "children": [
                "<com.ironsource.sdk.utils.Logger: void i(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void <clinit>()>"
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void <init>()>",
            "children": [
                "<com.ironsource.sdk.controller.ControllerActivity$1: void <init>(com.ironsource.sdk.controller.ControllerActivity)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void onBackPressed()>",
            "children": [
                "<com.ironsource.sdk.handlers.BackButtonHandler: com.ironsource.sdk.handlers.BackButtonHandler getInstance()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void onDestroy()>",
            "children": [
                "<com.ironsource.sdk.utils.Logger: void i(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: boolean onKeyDown(int,android.view.KeyEvent)>"
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void onPause()>",
            "children": [
                "<com.ironsource.sdk.utils.Logger: void i(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void onResume()>",
            "children": [
                "<com.ironsource.sdk.utils.Logger: void i(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void onSaveInstanceState(android.os.Bundle)>",
            "children": [
                "<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void onUserLeaveHint()>",
            "children": [
                "<com.ironsource.sdk.utils.Logger: void i(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void onWindowFocusChanged(boolean)>"
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void setRequestedOrientation(int)>",
            "children": [
                "<com.ironsource.sdk.utils.Logger: void i(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: void <clinit>()>",
            "children": [
                "<com.ironsource.sdk.utils.SDKUtils: int generateViewId()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: void <init>()>",
            "children": [
                "<android.os.Handler: void <init>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: void finish()>"
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: void onBackPressed()>"
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.ironsource.sdk.agent.IronSourceAdsPublisherAgent: com.ironsource.sdk.agent.IronSourceAdsPublisherAgent getInstance(android.content.Context)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: void onDestroy()>"
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: boolean onKeyDown(int,android.view.KeyEvent)>"
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: void onPause()>"
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: void onResume()>"
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: void onWindowFocusChanged(boolean)>"
        },
        {
            "entry_point": "Entry-point: <com.prime31.EtceteraProxyActivity: void <clinit>()>"
        },
        {
            "entry_point": "Entry-point: <com.prime31.EtceteraProxyActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.prime31.EtceteraProxyActivity: void onActivityResult(int,int,android.content.Intent)>",
            "children": [
                "<com.prime31.EtceteraPluginBase: com.prime31.EtceteraPlugin instance()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.prime31.EtceteraProxyActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<android.util.Log: int i(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.prime31.P31VideoPlayerActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.prime31.P31VideoPlayerActivity: void onConfigurationChanged(android.content.res.Configuration)>"
        },
        {
            "entry_point": "Entry-point: <com.prime31.P31VideoPlayerActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<android.util.Log: int i(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.prime31.P31VideoPlayerActivity: void onDestroy()>",
            "children": [
                "<android.util.Log: int i(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.prime31.P31VideoPlayerActivity: void onPause()>",
            "children": [
                "<android.util.Log: int i(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.prime31.P31VideoPlayerActivity: void onResume()>",
            "children": [
                "<android.util.Log: int i(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.prime31.P31VideoPlayerActivity: java.lang.Object onRetainNonConfigurationInstance()>",
            "children": [
                "<android.os.Bundle: void <init>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.prime31.P31VideoPlayerActivity: void onStop()>",
            "children": [
                "<android.util.Log: int i(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.prime31.P31VideoPlayerActivity: boolean onTouchEvent(android.view.MotionEvent)>",
            "children": [
                "<android.util.Log: int i(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.prime31.WebViewActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.prime31.WebViewActivity: void onBackPressed()>",
            "children": [
                "<com.prime31.EtceteraPluginBase: com.prime31.EtceteraPlugin instance()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.prime31.WebViewActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<android.app.ProgressDialog: void <init>(android.content.Context)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.prime31.WebViewActivity: void onPause()>",
            "children": [
                "<java.lang.Class: java.lang.Class forName(java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.unity.purchasing.googleplay.VRPurchaseActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.unity.purchasing.googleplay.PurchaseActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.unity.purchasing.googleplay.PurchaseActivity: void onActivityResult(int,int,android.content.Intent)>"
        },
        {
            "entry_point": "Entry-point: <com.unity.purchasing.googleplay.PurchaseActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.unity.purchasing.googleplay.GooglePlayPurchasing: boolean ContinuePurchase(android.app.Activity,java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.unity.purchasing.googleplay.PurchaseActivity: void onDestroy()>"
        },
        {
            "entry_point": "Entry-point: <com.unity.udp.udpsandbox.LoginActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.unity.udp.udpsandbox.LoginActivity: void onCreate(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.unity.udp.udpsandbox.LoginActivity: void onDestroy()>"
        },
        {
            "entry_point": "Entry-point: <com.unity.udp.udpsandbox.UDPPurchasing$LoginHelperActivity: void <init>()>",
            "children": [
                "<com.unity.udp.udpsandbox.UDPPurchasing: com.unity.udp.udpsandbox.IUDPPurchaseCallback access$200(com.unity.udp.udpsandbox.UDPPurchasing)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.unity.udp.udpsandbox.UDPPurchasing$LoginHelperActivity: void onActivityResult(int,int,android.content.Intent)>"
        },
        {
            "entry_point": "Entry-point: <com.unity.udp.udpsandbox.UDPPurchasing$LoginHelperActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.unity3d.services.ads.adunit.AdUnitSoftwareActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.services.ads.adunit.AdUnitTransparentSoftwareActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.services.ads.adunit.AdUnitTransparentActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.services.ads.adunit.AdUnitTransparentActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<android.graphics.drawable.ColorDrawable: void <init>(int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<java.lang.Integer: java.lang.Integer valueOf(int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onDestroy()>",
            "children": [
                "<com.unity3d.services.core.api.Intent: void removeActiveActivity(android.app.Activity)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: boolean onKeyDown(int,android.view.KeyEvent)>",
            "children": [
                "<java.lang.Integer: java.lang.Integer valueOf(int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onPause()>",
            "children": [
                "<java.lang.Integer: java.lang.Integer valueOf(int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>",
            "children": [
                "<com.unity3d.services.core.webview.WebViewApp: com.unity3d.services.core.webview.WebViewApp getCurrentApp()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onResume()>",
            "children": [
                "<java.lang.Integer: java.lang.Integer valueOf(int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onSaveInstanceState(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onStart()>",
            "children": [
                "<java.lang.Integer: java.lang.Integer valueOf(int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onStop()>",
            "children": [
                "<java.lang.Integer: java.lang.Integer valueOf(int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onWindowFocusChanged(boolean)>",
            "children": [
                "<java.lang.Integer: java.lang.Integer valueOf(int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.vk.api.sdk.ui.VKCaptchaActivity: void <clinit>()>",
            "children": [
                "<android.app.Activity: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.vk.api.sdk.ui.VKCaptchaActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.vk.api.sdk.ui.VKCaptchaActivity: void finish()>"
        },
        {
            "entry_point": "Entry-point: <com.vk.api.sdk.ui.VKCaptchaActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.vk.api.sdk.ui.VKCaptchaActivity: void onDestroy()>",
            "children": [
                "<com.vk.api.sdk.utils.VKValidationLocker: void signal()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.vk.api.sdk.ui.VKConfirmationActivity: void <clinit>()>",
            "children": [
                "<android.app.Activity: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.vk.api.sdk.ui.VKConfirmationActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.vk.api.sdk.ui.VKConfirmationActivity: void finish()>",
            "children": [
                "<com.vk.api.sdk.utils.VKValidationLocker: void signal()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.vk.api.sdk.ui.VKConfirmationActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.vk.api.sdk.ui.VKConfirmationActivity$onCreate$3: void <init>(com.vk.api.sdk.ui.VKConfirmationActivity)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.vk.api.sdk.ui.VKConfirmationActivity: void onDestroy()>",
            "children": [
                "<com.vk.api.sdk.utils.VKValidationLocker: void signal()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.vk.api.sdk.ui.VKWebViewAuthActivity: void <clinit>()>",
            "children": [
                "<android.app.Activity: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.vk.api.sdk.ui.VKWebViewAuthActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.vk.api.sdk.ui.VKWebViewAuthActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.vk.api.sdk.ui.VKWebViewAuthActivity: void onDestroy()>",
            "children": [
                "<kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>"
            ]
        }
    ],
    "functions": {
        "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void finish()>": {
            "code": "void  finish()  {\n            AudienceNetworkActivity.super.finish();\n        }",
            "children": []
        },
        "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onActivityResult(int,int,android.content.Intent)>": {
            "code": "void  onActivityResult(int,int,android.content.Intent)  {\n            AudienceNetworkActivity.super.onActivityResult(i, i2, intent);\n        }",
            "children": []
        },
        "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n            AudienceNetworkActivity.super.onBackPressed();\n        }",
            "children": []
        },
        "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onConfigurationChanged(android.content.res.Configuration)>": {
            "code": "void  onConfigurationChanged(android.content.res.Configuration)  {\n            AudienceNetworkActivity.super.onConfigurationChanged(configuration);\n        }",
            "children": []
        },
        "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n            AudienceNetworkActivity.super.onCreate(bundle);\n        }",
            "children": [
                "<com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: com.facebook.ads.internal.dynamicloading.DynamicLoader makeLoader(android.content.Context)>"
            ]
        },
        "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n            AudienceNetworkActivity.super.onDestroy();\n        }",
            "children": []
        },
        "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onPause()>": {
            "code": "void  onPause()  {\n            AudienceNetworkActivity.super.onPause();\n        }",
            "children": []
        },
        "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onResume()>": {
            "code": "void  onResume()  {\n            AudienceNetworkActivity.super.onResume();\n        }",
            "children": []
        },
        "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onSaveInstanceState(android.os.Bundle)>": {
            "code": "void  onSaveInstanceState(android.os.Bundle)  {\n            AudienceNetworkActivity.super.onSaveInstanceState(bundle);\n        }",
            "children": []
        },
        "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onStart()>": {
            "code": "void  onStart()  {\n            AudienceNetworkActivity.super.onStart();\n        }",
            "children": []
        },
        "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onStop()>": {
            "code": "void  onStop()  {\n            AudienceNetworkActivity.super.onStop();\n        }",
            "children": []
        },
        "Entry-point: <com.facebook.ads.AudienceNetworkActivity: boolean onTouchEvent(android.view.MotionEvent)>": {
            "code": "boolean  onTouchEvent(android.view.MotionEvent)  {\n            return AudienceNetworkActivity.super.onTouchEvent(motionEvent);\n        }",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)>": {
            "code": "void  addContentView(android.view.View,android.view.ViewGroup$LayoutParams)  {\n        getDelegate().addContentView(view, layoutParams);\n    }",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void attachBaseContext(android.content.Context)>": {
            "code": "void  attachBaseContext(android.content.Context)  {\n        super.attachBaseContext(getDelegate().attachBaseContext2(context));\n    }",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void closeOptionsMenu()>": {
            "code": "void  closeOptionsMenu()  {\n        ActionBar supportActionBar = getSupportActionBar();\n        if (getWindow().hasFeature(0)) {\n            if (supportActionBar == null || !supportActionBar.closeOptionsMenu()) {\n                super.closeOptionsMenu();\n            }\n        }\n    }",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: boolean dispatchKeyEvent(android.view.KeyEvent)>": {
            "code": "boolean  dispatchKeyEvent(android.view.KeyEvent)  {\n        int keyCode = keyEvent.getKeyCode();\n        ActionBar supportActionBar = getSupportActionBar();\n        if (keyCode == 82 && supportActionBar != null && supportActionBar.onMenuKeyEvent(keyEvent)) {\n            return true;\n        }\n        return super.dispatchKeyEvent(keyEvent);\n    }",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void invalidateOptionsMenu()>": {
            "code": "void  invalidateOptionsMenu()  {\n        getDelegate().invalidateOptionsMenu();\n    }",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onConfigurationChanged(android.content.res.Configuration)>": {
            "code": "void  onConfigurationChanged(android.content.res.Configuration)  {\n        super.onConfigurationChanged(configuration);\n        if (this.mResources != null) {\n            this.mResources.updateConfiguration(configuration, super.getResources().getDisplayMetrics());\n        }\n        getDelegate().onConfigurationChanged(configuration);\n    }",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onContentChanged()>": {
            "code": "void  onContentChanged()  {\n        onSupportContentChanged();\n    }",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        AppCompatDelegate delegate = getDelegate();\n        delegate.installViewFactory();\n        delegate.onCreate(bundle);\n        super.onCreate(bundle);\n    }",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        super.onDestroy();\n        getDelegate().onDestroy();\n    }",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: boolean onKeyDown(int,android.view.KeyEvent)>": {
            "code": "boolean  onKeyDown(int,android.view.KeyEvent)  {\n        if (performMenuItemShortcut(keyEvent)) {\n            return true;\n        }\n        return super.onKeyDown(i, keyEvent);\n    }",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: boolean onMenuItemSelected(int,android.view.MenuItem)>": {
            "code": "boolean  onMenuItemSelected(int,android.view.MenuItem)  {\n        if (super.onMenuItemSelected(i, menuItem)) {\n            return true;\n        }\n        ActionBar supportActionBar = getSupportActionBar();\n        if (menuItem.getItemId() != 16908332 || supportActionBar == null || (supportActionBar.getDisplayOptions() & 4) == 0) {\n            return false;\n        }\n        return onSupportNavigateUp();\n    }",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: boolean onMenuOpened(int,android.view.Menu)>": {
            "code": "boolean  onMenuOpened(int,android.view.Menu)  {\n        return super.onMenuOpened(i, menu);\n    }",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onPanelClosed(int,android.view.Menu)>": {
            "code": "void  onPanelClosed(int,android.view.Menu)  {\n        super.onPanelClosed(i, menu);\n    }",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onPostCreate(android.os.Bundle)>": {
            "code": "void  onPostCreate(android.os.Bundle)  {\n        super.onPostCreate(bundle);\n        getDelegate().onPostCreate(bundle);\n    }",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onPostResume()>": {
            "code": "void  onPostResume()  {\n        super.onPostResume();\n        getDelegate().onPostResume();\n    }",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onSaveInstanceState(android.os.Bundle)>": {
            "code": "void  onSaveInstanceState(android.os.Bundle)  {\n        super.onSaveInstanceState(bundle);\n        getDelegate().onSaveInstanceState(bundle);\n    }",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onStart()>": {
            "code": "void  onStart()  {\n        super.onStart();\n        getDelegate().onStart();\n    }",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onStop()>": {
            "code": "void  onStop()  {\n        super.onStop();\n        getDelegate().onStop();\n    }",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onTitleChanged(java.lang.CharSequence,int)>": {
            "code": "void  onTitleChanged(java.lang.CharSequence,int)  {\n        super.onTitleChanged(charSequence, i);\n        getDelegate().setTitle(charSequence);\n    }",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void openOptionsMenu()>": {
            "code": "void  openOptionsMenu()  {\n        ActionBar supportActionBar = getSupportActionBar();\n        if (getWindow().hasFeature(0)) {\n            if (supportActionBar == null || !supportActionBar.openOptionsMenu()) {\n                super.openOptionsMenu();\n            }\n        }\n    }",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void setContentView(int)>": {
            "code": "void  setContentView(int)  {\n        getDelegate().setContentView(i);\n    }",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)>": {
            "code": "void  setContentView(android.view.View)  {\n        getDelegate().setContentView(i);\n    }",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>": {
            "code": "void  setContentView(android.view.View,android.view.ViewGroup$LayoutParams)  {\n        getDelegate().setContentView(i);\n    }",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void setTheme(int)>": {
            "code": "void  setTheme(int)  {\n        super.setTheme(i);\n        getDelegate().setTheme(i);\n    }",
            "children": []
        },
        "Entry-point: <com.facebook.FacebookActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": {
            "code": "void  dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])  {\n        if (CrashShieldHandler.isObjectCrashing(this)) {\n            return;\n        }\n        try {\n            if (EndToEndDumpsysHelper.maybeDump(str, printWriter, strArr)) {\n                return;\n            }\n            super.dump(str, fileDescriptor, printWriter, strArr);\n        } catch (Throwable th) {\n            CrashShieldHandler.handleThrowable(th, this);\n        }\n    }",
            "children": [
                "<com.facebook.internal.instrument.crashshield.CrashShieldHandler: void handleThrowable(java.lang.Throwable,java.lang.Object)>"
            ]
        },
        "Entry-point: <com.facebook.FacebookActivity: void onConfigurationChanged(android.content.res.Configuration)>": {
            "code": "void  onConfigurationChanged(android.content.res.Configuration)  {\n        super.onConfigurationChanged(configuration);\n        Fragment fragment = this.singleFragment;\n        if (fragment != null) {\n            fragment.onConfigurationChanged(configuration);\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.facebook.FacebookActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        Intent intent = getIntent();\n        if (!FacebookSdk.isInitialized()) {\n            Utility.logd(TAG, \"Facebook SDK not initialized. Make sure you call sdkInitialize inside your Application's onCreate method.\");\n            FacebookSdk.sdkInitialize(getApplicationContext());\n        }\n        setContentView(R.layout.com_facebook_activity_layout);\n        if (PASS_THROUGH_CANCEL_ACTION.equals(intent.getAction())) {\n            handlePassThroughError();\n        } else {\n            this.singleFragment = getFragment();\n        }\n    }",
            "children": [
                "<com.facebook.FacebookSdk: void sdkInitialize(android.content.Context)>"
            ]
        },
        "Entry-point: <com.google.android.gms.auth.api.signin.internal.SignInHubActivity: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": {
            "code": "boolean  dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)  {\n        return true;\n    }",
            "children": []
        },
        "Entry-point: <com.google.android.gms.auth.api.signin.internal.SignInHubActivity: void onActivityResult(int,int,android.content.Intent)>": {
            "code": "void  onActivityResult(int,int,android.content.Intent)  {\n        if (this.zzcp) {\n            return;\n        }\n        setResult(0);\n        if (i != 40962) {\n            return;\n        }\n        if (intent != null) {\n            SignInAccount signInAccount = (SignInAccount) intent.getParcelableExtra(GoogleSignInApi.EXTRA_SIGN_IN_ACCOUNT);\n            if (signInAccount != null && signInAccount.getGoogleSignInAccount() != null) {\n                GoogleSignInAccount googleSignInAccount = signInAccount.getGoogleSignInAccount();\n                zzo.zzd(this).zzc(this.zzcq.zzo(), (GoogleSignInAccount) zzan.checkNotNull(googleSignInAccount));\n                intent.removeExtra(GoogleSignInApi.EXTRA_SIGN_IN_ACCOUNT);\n                intent.putExtra(\"googleSignInAccount\", googleSignInAccount);\n                this.zzcr = true;\n                this.zzcs = i2;\n                this.zzct = intent;\n                zzq();\n                return;\n            } else if (intent.hasExtra(IronSourceConstants.EVENTS_ERROR_CODE)) {\n                int intExtra = intent.getIntExtra(IronSourceConstants.EVENTS_ERROR_CODE, 8);\n                if (intExtra == 13) {\n                    intExtra = GoogleSignInStatusCodes.SIGN_IN_CANCELLED;\n                }\n                zzc(intExtra);\n                return;\n            }\n        }\n        zzc(8);\n    }",
            "children": [
                "<com.google.android.gms.internal.auth-api.zzan: java.lang.Object checkNotNull(java.lang.Object)>"
            ]
        },
        "Entry-point: <com.google.android.gms.auth.api.signin.internal.SignInHubActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        Intent intent = getIntent();\n        String str = (String) zzan.checkNotNull(intent.getAction());\n        if (\"com.google.android.gms.auth.NO_IMPL\".equals(str)) {\n            zzc(GoogleSignInStatusCodes.SIGN_IN_FAILED);\n        } else if (!str.equals(\"com.google.android.gms.auth.GOOGLE_SIGN_IN\") && !str.equals(\"com.google.android.gms.auth.APPAUTH_SIGN_IN\")) {\n            String valueOf = String.valueOf(intent.getAction());\n            Log.e(\"AuthSignInClient\", valueOf.length() != 0 ? \"Unknown action: \".concat(valueOf) : new String(\"Unknown action: \"));\n            finish();\n        } else {\n            SignInConfiguration signInConfiguration = (SignInConfiguration) ((Bundle) zzan.checkNotNull(intent.getBundleExtra(\"config\"))).getParcelable(\"config\");\n            if (signInConfiguration == null) {\n                Log.e(\"AuthSignInClient\", \"Activity started with invalid configuration.\");\n                setResult(0);\n                finish();\n                return;\n            }\n            this.zzcq = signInConfiguration;\n            if (bundle == null) {\n                if (zzco) {\n                    setResult(0);\n                    zzc(GoogleSignInStatusCodes.SIGN_IN_CURRENTLY_IN_PROGRESS);\n                    return;\n                }\n                zzco = true;\n                Intent intent2 = new Intent(str);\n                if (str.equals(\"com.google.android.gms.auth.GOOGLE_SIGN_IN\")) {\n                    intent2.setPackage(\"com.google.android.gms\");\n                } else {\n                    intent2.setPackage(getPackageName());\n                }\n                intent2.putExtra(\"config\", this.zzcq);\n                try {\n                    startActivityForResult(intent2, 40962);\n                    return;\n                } catch (ActivityNotFoundException unused) {\n                    this.zzcp = true;\n                    Log.w(\"AuthSignInClient\", \"Could not launch sign in Intent. Google Play Service is probably being updated...\");\n                    zzc(17);\n                    return;\n                }\n            }\n            this.zzcr = bundle.getBoolean(\"signingInGoogleApiClients\");\n            if (this.zzcr) {\n                this.zzcs = bundle.getInt(\"signInResultCode\");\n                this.zzct = (Intent) zzan.checkNotNull((Intent) bundle.getParcelable(\"signInResultData\"));\n                zzq();\n            }\n        }\n    }",
            "children": [
                "<com.google.android.gms.internal.auth-api.zzan: java.lang.Object checkNotNull(java.lang.Object)>"
            ]
        },
        "Entry-point: <com.google.android.gms.auth.api.signin.internal.SignInHubActivity: void onSaveInstanceState(android.os.Bundle)>": {
            "code": "void  onSaveInstanceState(android.os.Bundle)  {\n        super.onSaveInstanceState(bundle);\n        bundle.putBoolean(\"signingInGoogleApiClients\", this.zzcr);\n        if (this.zzcr) {\n            bundle.putInt(\"signInResultCode\", this.zzcs);\n            bundle.putParcelable(\"signInResultData\", this.zzct);\n        }\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": {
            "code": "void  dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])  {\n        super.dump(str, fileDescriptor, printWriter, strArr);\n        printWriter.print(str);\n        printWriter.print(\"Local FragmentActivity \");\n        printWriter.print(Integer.toHexString(System.identityHashCode(this)));\n        printWriter.println(\" State:\");\n        String str2 = str + \"  \";\n        printWriter.print(str2);\n        printWriter.print(\"mCreated=\");\n        printWriter.print(this.mCreated);\n        printWriter.print(\" mResumed=\");\n        printWriter.print(this.mResumed);\n        printWriter.print(\" mStopped=\");\n        printWriter.print(this.mStopped);\n        if (getApplication() != null) {\n            LoaderManager.getInstance(this).dump(str2, fileDescriptor, printWriter, strArr);\n        }\n        this.mFragments.getSupportFragmentManager().dump(str, fileDescriptor, printWriter, strArr);\n    }",
            "children": [
                "<androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>"
            ]
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)>": {
            "code": "void  onActivityResult(int,int,android.content.Intent)  {\n        this.mFragments.noteStateNotSaved();\n        int i3 = i >> 16;\n        if (i3 != 0) {\n            int i4 = i3 - 1;\n            String str = this.mPendingFragmentActivityResults.get(i4);\n            this.mPendingFragmentActivityResults.remove(i4);\n            if (str == null) {\n                Log.w(TAG, \"Activity result delivered for unknown Fragment.\");\n                return;\n            }\n            Fragment findFragmentByWho = this.mFragments.findFragmentByWho(str);\n            if (findFragmentByWho == null) {\n                Log.w(TAG, \"Activity result no fragment exists for who: \" + str);\n                return;\n            }\n            findFragmentByWho.onActivityResult(i & SupportMenu.USER_MASK, i2, intent);\n            return;\n        }\n        ActivityCompat.PermissionCompatDelegate permissionCompatDelegate = ActivityCompat.getPermissionCompatDelegate();\n        if (permissionCompatDelegate == null || !permissionCompatDelegate.onActivityResult(this, i, i2, intent)) {\n            super.onActivityResult(i, i2, intent);\n        }\n    }",
            "children": [
                "<androidx.core.app.ActivityCompat: androidx.core.app.ActivityCompat$PermissionCompatDelegate getPermissionCompatDelegate()>"
            ]
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)>": {
            "code": "void  onConfigurationChanged(android.content.res.Configuration)  {\n        super.onConfigurationChanged(configuration);\n        this.mFragments.noteStateNotSaved();\n        this.mFragments.dispatchConfigurationChanged(configuration);\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        this.mFragments.attachHost(null);\n        if (bundle != null) {\n            this.mFragments.restoreSaveState(bundle.getParcelable(FRAGMENTS_TAG));\n            if (bundle.containsKey(NEXT_CANDIDATE_REQUEST_INDEX_TAG)) {\n                this.mNextCandidateRequestIndex = bundle.getInt(NEXT_CANDIDATE_REQUEST_INDEX_TAG);\n                int[] intArray = bundle.getIntArray(ALLOCATED_REQUEST_INDICIES_TAG);\n                String[] stringArray = bundle.getStringArray(REQUEST_FRAGMENT_WHO_TAG);\n                if (intArray == null || stringArray == null || intArray.length != stringArray.length) {\n                    Log.w(TAG, \"Invalid requestCode mapping in savedInstanceState.\");\n                } else {\n                    this.mPendingFragmentActivityResults = new SparseArrayCompat<>(intArray.length);\n                    for (int i = 0; i < intArray.length; i++) {\n                        this.mPendingFragmentActivityResults.put(intArray[i], stringArray[i]);\n                    }\n                }\n            }\n        }\n        if (this.mPendingFragmentActivityResults == null) {\n            this.mPendingFragmentActivityResults = new SparseArrayCompat<>();\n            this.mNextCandidateRequestIndex = 0;\n        }\n        super.onCreate(bundle);\n        this.mFragmentLifecycleRegistry.handleLifecycleEvent(Lifecycle.Event.ON_CREATE);\n        this.mFragments.dispatchCreate();\n    }",
            "children": [
                "<android.util.Log: int w(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: boolean onCreatePanelMenu(int,android.view.Menu)>": {
            "code": "boolean  onCreatePanelMenu(int,android.view.Menu)  {\n        if (i == 0) {\n            return super.onCreatePanelMenu(i, menu) | this.mFragments.dispatchCreateOptionsMenu(menu, getMenuInflater());\n        }\n        return super.onCreatePanelMenu(i, menu);\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        super.onDestroy();\n        this.mFragments.dispatchDestroy();\n        this.mFragmentLifecycleRegistry.handleLifecycleEvent(Lifecycle.Event.ON_DESTROY);\n    }",
            "children": [
                "<androidx.lifecycle.Lifecycle$Event: void <clinit>()>"
            ]
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onLowMemory()>": {
            "code": "void  onLowMemory()  {\n        super.onLowMemory();\n        this.mFragments.dispatchLowMemory();\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)>": {
            "code": "boolean  onMenuItemSelected(int,android.view.MenuItem)  {\n        if (super.onMenuItemSelected(i, menuItem)) {\n            return true;\n        }\n        if (i != 0) {\n            if (i != 6) {\n                return false;\n            }\n            return this.mFragments.dispatchContextItemSelected(menuItem);\n        }\n        return this.mFragments.dispatchOptionsItemSelected(menuItem);\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onMultiWindowModeChanged(boolean)>": {
            "code": "void  onMultiWindowModeChanged(boolean)  {\n        this.mFragments.dispatchMultiWindowModeChanged(z);\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onNewIntent(android.content.Intent)>": {
            "code": "void  onNewIntent(android.content.Intent)  {\n        super.onNewIntent(intent);\n        this.mFragments.noteStateNotSaved();\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onPanelClosed(int,android.view.Menu)>": {
            "code": "void  onPanelClosed(int,android.view.Menu)  {\n        if (i == 0) {\n            this.mFragments.dispatchOptionsMenuClosed(menu);\n        }\n        super.onPanelClosed(i, menu);\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onPause()>": {
            "code": "void  onPause()  {\n        super.onPause();\n        this.mResumed = false;\n        this.mFragments.dispatchPause();\n        this.mFragmentLifecycleRegistry.handleLifecycleEvent(Lifecycle.Event.ON_PAUSE);\n    }",
            "children": [
                "<androidx.lifecycle.Lifecycle$Event: void <clinit>()>"
            ]
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onPictureInPictureModeChanged(boolean)>": {
            "code": "void  onPictureInPictureModeChanged(boolean)  {\n        this.mFragments.dispatchPictureInPictureModeChanged(z);\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onPostResume()>": {
            "code": "void  onPostResume()  {\n        super.onPostResume();\n        onResumeFragments();\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)>": {
            "code": "boolean  onPreparePanel(int,android.view.View,android.view.Menu)  {\n        if (i == 0) {\n            return onPrepareOptionsPanel(view, menu) | this.mFragments.dispatchPrepareOptionsMenu(menu);\n        }\n        return super.onPreparePanel(i, view, menu);\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>": {
            "code": "void  onRequestPermissionsResult(int,java.lang.String[],int[])  {\n        this.mFragments.noteStateNotSaved();\n        int i2 = (i >> 16) & SupportMenu.USER_MASK;\n        if (i2 != 0) {\n            int i3 = i2 - 1;\n            String str = this.mPendingFragmentActivityResults.get(i3);\n            this.mPendingFragmentActivityResults.remove(i3);\n            if (str == null) {\n                Log.w(TAG, \"Activity result delivered for unknown Fragment.\");\n                return;\n            }\n            Fragment findFragmentByWho = this.mFragments.findFragmentByWho(str);\n            if (findFragmentByWho == null) {\n                Log.w(TAG, \"Activity result no fragment exists for who: \" + str);\n                return;\n            }\n            findFragmentByWho.onRequestPermissionsResult(i & SupportMenu.USER_MASK, strArr, iArr);\n        }\n    }",
            "children": [
                "<android.util.Log: int w(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n        this.mResumed = true;\n        this.mFragments.noteStateNotSaved();\n        this.mFragments.execPendingActions();\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)>": {
            "code": "void  onSaveInstanceState(android.os.Bundle)  {\n        super.onSaveInstanceState(bundle);\n        markFragmentsCreated();\n        this.mFragmentLifecycleRegistry.handleLifecycleEvent(Lifecycle.Event.ON_STOP);\n        Parcelable saveAllState = this.mFragments.saveAllState();\n        if (saveAllState != null) {\n            bundle.putParcelable(FRAGMENTS_TAG, saveAllState);\n        }\n        if (this.mPendingFragmentActivityResults.size() > 0) {\n            bundle.putInt(NEXT_CANDIDATE_REQUEST_INDEX_TAG, this.mNextCandidateRequestIndex);\n            int[] iArr = new int[this.mPendingFragmentActivityResults.size()];\n            String[] strArr = new String[this.mPendingFragmentActivityResults.size()];\n            for (int i = 0; i < this.mPendingFragmentActivityResults.size(); i++) {\n                iArr[i] = this.mPendingFragmentActivityResults.keyAt(i);\n                strArr[i] = this.mPendingFragmentActivityResults.valueAt(i);\n            }\n            bundle.putIntArray(ALLOCATED_REQUEST_INDICIES_TAG, iArr);\n            bundle.putStringArray(REQUEST_FRAGMENT_WHO_TAG, strArr);\n        }\n    }",
            "children": [
                "<java.lang.String: void <clinit>()>"
            ]
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onStart()>": {
            "code": "void  onStart()  {\n        super.onStart();\n        this.mStopped = false;\n        if (!this.mCreated) {\n            this.mCreated = true;\n            this.mFragments.dispatchActivityCreated();\n        }\n        this.mFragments.noteStateNotSaved();\n        this.mFragments.execPendingActions();\n        this.mFragmentLifecycleRegistry.handleLifecycleEvent(Lifecycle.Event.ON_START);\n        this.mFragments.dispatchStart();\n    }",
            "children": [
                "<androidx.lifecycle.Lifecycle$Event: void <clinit>()>"
            ]
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onStateNotSaved()>": {
            "code": "void  onStateNotSaved()  {\n        this.mFragments.noteStateNotSaved();\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onStop()>": {
            "code": "void  onStop()  {\n        super.onStop();\n        this.mStopped = true;\n        markFragmentsCreated();\n        this.mFragments.dispatchStop();\n        this.mFragmentLifecycleRegistry.handleLifecycleEvent(Lifecycle.Event.ON_STOP);\n    }",
            "children": [
                "<androidx.lifecycle.Lifecycle$Event: void <clinit>()>"
            ]
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int)>": {
            "code": "void  startActivityForResult(android.content.Intent,int)  {\n        if (!this.mStartedActivityFromFragment && i != -1) {\n            checkForValidRequestCode(i);\n        }\n        super.startActivityForResult(intent, i);\n    }",
            "children": [
                "<androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)>"
            ]
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>": {
            "code": "void  startActivityForResult(android.content.Intent,int,android.os.Bundle)  {\n        if (!this.mStartedActivityFromFragment && i != -1) {\n            checkForValidRequestCode(i);\n        }\n        super.startActivityForResult(intent, i);\n    }",
            "children": [
                "<androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)>"
            ]
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)>": {
            "code": "void  startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)  {\n        if (!this.mStartedIntentSenderFromFragment && i != -1) {\n            checkForValidRequestCode(i);\n        }\n        super.startIntentSenderForResult(intentSender, i, intent, i2, i3, i4);\n    }",
            "children": [
                "<androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)>"
            ]
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>": {
            "code": "void  startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)  {\n        if (!this.mStartedIntentSenderFromFragment && i != -1) {\n            checkForValidRequestCode(i);\n        }\n        super.startIntentSenderForResult(intentSender, i, intent, i2, i3, i4);\n    }",
            "children": [
                "<androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)>"
            ]
        },
        "Entry-point: <androidx.activity.ComponentActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        this.mOnBackPressedDispatcher.onBackPressed();\n    }",
            "children": []
        },
        "Entry-point: <androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        this.mSavedStateRegistryController.performRestore(bundle);\n        ReportFragment.injectIfNeededIn(this);\n        int i = this.mContentLayoutId;\n        if (i != 0) {\n            setContentView(i);\n        }\n    }",
            "children": [
                "<androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)>"
            ]
        },
        "Entry-point: <androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)>": {
            "code": "void  onSaveInstanceState(android.os.Bundle)  {\n        Lifecycle lifecycle = getLifecycle();\n        if (lifecycle instanceof LifecycleRegistry) {\n            ((LifecycleRegistry) lifecycle).setCurrentState(Lifecycle.State.CREATED);\n        }\n        super.onSaveInstanceState(bundle);\n        this.mSavedStateRegistryController.performSave(bundle);\n    }",
            "children": [
                "<androidx.lifecycle.Lifecycle$State: void <clinit>()>"
            ]
        },
        "Entry-point: <androidx.core.app.ComponentActivity: boolean dispatchKeyEvent(android.view.KeyEvent)>": {
            "code": "boolean  dispatchKeyEvent(android.view.KeyEvent)  {\n        View decorView = getWindow().getDecorView();\n        if (decorView == null || !KeyEventDispatcher.dispatchBeforeHierarchy(decorView, keyEvent)) {\n            return KeyEventDispatcher.dispatchKeyEvent(this, decorView, this, keyEvent);\n        }\n        return true;\n    }",
            "children": [
                "<androidx.core.view.KeyEventDispatcher: boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent)>"
            ]
        },
        "Entry-point: <androidx.core.app.ComponentActivity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>": {
            "code": "boolean  dispatchKeyShortcutEvent(android.view.KeyEvent)  {\n        View decorView = getWindow().getDecorView();\n        if (decorView == null || !KeyEventDispatcher.dispatchBeforeHierarchy(decorView, keyEvent)) {\n            return super.dispatchKeyShortcutEvent(keyEvent);\n        }\n        return true;\n    }",
            "children": [
                "<androidx.core.view.KeyEventDispatcher: boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent)>"
            ]
        },
        "Entry-point: <androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        ReportFragment.injectIfNeededIn(this);\n    }",
            "children": [
                "<androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)>"
            ]
        },
        "Entry-point: <androidx.core.app.ComponentActivity: void onSaveInstanceState(android.os.Bundle)>": {
            "code": "void  onSaveInstanceState(android.os.Bundle)  {\n        this.mLifecycleRegistry.markState(Lifecycle.State.CREATED);\n        super.onSaveInstanceState(bundle);\n    }",
            "children": [
                "<androidx.lifecycle.Lifecycle$State: void <clinit>()>"
            ]
        },
        "Entry-point: <com.applovin.sdk.AppLovinWebViewActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        EventListener eventListener = this.c;\n        if (eventListener != null) {\n            eventListener.onReceivedEvent(EVENT_DISMISSED_VIA_BACK_BUTTON);\n        }\n        super.onBackPressed();\n    }",
            "children": []
        },
        "Entry-point: <com.applovin.sdk.AppLovinWebViewActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        String stringExtra = getIntent().getStringExtra(INTENT_EXTRA_KEY_SDK_KEY);\n        if (TextUtils.isEmpty(stringExtra)) {\n            r.i(\"AppLovinWebViewActivity\", \"No SDK key specified\");\n        } else {\n            final k kVar = AppLovinSdk.getInstance(stringExtra, new AppLovinSdkSettings(getApplicationContext()), getApplicationContext()).coreSdk;\n            try {\n                this.b = new WebView(this);\n                setContentView(this.b);\n                WebSettings settings = this.b.getSettings();\n                settings.setSupportMultipleWindows(false);\n                settings.setJavaScriptEnabled(true);\n                this.b.setVerticalScrollBarEnabled(true);\n                this.b.setHorizontalScrollBarEnabled(true);\n                this.b.setScrollBarStyle(33554432);\n                this.b.setWebViewClient(new WebViewClient() { // from class: com.applovin.sdk.AppLovinWebViewActivity.1\n                    @Override // android.webkit.WebViewClient\n                    public boolean shouldOverrideUrlLoading(WebView webView, String str) {\n                        Uri parse = Uri.parse(str);\n                        String scheme = parse.getScheme();\n                        String host = parse.getHost();\n                        String path = parse.getPath();\n                        r z = kVar.z();\n                        z.b(\"AppLovinWebViewActivity\", \"Handling url load: \" + str);\n                        if (\"applovin\".equalsIgnoreCase(scheme) && \"com.applovin.sdk\".equalsIgnoreCase(host) && AppLovinWebViewActivity.this.c != null) {\n                            if (path.endsWith(\"webview_event\")) {\n                                Set<String> queryParameterNames = parse.getQueryParameterNames();\n                                String str2 = queryParameterNames.isEmpty() ? \"\" : (String) queryParameterNames.toArray()[0];\n                                if (!o.b(str2)) {\n                                    kVar.z().e(\"AppLovinWebViewActivity\", \"Failed to parse WebView event parameter\");\n                                    return true;\n                                }\n                                String queryParameter = parse.getQueryParameter(str2);\n                                r z2 = kVar.z();\n                                z2.b(\"AppLovinWebViewActivity\", \"Parsed WebView event parameter name: \" + str2 + \" and value: \" + queryParameter);\n                                AppLovinWebViewActivity.this.c.onReceivedEvent(queryParameter);\n                                return true;\n                            }\n                            return true;\n                        }\n                        return super.shouldOverrideUrlLoading(webView, str);\n                    }\n                });\n                if (getIntent().getBooleanExtra(INTENT_EXTRA_KEY_IMMERSIVE_MODE_ON, false)) {\n                    getWindow().getDecorView().setSystemUiVisibility(5894);\n                }\n                if (o.b(this.a)) {\n                    this.b.loadUrl(this.a);\n                    return;\n                }\n                return;\n            } catch (Throwable th) {\n                kVar.z().b(\"AppLovinWebViewActivity\", \"Failed to initialize WebView.\", th);\n            }\n        }\n        finish();\n    }",
            "children": [
                "<com.applovin.impl.sdk.utils.o: boolean b(java.lang.String)>"
            ]
        },
        "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        a aVar = this.b;\n        if (aVar != null) {\n            aVar.j();\n        }\n        if (com.applovin.impl.sdk.utils.r.f(getApplicationContext())) {\n            super.onBackPressed();\n        }\n    }",
            "children": [
                "<com.applovin.impl.sdk.utils.r: boolean f(android.content.Context)>"
            ]
        },
        "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onConfigurationChanged(android.content.res.Configuration)>": {
            "code": "void  onConfigurationChanged(android.content.res.Configuration)  {\n        super.onConfigurationChanged(configuration);\n        a aVar = this.b;\n        if (aVar != null) {\n            aVar.a(configuration);\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        ActivityManager activityManager;\n        super.onCreate(bundle);\n        requestWindowFeature(1);\n        getWindow().setFlags(1024, 1024);\n        getWindow().addFlags(16777216);\n        getWindow().addFlags(128);\n        findViewById(16908290).setBackgroundColor(ViewCompat.MEASURED_STATE_MASK);\n        this.a = AppLovinSdk.getInstance(getIntent().getStringExtra(\"com.applovin.interstitial.sdk_key\"), new AppLovinSdkSettings(this), this).coreSdk;\n        if (parentInterstitialWrapper == null) {\n            Intent intent = new Intent(this, FullscreenAdService.class);\n            this.d = new com.applovin.impl.adview.activity.a(this, this.a);\n            bindService(intent, this.d, 1);\n            if (g.g()) {\n                try {\n                    WebView.setDataDirectorySuffix(String.valueOf(Process.myPid()));\n                    return;\n                } catch (Throwable unused) {\n                    return;\n                }\n            }\n            return;\n        }\n        int intValue = ((Integer) this.a.a(b.eJ)).intValue();\n        if (intValue != -1 && (activityManager = (ActivityManager) getSystemService(\"activity\")) != null) {\n            ActivityManager.MemoryInfo memoryInfo = new ActivityManager.MemoryInfo();\n            activityManager.getMemoryInfo(memoryInfo);\n            if (memoryInfo.availMem < intValue) {\n                a(\"Not enough available memory\", null);\n                return;\n            }\n        }\n        present(parentInterstitialWrapper.b(), parentInterstitialWrapper.e(), parentInterstitialWrapper.d(), parentInterstitialWrapper.c());\n    }",
            "children": [
                "<android.webkit.WebView: void setDataDirectorySuffix(java.lang.String)>"
            ]
        },
        "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        parentInterstitialWrapper = null;\n        com.applovin.impl.adview.activity.a aVar = this.d;\n        if (aVar != null) {\n            try {\n                unbindService(aVar);\n            } catch (Throwable unused) {\n            }\n        }\n        a aVar2 = this.b;\n        if (aVar2 != null) {\n            aVar2.h();\n        }\n        super.onDestroy();\n    }",
            "children": [
                "<android.app.Activity: void <clinit>()>"
            ]
        },
        "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: boolean onKeyDown(int,android.view.KeyEvent)>": {
            "code": "boolean  onKeyDown(int,android.view.KeyEvent)  {\n        a aVar = this.b;\n        if (aVar != null) {\n            aVar.a(i, keyEvent);\n        }\n        return super.onKeyDown(i, keyEvent);\n    }",
            "children": []
        },
        "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onLowMemory()>": {
            "code": "void  onLowMemory()  {\n        a aVar = this.b;\n        if (aVar != null) {\n            aVar.i();\n        }\n        super.onLowMemory();\n    }",
            "children": []
        },
        "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onPause()>": {
            "code": "void  onPause()  {\n        super.onPause();\n        a aVar = this.b;\n        if (aVar != null) {\n            aVar.e();\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onResume()>": {
            "code": "void  onResume()  {\n        a aVar;\n        try {\n            super.onResume();\n            if (this.c.get() || (aVar = this.b) == null) {\n                return;\n            }\n            aVar.d();\n        } catch (IllegalArgumentException e) {\n            this.a.z().b(\"InterActivityV2\", \"Error was encountered in onResume().\", e);\n            dismiss();\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onStop()>": {
            "code": "void  onStop()  {\n        super.onStop();\n        a aVar = this.b;\n        if (aVar != null) {\n            aVar.g();\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onWindowFocusChanged(boolean)>": {
            "code": "void  onWindowFocusChanged(boolean)  {\n        if (this.b != null) {\n            if (!this.c.getAndSet(false) || (this.b instanceof e)) {\n                this.b.c(z);\n            }\n            if (z) {\n                getWindow().getDecorView().setSystemUiVisibility(5894);\n            }\n        }\n        super.onWindowFocusChanged(z);\n    }",
            "children": []
        },
        "Entry-point: <com.applovin.impl.adview.s: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        if (isVastAd()) {\n            this.a.addAll(b().a(a.c.VIDEO, com.applovin.impl.a.h.a));\n            a(a.c.IMPRESSION);\n            a(a.c.VIDEO, \"creativeView\");\n        }\n    }",
            "children": [
                "<com.applovin.impl.a.h: void <clinit>()>"
            ]
        },
        "Entry-point: <com.applovin.impl.adview.s: void onPause()>": {
            "code": "void  onPause()  {\n        super.onPause();\n        a(this.postitialWasDisplayed ? a.c.COMPANION : a.c.VIDEO, \"pause\");\n    }",
            "children": [
                "<com.applovin.impl.a.a$c: void <clinit>()>"
            ]
        },
        "Entry-point: <com.applovin.impl.adview.s: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n        a(this.postitialWasDisplayed ? a.c.COMPANION : a.c.VIDEO, \"resume\");\n    }",
            "children": [
                "<com.applovin.impl.a.a$c: void <clinit>()>"
            ]
        },
        "Entry-point: <com.applovin.impl.adview.o: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        i iVar;\n        if (this.currentAd != null) {\n            if (this.currentAd.aB() && !this.postitialWasDisplayed) {\n                return;\n            }\n            if (this.currentAd.aC() && this.postitialWasDisplayed) {\n                return;\n            }\n        }\n        if (c()) {\n            this.logger.b(\"InterActivity\", \"Back button was pressed; forwarding to Android for handling...\");\n        } else {\n            try {\n                if (!this.postitialWasDisplayed && this.k && this.F != null && this.F.getVisibility() == 0 && this.F.getAlpha() > 0.0f) {\n                    this.logger.b(\"InterActivity\", \"Back button was pressed; forwarding as a click to skip button.\");\n                    iVar = this.F;\n                } else if (this.D == null || this.D.getVisibility() != 0 || this.D.getAlpha() <= 0.0f) {\n                    this.logger.b(\"InterActivity\", \"Back button was pressed, but was not eligible for dismissal.\");\n                    b(\"javascript:al_onBackPressed();\");\n                    return;\n                } else {\n                    this.logger.b(\"InterActivity\", \"Back button was pressed; forwarding as a click to close button.\");\n                    iVar = this.D;\n                }\n                iVar.performClick();\n                b(\"javascript:al_onBackPressed();\");\n                return;\n            } catch (Exception unused) {\n            }\n        }\n        super.onBackPressed();\n    }",
            "children": []
        },
        "Entry-point: <com.applovin.impl.adview.o: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        /*\n            Method dump skipped, instructions count: 487\n            To view this dump add '--comments-level debug' option\n        */\n        throw new UnsupportedOperationException(\"Method not decompiled: com.applovin.impl.adview.o.onCreate(android.os.Bundle):void\");\n    }",
            "children": [
                "<android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>"
            ]
        },
        "Entry-point: <com.applovin.impl.adview.o: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        /*\n            r4 = this;\n            com.applovin.impl.adview.n r0 = r4.a     // Catch: java.lang.Throwable -> L69\n            r1 = 0\n            if (r0 == 0) goto L1d\n            com.applovin.impl.adview.n r0 = r4.a     // Catch: java.lang.Throwable -> L69\n            android.view.ViewParent r0 = r0.getParent()     // Catch: java.lang.Throwable -> L69\n            boolean r2 = r0 instanceof android.view.ViewGroup     // Catch: java.lang.Throwable -> L69\n            if (r2 == 0) goto L16\n            android.view.ViewGroup r0 = (android.view.ViewGroup) r0     // Catch: java.lang.Throwable -> L69\n            com.applovin.impl.adview.n r2 = r4.a     // Catch: java.lang.Throwable -> L69\n            r0.removeView(r2)     // Catch: java.lang.Throwable -> L69\n        L16:\n            com.applovin.impl.adview.n r0 = r4.a     // Catch: java.lang.Throwable -> L69\n            r0.destroy()     // Catch: java.lang.Throwable -> L69\n            r4.a = r1     // Catch: java.lang.Throwable -> L69\n        L1d:\n            com.applovin.impl.adview.AppLovinVideoView r0 = r4.videoView     // Catch: java.lang.Throwable -> L69\n            if (r0 == 0) goto L2b\n            com.applovin.impl.adview.AppLovinVideoView r0 = r4.videoView     // Catch: java.lang.Throwable -> L69\n            r0.pause()     // Catch: java.lang.Throwable -> L69\n            com.applovin.impl.adview.AppLovinVideoView r0 = r4.videoView     // Catch: java.lang.Throwable -> L69\n            r0.stopPlayback()     // Catch: java.lang.Throwable -> L69\n        L2b:\n            com.applovin.impl.sdk.k r0 = r4.sdk     // Catch: java.lang.Throwable -> L69\n            if (r0 == 0) goto L47\n            java.lang.ref.WeakReference<android.media.MediaPlayer> r0 = r4.J     // Catch: java.lang.Throwable -> L69\n            java.lang.Object r0 = r0.get()     // Catch: java.lang.Throwable -> L69\n            android.media.MediaPlayer r0 = (android.media.MediaPlayer) r0     // Catch: java.lang.Throwable -> L69\n            if (r0 == 0) goto L3c\n            r0.release()     // Catch: java.lang.Throwable -> L69\n        L3c:\n            com.applovin.impl.sdk.k r0 = r4.sdk     // Catch: java.lang.Throwable -> L69\n            com.applovin.impl.sdk.a r0 = r0.ae()     // Catch: java.lang.Throwable -> L69\n            com.applovin.impl.sdk.utils.a r2 = r4.Q     // Catch: java.lang.Throwable -> L69\n            r0.b(r2)     // Catch: java.lang.Throwable -> L69\n        L47:\n            com.applovin.impl.adview.j r0 = r4.countdownManager     // Catch: java.lang.Throwable -> L69\n            if (r0 == 0) goto L50\n            com.applovin.impl.adview.j r0 = r4.countdownManager     // Catch: java.lang.Throwable -> L69\n            r0.b()     // Catch: java.lang.Throwable -> L69\n        L50:\n            android.os.Handler r0 = r4.B     // Catch: java.lang.Throwable -> L69\n            if (r0 == 0) goto L59\n            android.os.Handler r0 = r4.B     // Catch: java.lang.Throwable -> L69\n            r0.removeCallbacksAndMessages(r1)     // Catch: java.lang.Throwable -> L69\n        L59:\n            android.os.Handler r0 = r4.A     // Catch: java.lang.Throwable -> L69\n            if (r0 == 0) goto L62\n            android.os.Handler r0 = r4.A     // Catch: java.lang.Throwable -> L69\n            r0.removeCallbacksAndMessages(r1)     // Catch: java.lang.Throwable -> L69\n        L62:\n            com.applovin.impl.sdk.a.g r0 = r4.currentAd\n            if (r0 == 0) goto L83\n            goto L7b\n        L67:\n            r0 = move-exception\n            goto L87\n        L69:\n            r0 = move-exception\n            com.applovin.impl.sdk.r r1 = r4.logger     // Catch: java.lang.Throwable -> L67\n            if (r1 == 0) goto L77\n            com.applovin.impl.sdk.r r1 = r4.logger     // Catch: java.lang.Throwable -> L67\n            java.lang.String r2 = \"InterActivity\"\n            java.lang.String r3 = \"Unable to destroy video view\"\n            r1.a(r2, r3, r0)     // Catch: java.lang.Throwable -> L67\n        L77:\n            com.applovin.impl.sdk.a.g r0 = r4.currentAd\n            if (r0 == 0) goto L83\n        L7b:\n            r4.P()\n            com.applovin.impl.sdk.a.g r0 = r4.currentAd\n            r4.c(r0)\n        L83:\n            super.onDestroy()\n            return\n        L87:\n            com.applovin.impl.sdk.a.g r1 = r4.currentAd\n            if (r1 == 0) goto L93\n            r4.P()\n            com.applovin.impl.sdk.a.g r1 = r4.currentAd\n            r4.c(r1)\n        L93:\n            throw r0\n        */\n        throw new UnsupportedOperationException(\"Method not decompiled: com.applovin.impl.adview.o.onDestroy():void\");\n    }",
            "children": []
        },
        "Entry-point: <com.applovin.impl.adview.o: void onPause()>": {
            "code": "void  onPause()  {\n        super.onPause();\n        this.logger.b(\"InterActivity\", \"App paused...\");\n        this.p = System.currentTimeMillis();\n        if (this.postitialWasDisplayed) {\n            M();\n        }\n        this.K.a();\n        pauseReportRewardTask();\n        b(\"javascript:al_onAppPaused();\");\n    }",
            "children": [
                "<java.lang.System: long currentTimeMillis()>"
            ]
        },
        "Entry-point: <com.applovin.impl.adview.o: void onResume()>": {
            "code": "void  onResume()  {\n        /*\n            r5 = this;\n            super.onResume()     // Catch: java.lang.IllegalArgumentException -> Lb7\n            com.applovin.impl.sdk.r r0 = r5.logger\n            java.lang.String r1 = \"InterActivity\"\n            java.lang.String r2 = \"App resumed...\"\n            r0.b(r1, r2)\n            boolean r0 = r5.m\n            if (r0 != 0) goto L9e\n            com.applovin.impl.sdk.d.d r0 = r5.c\n            if (r0 == 0) goto L1e\n            long r1 = java.lang.System.currentTimeMillis()\n            long r3 = r5.p\n            long r1 = r1 - r3\n            r0.d(r1)\n        L1e:\n            com.applovin.impl.sdk.k r0 = r5.sdk\n            com.applovin.impl.sdk.c.d<java.lang.Boolean> r1 = com.applovin.impl.sdk.c.d.w\n            r2 = 0\n            java.lang.Boolean r3 = java.lang.Boolean.valueOf(r2)\n            java.lang.Object r0 = r0.b(r1, r3)\n            java.lang.Boolean r0 = (java.lang.Boolean) r0\n            boolean r0 = r0.booleanValue()\n            r3 = 0\n            if (r0 == 0) goto L68\n            com.applovin.impl.sdk.b.b r0 = r5.K\n            boolean r0 = r0.d()\n            if (r0 != 0) goto L68\n            boolean r0 = r5.postitialWasDisplayed\n            if (r0 != 0) goto L68\n            r5.N()\n            r5.y()\n            com.applovin.impl.sdk.a.g r0 = r5.currentAd\n            if (r0 == 0) goto L9a\n            com.applovin.impl.sdk.k r0 = r5.sdk\n            com.applovin.impl.sdk.c.b<java.lang.Boolean> r1 = com.applovin.impl.sdk.c.b.bZ\n            java.lang.Object r0 = r0.a(r1)\n            java.lang.Boolean r0 = (java.lang.Boolean) r0\n            boolean r0 = r0.booleanValue()\n            if (r0 == 0) goto L9a\n            boolean r0 = r5.postitialWasDisplayed\n            if (r0 != 0) goto L9a\n            boolean r0 = r5.k\n            if (r0 == 0) goto L9a\n            com.applovin.impl.adview.i r0 = r5.F\n            if (r0 == 0) goto L9a\n            goto L97\n        L68:\n            com.applovin.impl.sdk.a.g r0 = r5.currentAd\n            boolean r0 = r0 instanceof com.applovin.impl.sdk.a.a\n            if (r0 == 0) goto L79\n            com.applovin.impl.sdk.a.g r0 = r5.currentAd\n            com.applovin.impl.sdk.a.a r0 = (com.applovin.impl.sdk.a.a) r0\n            boolean r0 = r0.l()\n            if (r0 == 0) goto L79\n            r2 = 1\n        L79:\n            com.applovin.impl.sdk.a.g r0 = r5.currentAd\n            if (r0 == 0) goto L9a\n            com.applovin.impl.sdk.k r0 = r5.sdk\n            com.applovin.impl.sdk.c.b<java.lang.Boolean> r1 = com.applovin.impl.sdk.c.b.bZ\n            java.lang.Object r0 = r0.a(r1)\n            java.lang.Boolean r0 = (java.lang.Boolean) r0\n            boolean r0 = r0.booleanValue()\n            if (r0 == 0) goto L9a\n            boolean r0 = r5.postitialWasDisplayed\n            if (r0 == 0) goto L9a\n            com.applovin.impl.adview.i r0 = r5.D\n            if (r0 == 0) goto L9a\n            if (r2 != 0) goto L9a\n        L97:\n            r5.a(r3, r0)\n        L9a:\n            r5.resumeReportRewardTask()\n            goto Lb1\n        L9e:\n            com.applovin.impl.sdk.b.b r0 = r5.K\n            boolean r0 = r0.d()\n            if (r0 != 0) goto Lb1\n            boolean r0 = r5.postitialWasDisplayed\n            if (r0 != 0) goto Lb1\n            com.applovin.impl.sdk.a.g r0 = r5.currentAd\n            if (r0 == 0) goto Lb1\n            r5.y()\n        Lb1:\n            java.lang.String r0 = \"javascript:al_onAppResumed();\"\n            r5.b(r0)\n            return\n        Lb7:\n            java.lang.String r0 = \"Error was encountered in onResume().\"\n            r5.exitWithError(r0)\n            return\n        */\n        throw new UnsupportedOperationException(\"Method not decompiled: com.applovin.impl.adview.o.onResume():void\");\n    }",
            "children": [
                "<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>"
            ]
        },
        "Entry-point: <com.applovin.impl.adview.o: void onSaveInstanceState(android.os.Bundle)>": {
            "code": "void  onSaveInstanceState(android.os.Bundle)  {\n        super.onSaveInstanceState(bundle);\n        bundle.putBoolean(\"instance_impression_tracked\", this.w.get());\n        bundle.putInt(\"original_orientation\", this.u);\n    }",
            "children": []
        },
        "Entry-point: <com.applovin.impl.adview.o: void onWindowFocusChanged(boolean)>": {
            "code": "void  onWindowFocusChanged(boolean)  {\n        String str;\n        super.onWindowFocusChanged(z);\n        if (z) {\n            if (this.sdk != null) {\n                this.logger.b(\"InterActivity\", \"Window gained focus\");\n                try {\n                    if (com.applovin.impl.sdk.utils.g.c() && ((Boolean) this.sdk.a(com.applovin.impl.sdk.c.b.cx)).booleanValue() && a()) {\n                        b();\n                        this.B.postDelayed(new Runnable() { // from class: com.applovin.impl.adview.o.24\n                            @Override // java.lang.Runnable\n                            public void run() {\n                                o.this.b();\n                            }\n                        }, 2500L);\n                    } else {\n                        getWindow().setFlags(1024, 1024);\n                    }\n                    if (!this.postitialWasDisplayed) {\n                        N();\n                        resumeReportRewardTask();\n                    }\n                } catch (Throwable th) {\n                    this.logger.b(\"InterActivity\", \"Setting window flags failed.\", th);\n                }\n                this.m = false;\n                b(\"javascript:al_onWindowFocusChanged( \" + z + \" );\");\n            }\n            str = \"Window gained focus. SDK is null.\";\n        } else if (this.sdk != null) {\n            this.logger.b(\"InterActivity\", \"Window lost focus\");\n            if (!this.postitialWasDisplayed) {\n                M();\n                pauseReportRewardTask();\n            }\n            this.m = false;\n            b(\"javascript:al_onWindowFocusChanged( \" + z + \" );\");\n        } else {\n            str = \"Window lost focus. SDK is null.\";\n        }\n        com.applovin.impl.sdk.r.f(\"InterActivity\", str);\n        this.m = false;\n        b(\"javascript:al_onWindowFocusChanged( \" + z + \" );\");\n    }",
            "children": [
                "<com.applovin.impl.sdk.r: void f(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.applovin.impl.mediation.debugger.ui.a.a: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        setContentView(R.layout.mediation_debugger_ad_unit_detail_activity);\n        setTitle(this.c.a());\n        this.j = (ListView) findViewById(R.id.listView);\n        this.k = findViewById(R.id.ad_presenter_view);\n        this.l = (AdControlButton) findViewById(R.id.ad_control_button);\n        this.m = (TextView) findViewById(R.id.status_textview);\n        this.j.setAdapter((ListAdapter) this.c);\n        this.m.setText(this.a.H().a() ? \"Not Supported while Test Mode is enabled\" : \"Tap to load an ad\");\n        this.m.setTypeface(Typeface.DEFAULT_BOLD);\n        this.l.setOnClickListener(this);\n        ShapeDrawable shapeDrawable = new ShapeDrawable();\n        shapeDrawable.setPadding(0, 10, 0, 0);\n        shapeDrawable.getPaint().setColor(-1);\n        shapeDrawable.getPaint().setShadowLayer(10, 0.0f, -10, 855638016);\n        shapeDrawable.setShape(new RectShape());\n        LayerDrawable layerDrawable = new LayerDrawable(new Drawable[]{shapeDrawable});\n        layerDrawable.setLayerInset(0, 0, 10, 0, 0);\n        this.k.setBackground(layerDrawable);\n    }",
            "children": [
                "<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>"
            ]
        },
        "Entry-point: <com.applovin.impl.mediation.debugger.ui.a.a: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        super.onDestroy();\n        if (this.d != null) {\n            this.a.H().a((String) null);\n            this.a.H().a(false);\n        }\n        MaxAdView maxAdView = this.e;\n        if (maxAdView != null) {\n            maxAdView.destroy();\n        }\n        MaxInterstitialAd maxInterstitialAd = this.f;\n        if (maxInterstitialAd != null) {\n            maxInterstitialAd.destroy();\n        }\n        MaxRewardedAd maxRewardedAd = this.h;\n        if (maxRewardedAd != null) {\n            maxRewardedAd.destroy();\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.applovin.impl.mediation.debugger.ui.a.c: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        setTitle(\"Ad Units\");\n        setContentView(R.layout.list_view);\n        this.e = (ListView) findViewById(R.id.listView);\n        this.e.setAdapter((ListAdapter) this.c);\n    }",
            "children": []
        },
        "Entry-point: <com.applovin.impl.mediation.debugger.ui.b.a: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  None",
            "children": []
        },
        "Entry-point: <com.applovin.impl.mediation.debugger.ui.b.a: boolean onCreateOptionsMenu(android.view.Menu)>": {
            "code": "boolean  onCreateOptionsMenu(android.view.Menu)  None",
            "children": []
        },
        "Entry-point: <com.applovin.impl.mediation.debugger.ui.b.a: void onDestroy()>": {
            "code": "void  onDestroy()  None",
            "children": []
        },
        "Entry-point: <com.applovin.impl.mediation.debugger.ui.b.a: boolean onOptionsItemSelected(android.view.MenuItem)>": {
            "code": "boolean  onOptionsItemSelected(android.view.MenuItem)  None",
            "children": []
        },
        "Entry-point: <com.applovin.impl.mediation.debugger.ui.b.a: void onStart()>": {
            "code": "void  onStart()  None",
            "children": []
        },
        "Entry-point: <com.applovin.impl.mediation.debugger.ui.e.a: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        setTitle(\"Select Live Network\");\n        setContentView(R.layout.list_view);\n        this.c = (ListView) findViewById(R.id.listView);\n        this.c.setAdapter((ListAdapter) this.a);\n    }",
            "children": []
        },
        "Entry-point: <com.applovin.impl.mediation.debugger.ui.c.a: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        setContentView(R.layout.list_view);\n        this.b = (ListView) findViewById(R.id.listView);\n        this.b.setAdapter((ListAdapter) this.a);\n    }",
            "children": []
        },
        "Entry-point: <com.applovin.impl.mediation.debugger.ui.testmode.a: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        setContentView(R.layout.mediation_debugger_multi_ad_activity);\n        setTitle(this.a.h() + \" Test Ads\");\n        a();\n        b();\n        c();\n        d();\n        findViewById(R.id.rewarded_interstitial_control_view).setVisibility(8);\n        try {\n            setRequestedOrientation(7);\n        } catch (Throwable th) {\n            com.applovin.impl.sdk.r.c(\"AppLovinSdk\", \"Failed to set portrait orientation\", th);\n        }\n    }",
            "children": [
                "<java.lang.StringBuilder: void <init>()>"
            ]
        },
        "Entry-point: <com.applovin.impl.mediation.debugger.ui.testmode.a: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        super.onDestroy();\n        this.b.H().a((String) null);\n        MaxAdView maxAdView = this.c;\n        if (maxAdView != null) {\n            maxAdView.destroy();\n        }\n        MaxAdView maxAdView2 = this.d;\n        if (maxAdView2 != null) {\n            maxAdView2.destroy();\n        }\n        MaxInterstitialAd maxInterstitialAd = this.e;\n        if (maxInterstitialAd != null) {\n            maxInterstitialAd.destroy();\n        }\n        MaxRewardedAd maxRewardedAd = this.g;\n        if (maxRewardedAd != null) {\n            maxRewardedAd.destroy();\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.applovin.impl.mediation.debugger.ui.a: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        if (!r.e(this)) {\n            setTheme(R.style.com_applovin_mediation_MaxDebuggerActivity_Theme_Live);\n        }\n        super.onCreate(bundle);\n    }",
            "children": [
                "<com.applovin.impl.sdk.utils.r: boolean e(android.content.Context)>"
            ]
        },
        "Entry-point: <com.facebook.CustomTabActivity: void onActivityResult(int,int,android.content.Intent)>": {
            "code": "void  onActivityResult(int,int,android.content.Intent)  {\n        super.onActivityResult(i, i2, intent);\n        if (i2 == 0) {\n            Intent intent2 = new Intent(CUSTOM_TAB_REDIRECT_ACTION);\n            intent2.putExtra(CustomTabMainActivity.EXTRA_URL, getIntent().getDataString());\n            LocalBroadcastManager.getInstance(this).sendBroadcast(intent2);\n            this.closeReceiver = new BroadcastReceiver() { // from class: com.facebook.CustomTabActivity.1\n                @Override // android.content.BroadcastReceiver\n                public void onReceive(Context context, Intent intent3) {\n                    CustomTabActivity.this.finish();\n                }\n            };\n            LocalBroadcastManager.getInstance(this).registerReceiver(this.closeReceiver, new IntentFilter(DESTROY_ACTION));\n        }\n    }",
            "children": [
                "<androidx.localbroadcastmanager.content.LocalBroadcastManager: androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context)>"
            ]
        },
        "Entry-point: <com.facebook.CustomTabActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        Intent intent = new Intent(this, CustomTabMainActivity.class);\n        intent.setAction(CUSTOM_TAB_REDIRECT_ACTION);\n        intent.putExtra(CustomTabMainActivity.EXTRA_URL, getIntent().getDataString());\n        intent.addFlags(603979776);\n        startActivityForResult(intent, 2);\n    }",
            "children": [
                "<com.facebook.CustomTabMainActivity: void <clinit>()>"
            ]
        },
        "Entry-point: <com.facebook.CustomTabActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        LocalBroadcastManager.getInstance(this).unregisterReceiver(this.closeReceiver);\n        super.onDestroy();\n    }",
            "children": [
                "<androidx.localbroadcastmanager.content.LocalBroadcastManager: androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context)>"
            ]
        },
        "Entry-point: <com.facebook.CustomTabMainActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        if (CustomTabActivity.CUSTOM_TAB_REDIRECT_ACTION.equals(getIntent().getAction())) {\n            setResult(0);\n            finish();\n        } else if (bundle == null) {\n            String stringExtra = getIntent().getStringExtra(EXTRA_ACTION);\n            Bundle bundleExtra = getIntent().getBundleExtra(EXTRA_PARAMS);\n            boolean openCustomTab = new CustomTab(stringExtra, bundleExtra).openCustomTab(this, getIntent().getStringExtra(EXTRA_CHROME_PACKAGE));\n            this.shouldCloseCustomTab = false;\n            if (!openCustomTab) {\n                setResult(0, getIntent().putExtra(NO_ACTIVITY_EXCEPTION, true));\n                finish();\n                return;\n            }\n            this.redirectReceiver = new BroadcastReceiver() { // from class: com.facebook.CustomTabMainActivity.1\n                @Override // android.content.BroadcastReceiver\n                public void onReceive(Context context, Intent intent) {\n                    Intent intent2 = new Intent(CustomTabMainActivity.this, CustomTabMainActivity.class);\n                    intent2.setAction(CustomTabMainActivity.REFRESH_ACTION);\n                    intent2.putExtra(CustomTabMainActivity.EXTRA_URL, intent.getStringExtra(CustomTabMainActivity.EXTRA_URL));\n                    intent2.addFlags(603979776);\n                    CustomTabMainActivity.this.startActivity(intent2);\n                }\n            };\n            LocalBroadcastManager.getInstance(this).registerReceiver(this.redirectReceiver, new IntentFilter(CustomTabActivity.CUSTOM_TAB_REDIRECT_ACTION));\n        }\n    }",
            "children": [
                "<androidx.localbroadcastmanager.content.LocalBroadcastManager: androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context)>"
            ]
        },
        "Entry-point: <com.facebook.CustomTabMainActivity: void onNewIntent(android.content.Intent)>": {
            "code": "void  onNewIntent(android.content.Intent)  {\n        super.onNewIntent(intent);\n        if (REFRESH_ACTION.equals(intent.getAction())) {\n            LocalBroadcastManager.getInstance(this).sendBroadcast(new Intent(CustomTabActivity.DESTROY_ACTION));\n            sendResult(-1, intent);\n        } else if (CustomTabActivity.CUSTOM_TAB_REDIRECT_ACTION.equals(intent.getAction())) {\n            sendResult(-1, intent);\n        }\n    }",
            "children": [
                "<androidx.localbroadcastmanager.content.LocalBroadcastManager: androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context)>"
            ]
        },
        "Entry-point: <com.facebook.CustomTabMainActivity: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n        if (this.shouldCloseCustomTab) {\n            sendResult(0, null);\n        }\n        this.shouldCloseCustomTab = true;\n    }",
            "children": []
        },
        "Entry-point: <com.facebook.unity.FBUnityLoginActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        String stringExtra = getIntent().getStringExtra(LOGIN_PARAMS);\n        int i = AnonymousClass1.$SwitchMap$com$facebook$unity$FBUnityLoginActivity$LoginType[((LoginType) getIntent().getSerializableExtra(LOGIN_TYPE)).ordinal()];\n        if (i == 1) {\n            FBLogin.loginWithReadPermissions(stringExtra, this);\n        } else if (i == 2) {\n            FBLogin.loginWithPublishPermissions(stringExtra, this);\n        } else if (i == 3) {\n            FBLogin.loginForTVWithReadPermissions(stringExtra, this);\n        } else if (i != 4) {\n        } else {\n            FBLogin.loginForTVWithPublishPermissions(stringExtra, this);\n        }\n    }",
            "children": [
                "<com.facebook.unity.FBLogin: void loginWithReadPermissions(java.lang.String,com.facebook.unity.FBUnityLoginActivity)>"
            ]
        },
        "Entry-point: <com.facebook.unity.FBUnityCreateGameGroupActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        AppGroupCreationContent.Builder builder = new AppGroupCreationContent.Builder();\n        Bundle bundleExtra = getIntent().getBundleExtra(CREATE_GAME_GROUP_PARAMS);\n        final UnityMessage unityMessage = new UnityMessage(\"OnGroupCreateComplete\");\n        if (bundleExtra.containsKey(Constants.CALLBACK_ID_KEY)) {\n            unityMessage.put(Constants.CALLBACK_ID_KEY, bundleExtra.getString(Constants.CALLBACK_ID_KEY));\n        }\n        if (bundleExtra.containsKey(\"name\")) {\n            builder.setName(bundleExtra.getString(\"name\"));\n        }\n        if (bundleExtra.containsKey(\"description\")) {\n            builder.setDescription(bundleExtra.getString(\"name\"));\n        }\n        if (bundleExtra.containsKey(ShareConstants.WEB_DIALOG_PARAM_PRIVACY)) {\n            String string = bundleExtra.getString(ShareConstants.WEB_DIALOG_PARAM_PRIVACY);\n            AppGroupCreationContent.AppGroupPrivacy appGroupPrivacy = AppGroupCreationContent.AppGroupPrivacy.Closed;\n            if (string.equalsIgnoreCase(\"closed\")) {\n                appGroupPrivacy = AppGroupCreationContent.AppGroupPrivacy.Closed;\n            } else if (string.equalsIgnoreCase(\"open\")) {\n                appGroupPrivacy = AppGroupCreationContent.AppGroupPrivacy.Open;\n            } else {\n                unityMessage.sendError(String.format(Locale.ROOT, \"Unknown privacy setting for group creation: %s\", string));\n                finish();\n            }\n            builder.setAppGroupPrivacy(appGroupPrivacy);\n        }\n        CreateAppGroupDialog createAppGroupDialog = new CreateAppGroupDialog(this);\n        createAppGroupDialog.registerCallback(this.mCallbackManager, new FacebookCallback<CreateAppGroupDialog.Result>() { // from class: com.facebook.unity.FBUnityCreateGameGroupActivity.1\n            @Override // com.facebook.FacebookCallback\n            public void onSuccess(CreateAppGroupDialog.Result result) {\n                unityMessage.put(\"id\", result.getId());\n                unityMessage.send();\n            }\n\n            @Override // com.facebook.FacebookCallback\n            public void onCancel() {\n                unityMessage.putCancelled();\n                unityMessage.send();\n            }\n\n            @Override // com.facebook.FacebookCallback\n            public void onError(FacebookException facebookException) {\n                unityMessage.sendError(facebookException.getLocalizedMessage());\n            }\n        });\n        createAppGroupDialog.show(builder.build());\n    }",
            "children": [
                "<java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>"
            ]
        },
        "Entry-point: <com.facebook.unity.FBUnityDialogsActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        Bundle bundleExtra;\n        ShareContent build;\n        super.onCreate(bundle);\n        Intent intent = getIntent();\n        if (intent.hasExtra(SHARE_DIALOG_PARAMS)) {\n            bundleExtra = intent.getBundleExtra(SHARE_DIALOG_PARAMS);\n            build = FBDialogUtils.createShareContentBuilder(bundleExtra).build();\n        } else if (intent.hasExtra(FEED_DIALOG_PARAMS)) {\n            bundleExtra = intent.getBundleExtra(FEED_DIALOG_PARAMS);\n            build = FBDialogUtils.createFeedContentBuilder(bundleExtra).build();\n        } else {\n            Log.e(TAG, String.format(Locale.ROOT, \"Failed to find extra %s or %s\", SHARE_DIALOG_PARAMS, FEED_DIALOG_PARAMS));\n            finish();\n            return;\n        }\n        ShareDialog shareDialog = new ShareDialog(this);\n        final UnityMessage unityMessage = new UnityMessage(\"OnShareLinkComplete\");\n        String string = bundleExtra.getString(Constants.CALLBACK_ID_KEY);\n        if (string != null) {\n            unityMessage.put(Constants.CALLBACK_ID_KEY, string);\n        }\n        shareDialog.registerCallback(this.mCallbackManager, new FacebookCallback<Sharer.Result>() { // from class: com.facebook.unity.FBUnityDialogsActivity.1\n            @Override // com.facebook.FacebookCallback\n            public void onSuccess(Sharer.Result result) {\n                if (result.getPostId() != null) {\n                    unityMessage.putID(result.getPostId());\n                }\n                unityMessage.put(\"posted\", true);\n                unityMessage.send();\n            }\n\n            @Override // com.facebook.FacebookCallback\n            public void onCancel() {\n                unityMessage.putCancelled();\n                unityMessage.send();\n            }\n\n            @Override // com.facebook.FacebookCallback\n            public void onError(FacebookException facebookException) {\n                unityMessage.sendError(facebookException.getMessage());\n            }\n        });\n        shareDialog.show(build, (ShareDialog.Mode) getIntent().getSerializableExtra(DIALOG_TYPE));\n    }",
            "children": [
                "<android.util.Log: int e(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.facebook.unity.FBUnityGameRequestActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        if (bundle == null) {\n            showDialog();\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.facebook.unity.FBUnityGamingServicesFriendFinderActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        Bundle bundleExtra = getIntent().getBundleExtra(DIALOG_PARAMS);\n        final UnityMessage unityMessage = new UnityMessage(\"OnFriendFinderComplete\");\n        String string = bundleExtra.getString(Constants.CALLBACK_ID_KEY);\n        String str = TAG;\n        Log.e(str, \"callbackID: \" + string);\n        if (string != null) {\n            unityMessage.put(Constants.CALLBACK_ID_KEY, string);\n        }\n        FriendFinderDialog friendFinderDialog = new FriendFinderDialog(this);\n        friendFinderDialog.registerCallback(this.mCallbackManager, new FacebookCallback<FriendFinderDialog.Result>() { // from class: com.facebook.unity.FBUnityGamingServicesFriendFinderActivity.1\n            @Override // com.facebook.FacebookCallback\n            public void onSuccess(FriendFinderDialog.Result result) {\n                unityMessage.put(\"success\", true);\n                unityMessage.send();\n                FBUnityGamingServicesFriendFinderActivity.this.finish();\n            }\n\n            @Override // com.facebook.FacebookCallback\n            public void onCancel() {\n                unityMessage.putCancelled();\n                unityMessage.send();\n                FBUnityGamingServicesFriendFinderActivity.this.finish();\n            }\n\n            @Override // com.facebook.FacebookCallback\n            public void onError(FacebookException facebookException) {\n                unityMessage.sendError(facebookException.getMessage());\n                FBUnityGamingServicesFriendFinderActivity.this.finish();\n            }\n        });\n        friendFinderDialog.show();\n    }",
            "children": [
                "<android.util.Log: int e(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.facebook.unity.FBUnityJoinGameGroupActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        Bundle bundleExtra = getIntent().getBundleExtra(JOIN_GAME_GROUP_PARAMS);\n        final UnityMessage unityMessage = new UnityMessage(\"OnJoinGroupComplete\");\n        if (bundleExtra.containsKey(Constants.CALLBACK_ID_KEY)) {\n            unityMessage.put(Constants.CALLBACK_ID_KEY, bundleExtra.getString(Constants.CALLBACK_ID_KEY));\n        }\n        String string = bundleExtra.containsKey(\"id\") ? bundleExtra.getString(\"id\") : \"\";\n        JoinAppGroupDialog joinAppGroupDialog = new JoinAppGroupDialog(this);\n        joinAppGroupDialog.registerCallback(this.mCallbackManager, new FacebookCallback<JoinAppGroupDialog.Result>() { // from class: com.facebook.unity.FBUnityJoinGameGroupActivity.1\n            @Override // com.facebook.FacebookCallback\n            public void onSuccess(JoinAppGroupDialog.Result result) {\n                unityMessage.put(NativeProtocol.RESULT_ARGS_DIALOG_COMPLETE_KEY, true);\n                unityMessage.send();\n            }\n\n            @Override // com.facebook.FacebookCallback\n            public void onCancel() {\n                unityMessage.putCancelled();\n                unityMessage.send();\n            }\n\n            @Override // com.facebook.FacebookCallback\n            public void onError(FacebookException facebookException) {\n                unityMessage.sendError(facebookException.getLocalizedMessage());\n            }\n        });\n        joinAppGroupDialog.show(string);\n    }",
            "children": [
                "<com.facebook.internal.FacebookDialogBase: void <clinit>()>"
            ]
        },
        "Entry-point: <com.facebook.unity.BaseActivity: void onActivityResult(int,int,android.content.Intent)>": {
            "code": "void  onActivityResult(int,int,android.content.Intent)  {\n        super.onActivityResult(i, i2, intent);\n        this.mCallbackManager.onActivityResult(i, i2, intent);\n        finish();\n    }",
            "children": []
        },
        "Entry-point: <com.facebook.unity.BaseActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        this.mCallbackManager = CallbackManager.Factory.create();\n        if (FacebookSdk.isInitialized()) {\n            return;\n        }\n        FacebookSdk.sdkInitialize(getApplicationContext());\n    }",
            "children": [
                "<com.facebook.FacebookSdk: void sdkInitialize(android.content.Context)>"
            ]
        },
        "Entry-point: <com.facebook.unity.FBUnityAppLinkBaseActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        requestWindowFeature(1);\n        Log.v(FB.TAG, \"Saving deep link from deep linking activity\");\n        FB.SetIntent(getIntent());\n        Log.v(FB.TAG, \"Returning to main activity\");\n        startActivity(new Intent(this, getMainActivityClass()));\n        finish();\n    }",
            "children": [
                "<android.util.Log: int v(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.google.android.gms.ads.AdActivity: void onActivityResult(int,int,android.content.Intent)>": {
            "code": "void  onActivityResult(int,int,android.content.Intent)  {\n        try {\n            zzaul zzaulVar = this.zza;\n            if (zzaulVar != null) {\n                zzaulVar.zzm(i, i2, intent);\n            }\n        } catch (Exception e) {\n            zzbbk.zzl(\"#007 Could not call remote method.\", e);\n        }\n        super.onActivityResult(i, i2, intent);\n    }",
            "children": [
                "<com.google.android.gms.internal.ads.zzbbk: void zzl(java.lang.String,java.lang.Throwable)>"
            ]
        },
        "Entry-point: <com.google.android.gms.ads.AdActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        try {\n            zzaul zzaulVar = this.zza;\n            if (zzaulVar != null) {\n                if (!zzaulVar.zzg()) {\n                    return;\n                }\n            }\n        } catch (RemoteException e) {\n            zzbbk.zzl(\"#007 Could not call remote method.\", e);\n        }\n        super.onBackPressed();\n        try {\n            zzaul zzaulVar2 = this.zza;\n            if (zzaulVar2 != null) {\n                zzaulVar2.zze();\n            }\n        } catch (RemoteException e2) {\n            zzbbk.zzl(\"#007 Could not call remote method.\", e2);\n        }\n    }",
            "children": [
                "<com.google.android.gms.internal.ads.zzbbk: void zzl(java.lang.String,java.lang.Throwable)>"
            ]
        },
        "Entry-point: <com.google.android.gms.ads.AdActivity: void onConfigurationChanged(android.content.res.Configuration)>": {
            "code": "void  onConfigurationChanged(android.content.res.Configuration)  {\n        super.onConfigurationChanged(configuration);\n        try {\n            zzaul zzaulVar = this.zza;\n            if (zzaulVar != null) {\n                zzaulVar.zzn(ObjectWrapper.wrap(configuration));\n            }\n        } catch (RemoteException e) {\n            zzbbk.zzl(\"#007 Could not call remote method.\", e);\n        }\n    }",
            "children": [
                "<com.google.android.gms.internal.ads.zzbbk: void zzl(java.lang.String,java.lang.Throwable)>"
            ]
        },
        "Entry-point: <com.google.android.gms.ads.AdActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        this.zza = zzzy.zzb().zzg(this);\n        zzaul zzaulVar = this.zza;\n        if (zzaulVar != null) {\n            try {\n                zzaulVar.zzh(bundle);\n                return;\n            } catch (RemoteException e) {\n                zzbbk.zzl(\"#007 Could not call remote method.\", e);\n                finish();\n                return;\n            }\n        }\n        zzbbk.zzl(\"#007 Could not call remote method.\", null);\n        finish();\n    }",
            "children": [
                "<com.google.android.gms.internal.ads.zzbbk: void zzl(java.lang.String,java.lang.Throwable)>"
            ]
        },
        "Entry-point: <com.google.android.gms.ads.AdActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        try {\n            zzaul zzaulVar = this.zza;\n            if (zzaulVar != null) {\n                zzaulVar.zzq();\n            }\n        } catch (RemoteException e) {\n            zzbbk.zzl(\"#007 Could not call remote method.\", e);\n        }\n        super.onDestroy();\n    }",
            "children": [
                "<com.google.android.gms.internal.ads.zzbbk: void zzl(java.lang.String,java.lang.Throwable)>"
            ]
        },
        "Entry-point: <com.google.android.gms.ads.AdActivity: void onPause()>": {
            "code": "void  onPause()  {\n        try {\n            zzaul zzaulVar = this.zza;\n            if (zzaulVar != null) {\n                zzaulVar.zzl();\n            }\n        } catch (RemoteException e) {\n            zzbbk.zzl(\"#007 Could not call remote method.\", e);\n            finish();\n        }\n        super.onPause();\n    }",
            "children": [
                "<com.google.android.gms.internal.ads.zzbbk: void zzl(java.lang.String,java.lang.Throwable)>"
            ]
        },
        "Entry-point: <com.google.android.gms.ads.AdActivity: void onRestart()>": {
            "code": "void  onRestart()  {\n        super.onRestart();\n        try {\n            zzaul zzaulVar = this.zza;\n            if (zzaulVar != null) {\n                zzaulVar.zzi();\n            }\n        } catch (RemoteException e) {\n            zzbbk.zzl(\"#007 Could not call remote method.\", e);\n            finish();\n        }\n    }",
            "children": [
                "<com.google.android.gms.internal.ads.zzbbk: void zzl(java.lang.String,java.lang.Throwable)>"
            ]
        },
        "Entry-point: <com.google.android.gms.ads.AdActivity: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n        try {\n            zzaul zzaulVar = this.zza;\n            if (zzaulVar != null) {\n                zzaulVar.zzk();\n            }\n        } catch (RemoteException e) {\n            zzbbk.zzl(\"#007 Could not call remote method.\", e);\n            finish();\n        }\n    }",
            "children": [
                "<com.google.android.gms.internal.ads.zzbbk: void zzl(java.lang.String,java.lang.Throwable)>"
            ]
        },
        "Entry-point: <com.google.android.gms.ads.AdActivity: void onSaveInstanceState(android.os.Bundle)>": {
            "code": "void  onSaveInstanceState(android.os.Bundle)  {\n        try {\n            zzaul zzaulVar = this.zza;\n            if (zzaulVar != null) {\n                zzaulVar.zzo(bundle);\n            }\n        } catch (RemoteException e) {\n            zzbbk.zzl(\"#007 Could not call remote method.\", e);\n            finish();\n        }\n        super.onSaveInstanceState(bundle);\n    }",
            "children": [
                "<com.google.android.gms.internal.ads.zzbbk: void zzl(java.lang.String,java.lang.Throwable)>"
            ]
        },
        "Entry-point: <com.google.android.gms.ads.AdActivity: void onStart()>": {
            "code": "void  onStart()  {\n        super.onStart();\n        try {\n            zzaul zzaulVar = this.zza;\n            if (zzaulVar != null) {\n                zzaulVar.zzj();\n            }\n        } catch (RemoteException e) {\n            zzbbk.zzl(\"#007 Could not call remote method.\", e);\n            finish();\n        }\n    }",
            "children": [
                "<com.google.android.gms.internal.ads.zzbbk: void zzl(java.lang.String,java.lang.Throwable)>"
            ]
        },
        "Entry-point: <com.google.android.gms.ads.AdActivity: void onStop()>": {
            "code": "void  onStop()  {\n        try {\n            zzaul zzaulVar = this.zza;\n            if (zzaulVar != null) {\n                zzaulVar.zzp();\n            }\n        } catch (RemoteException e) {\n            zzbbk.zzl(\"#007 Could not call remote method.\", e);\n            finish();\n        }\n        super.onStop();\n    }",
            "children": [
                "<com.google.android.gms.internal.ads.zzbbk: void zzl(java.lang.String,java.lang.Throwable)>"
            ]
        },
        "Entry-point: <com.google.android.gms.ads.AdActivity: void onUserLeaveHint()>": {
            "code": "void  onUserLeaveHint()  {\n        super.onUserLeaveHint();\n        try {\n            zzaul zzaulVar = this.zza;\n            if (zzaulVar != null) {\n                zzaulVar.zzf();\n            }\n        } catch (RemoteException e) {\n            zzbbk.zzl(\"#007 Could not call remote method.\", e);\n        }\n    }",
            "children": [
                "<com.google.android.gms.internal.ads.zzbbk: void zzl(java.lang.String,java.lang.Throwable)>"
            ]
        },
        "Entry-point: <com.google.android.gms.ads.AdActivity: void setContentView(int)>": {
            "code": "void  setContentView(int)  {\n        super.setContentView(i);\n        zza();\n    }",
            "children": []
        },
        "Entry-point: <com.google.android.gms.ads.AdActivity: void setContentView(android.view.View)>": {
            "code": "void  setContentView(android.view.View)  {\n        super.setContentView(i);\n        zza();\n    }",
            "children": []
        },
        "Entry-point: <com.google.android.gms.ads.AdActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>": {
            "code": "void  setContentView(android.view.View,android.view.ViewGroup$LayoutParams)  {\n        super.setContentView(i);\n        zza();\n    }",
            "children": []
        },
        "Entry-point: <com.google.android.gms.common.api.GoogleApiActivity: void onActivityResult(int,int,android.content.Intent)>": {
            "code": "void  onActivityResult(int,int,android.content.Intent)  {\n        super.onActivityResult(i, i2, intent);\n        if (i == 1) {\n            boolean booleanExtra = getIntent().getBooleanExtra(\"notify_manager\", true);\n            this.zaa = 0;\n            setResult(i2, intent);\n            if (booleanExtra) {\n                GoogleApiManager zaa = GoogleApiManager.zaa(this);\n                if (i2 == -1) {\n                    zaa.zai();\n                } else if (i2 == 0) {\n                    zaa.zaq(new ConnectionResult(13, null), getIntent().getIntExtra(\"failing_client_id\", -1));\n                }\n            }\n        } else if (i == 2) {\n            this.zaa = 0;\n            setResult(i2, intent);\n        }\n        finish();\n    }",
            "children": [
                "<com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.api.internal.GoogleApiManager zaa(android.content.Context)>"
            ]
        },
        "Entry-point: <com.google.android.gms.common.api.GoogleApiActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        if (bundle != null) {\n            this.zaa = bundle.getInt(\"resolution\");\n        }\n        if (this.zaa != 1) {\n            zab();\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.google.android.gms.common.api.GoogleApiActivity: void onSaveInstanceState(android.os.Bundle)>": {
            "code": "void  onSaveInstanceState(android.os.Bundle)  {\n        bundle.putInt(\"resolution\", this.zaa);\n        super.onSaveInstanceState(bundle);\n    }",
            "children": []
        },
        "Entry-point: <com.google.firebase.MessagingUnityPlayerActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        if (this.mUnityPlayer != null) {\n            this.mUnityPlayer.quit();\n            this.mUnityPlayer = null;\n        }\n        super.onCreate(bundle);\n    }",
            "children": []
        },
        "Entry-point: <com.google.firebase.MessagingUnityPlayerActivity: void onNewIntent(android.content.Intent)>": {
            "code": "void  onNewIntent(android.content.Intent)  {\n        super.onNewIntent(intent);\n        Bundle extras = intent.getExtras();\n        if (extras == null) {\n            return;\n        }\n        String string = extras.getString(Constants.MessagePayloadKeys.MSGID);\n        String string2 = extras.getString(Constants.MessagePayloadKeys.MSGID);\n        if (string2 == null) {\n            string2 = extras.getString(\"message_id\");\n        }\n        if (string != null && string2 != null) {\n            Intent intent2 = new Intent(this, MessageForwardingService.class);\n            intent2.setAction(MessageForwardingService.ACTION_REMOTE_INTENT);\n            intent2.putExtras(intent);\n            intent2.setData(intent.getData());\n            MessageForwardingService.enqueueWork(this, intent2);\n        }\n        setIntent(intent);\n    }",
            "children": [
                "<com.google.firebase.messaging.MessageForwardingService: void enqueueWork(android.content.Context,android.content.Intent)>"
            ]
        },
        "Entry-point: <com.prime31.UnityPlayerNativeActivity: void onActivityResult(int,int,android.content.Intent)>": {
            "code": "void  onActivityResult(int,int,android.content.Intent)  {\n        super.onActivityResult(i, i2, intent);\n        this._proxyHelper.onActivityResult(i, i2, intent);\n    }",
            "children": []
        },
        "Entry-point: <com.prime31.UnityPlayerNativeActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        super.onBackPressed();\n        this._proxyHelper.invokeZeroParameterMethod(\"onBackPressed\");\n    }",
            "children": []
        },
        "Entry-point: <com.prime31.UnityPlayerNativeActivity: void onConfigurationChanged(android.content.res.Configuration)>": {
            "code": "void  onConfigurationChanged(android.content.res.Configuration)  {\n        super.onConfigurationChanged(configuration);\n        this._proxyHelper.onConfigurationChanged(configuration);\n    }",
            "children": []
        },
        "Entry-point: <com.prime31.UnityPlayerNativeActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        try {\n            this._proxyHelper = new ActivityProxyObjectHelper(this);\n            this._proxyHelper.onCreate(bundle);\n        } catch (Exception e) {\n            Log.i(\"Prime31\", \"Failed to create proxyHelper: \" + e.getMessage());\n        }\n    }",
            "children": [
                "<java.lang.StringBuilder: void <init>(java.lang.String)>"
            ]
        },
        "Entry-point: <com.prime31.UnityPlayerNativeActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        super.onDestroy();\n        this._proxyHelper.invokeZeroParameterMethod(\"onDestroy\");\n    }",
            "children": []
        },
        "Entry-point: <com.prime31.UnityPlayerNativeActivity: boolean onKeyDown(int,android.view.KeyEvent)>": {
            "code": "boolean  onKeyDown(int,android.view.KeyEvent)  {\n        this._proxyHelper.onKeyDown(i, keyEvent);\n        return super.onKeyDown(i, keyEvent);\n    }",
            "children": []
        },
        "Entry-point: <com.prime31.UnityPlayerNativeActivity: boolean onKeyUp(int,android.view.KeyEvent)>": {
            "code": "boolean  onKeyUp(int,android.view.KeyEvent)  {\n        this._proxyHelper.onKeyUp(i, keyEvent);\n        return super.onKeyUp(i, keyEvent);\n    }",
            "children": []
        },
        "Entry-point: <com.prime31.UnityPlayerNativeActivity: void onNewIntent(android.content.Intent)>": {
            "code": "void  onNewIntent(android.content.Intent)  {\n        super.onNewIntent(intent);\n        setIntent(intent);\n        this._proxyHelper.onNewIntent(intent);\n    }",
            "children": []
        },
        "Entry-point: <com.prime31.UnityPlayerNativeActivity: void onPause()>": {
            "code": "void  onPause()  {\n        super.onPause();\n        this._proxyHelper.invokeZeroParameterMethod(\"onPause\");\n    }",
            "children": []
        },
        "Entry-point: <com.prime31.UnityPlayerNativeActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>": {
            "code": "void  onRequestPermissionsResult(int,java.lang.String[],int[])  {\n        if (Build.VERSION.SDK_INT >= 23) {\n            super.onRequestPermissionsResult(i, strArr, iArr);\n        }\n        this._proxyHelper.onRequestPermissionsResult(i, strArr, iArr);\n    }",
            "children": [
                "<android.os.Build$VERSION: void <clinit>()>"
            ]
        },
        "Entry-point: <com.prime31.UnityPlayerNativeActivity: void onRestart()>": {
            "code": "void  onRestart()  {\n        super.onRestart();\n        this._proxyHelper.invokeZeroParameterMethod(\"onRestart\");\n    }",
            "children": []
        },
        "Entry-point: <com.prime31.UnityPlayerNativeActivity: void onRestoreInstanceState(android.os.Bundle)>": {
            "code": "void  onRestoreInstanceState(android.os.Bundle)  {\n        super.onRestoreInstanceState(bundle);\n        this._proxyHelper.onRestoreInstanceState(bundle);\n    }",
            "children": []
        },
        "Entry-point: <com.prime31.UnityPlayerNativeActivity: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n        this._proxyHelper.invokeZeroParameterMethod(\"onResume\");\n    }",
            "children": []
        },
        "Entry-point: <com.prime31.UnityPlayerNativeActivity: void onSaveInstanceState(android.os.Bundle)>": {
            "code": "void  onSaveInstanceState(android.os.Bundle)  {\n        this._proxyHelper.onSaveInstanceState(bundle);\n        super.onSaveInstanceState(bundle);\n    }",
            "children": []
        },
        "Entry-point: <com.prime31.UnityPlayerNativeActivity: void onStart()>": {
            "code": "void  onStart()  {\n        super.onStart();\n        this._proxyHelper.invokeZeroParameterMethod(\"onStart\");\n    }",
            "children": []
        },
        "Entry-point: <com.prime31.UnityPlayerNativeActivity: void onStop()>": {
            "code": "void  onStop()  {\n        super.onStop();\n        this._proxyHelper.invokeZeroParameterMethod(\"onStop\");\n    }",
            "children": []
        },
        "Entry-point: <com.prime31.UnityPlayerNativeActivity: void onTrimMemory(int)>": {
            "code": "void  onTrimMemory(int)  {\n        super.onTrimMemory(i);\n        this._proxyHelper.onTrimMemory(i);\n    }",
            "children": []
        },
        "Entry-point: <com.prime31.UnityPlayerNativeActivity: void onWindowFocusChanged(boolean)>": {
            "code": "void  onWindowFocusChanged(boolean)  {\n        super.onWindowFocusChanged(z);\n        this._proxyHelper.onWindowFocusChanged(z);\n    }",
            "children": []
        },
        "Entry-point: <com.ryanwebb.androidscreenshot.MainActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  None",
            "children": []
        },
        "Entry-point: <com.unity.udp.sdk.UdpExtendedActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        ActivityExtension.onCreate();\n    }",
            "children": [
                "<com.unity.udp.sdk.ActivityExtension: void onCreate()>"
            ]
        },
        "Entry-point: <net.gree.unitywebview.CUnityPlayerActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        requestWindowFeature(1);\n        super.onCreate(bundle);\n        getWindow().setFormat(2);\n        this.mUnityPlayer = new CUnityPlayer(this);\n        setContentView(this.mUnityPlayer);\n        this.mUnityPlayer.requestFocus();\n    }",
            "children": [
                "<android.view.View: void <clinit>()>"
            ]
        },
        "Entry-point: <com.unity3d.player.UnityPlayerActivity: boolean dispatchKeyEvent(android.view.KeyEvent)>": {
            "code": "boolean  dispatchKeyEvent(android.view.KeyEvent)  {\n        if (keyEvent.getAction() == 2) {\n            return this.mUnityPlayer.injectEvent(keyEvent);\n        }\n        return super.dispatchKeyEvent(keyEvent);\n    }",
            "children": []
        },
        "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onConfigurationChanged(android.content.res.Configuration)>": {
            "code": "void  onConfigurationChanged(android.content.res.Configuration)  {\n        super.onConfigurationChanged(configuration);\n        this.mUnityPlayer.configurationChanged(configuration);\n    }",
            "children": []
        },
        "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        requestWindowFeature(1);\n        super.onCreate(bundle);\n        getIntent().putExtra(\"unity\", updateUnityCommandLineArguments(getIntent().getStringExtra(\"unity\")));\n        this.mUnityPlayer = new UnityPlayer(this, this);\n        setContentView(this.mUnityPlayer);\n        this.mUnityPlayer.requestFocus();\n    }",
            "children": [
                "<android.view.View: void <clinit>()>"
            ]
        },
        "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        this.mUnityPlayer.destroy();\n        super.onDestroy();\n    }",
            "children": []
        },
        "Entry-point: <com.unity3d.player.UnityPlayerActivity: boolean onGenericMotionEvent(android.view.MotionEvent)>": {
            "code": "boolean  onGenericMotionEvent(android.view.MotionEvent)  {\n        return this.mUnityPlayer.injectEvent(motionEvent);\n    }",
            "children": []
        },
        "Entry-point: <com.unity3d.player.UnityPlayerActivity: boolean onKeyDown(int,android.view.KeyEvent)>": {
            "code": "boolean  onKeyDown(int,android.view.KeyEvent)  {\n        return this.mUnityPlayer.injectEvent(keyEvent);\n    }",
            "children": []
        },
        "Entry-point: <com.unity3d.player.UnityPlayerActivity: boolean onKeyUp(int,android.view.KeyEvent)>": {
            "code": "boolean  onKeyUp(int,android.view.KeyEvent)  {\n        return this.mUnityPlayer.injectEvent(keyEvent);\n    }",
            "children": []
        },
        "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onLowMemory()>": {
            "code": "void  onLowMemory()  {\n        super.onLowMemory();\n        this.mUnityPlayer.lowMemory();\n    }",
            "children": []
        },
        "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onNewIntent(android.content.Intent)>": {
            "code": "void  onNewIntent(android.content.Intent)  {\n        setIntent(intent);\n        this.mUnityPlayer.newIntent(intent);\n    }",
            "children": []
        },
        "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onPause()>": {
            "code": "void  onPause()  {\n        super.onPause();\n        this.mUnityPlayer.pause();\n    }",
            "children": []
        },
        "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n        this.mUnityPlayer.resume();\n    }",
            "children": []
        },
        "Entry-point: <com.unity3d.player.UnityPlayerActivity: boolean onTouchEvent(android.view.MotionEvent)>": {
            "code": "boolean  onTouchEvent(android.view.MotionEvent)  {\n        return this.mUnityPlayer.injectEvent(motionEvent);\n    }",
            "children": []
        },
        "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onTrimMemory(int)>": {
            "code": "void  onTrimMemory(int)  {\n        super.onTrimMemory(i);\n        if (i == 15) {\n            this.mUnityPlayer.lowMemory();\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onWindowFocusChanged(boolean)>": {
            "code": "void  onWindowFocusChanged(boolean)  {\n        super.onWindowFocusChanged(z);\n        this.mUnityPlayer.windowFocusChanged(z);\n    }",
            "children": []
        },
        "Entry-point: <com.ironsource.sdk.controller.InterstitialActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        Logger.i(TAG, \"onCreate\");\n    }",
            "children": [
                "<com.ironsource.sdk.utils.Logger: void i(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.ironsource.sdk.controller.InterstitialActivity: void onPause()>": {
            "code": "void  onPause()  {\n        super.onPause();\n        Logger.i(TAG, \"onPause\");\n    }",
            "children": [
                "<com.ironsource.sdk.utils.Logger: void i(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.ironsource.sdk.controller.InterstitialActivity: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n        Logger.i(TAG, \"onResume\");\n    }",
            "children": [
                "<com.ironsource.sdk.utils.Logger: void i(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        Logger.i(TAG, \"onBackPressed\");\n        if (BackButtonHandler.getInstance().handleBackButton(this)) {\n            return;\n        }\n        super.onBackPressed();\n    }",
            "children": [
                "<com.ironsource.sdk.handlers.BackButtonHandler: com.ironsource.sdk.handlers.BackButtonHandler getInstance()>"
            ]
        },
        "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        try {\n            Logger.i(TAG, \"onCreate\");\n            hideActivityTitle();\n            hideActivityStatusBar();\n            this.mWebViewController = (WebController) IronSourceAdsPublisherAgent.getInstance(this).getControllerManager().getController();\n            this.mWebViewController.getLayout().setId(1);\n            this.mWebViewController.setOnWebViewControllerChangeListener(this);\n            this.mWebViewController.setVideoEventsListener(this);\n            Intent intent = getIntent();\n            this.mProductType = intent.getStringExtra(Constants.ParametersKeys.PRODUCT_TYPE);\n            this.mIsImmersive = intent.getBooleanExtra(Constants.ParametersKeys.IMMERSIVE, false);\n            this.mAdWebViewId = intent.getStringExtra(Constants.ParametersKeys.AD_VIEW_ID);\n            this.mControllerClearedFromOnPause = false;\n            if (this.mIsImmersive) {\n                getWindow().getDecorView().setOnSystemUiVisibilityChangeListener(new View.OnSystemUiVisibilityChangeListener() { // from class: com.ironsource.sdk.controller.ControllerActivity.2\n                    @Override // android.view.View.OnSystemUiVisibilityChangeListener\n                    public void onSystemUiVisibilityChange(int i) {\n                        if ((i & InputDeviceCompat.SOURCE_TOUCHSCREEN) == 0) {\n                            ControllerActivity.this.mUiThreadHandler.removeCallbacks(ControllerActivity.this.decorViewSettings);\n                            ControllerActivity.this.mUiThreadHandler.postDelayed(ControllerActivity.this.decorViewSettings, 500L);\n                        }\n                    }\n                });\n                runOnUiThread(this.decorViewSettings);\n            }\n            if (!TextUtils.isEmpty(this.mProductType) && ISNEnums.ProductType.OfferWall.toString().equalsIgnoreCase(this.mProductType)) {\n                if (bundle != null) {\n                    AdUnitsState adUnitsState = (AdUnitsState) bundle.getParcelable(\"state\");\n                    if (adUnitsState != null) {\n                        this.mState = adUnitsState;\n                        this.mWebViewController.restoreState(adUnitsState);\n                    }\n                    finish();\n                } else {\n                    this.mState = this.mWebViewController.getSavedState();\n                }\n            }\n            this.mContainer = new RelativeLayout(this);\n            setContentView(this.mContainer, this.MATCH_PARENT_LAYOUT_PARAMS);\n            this.mWebViewFrameContainer = createWebViewFrameContainer(this.mAdWebViewId);\n            if (this.mContainer.findViewById(1) == null && this.mWebViewFrameContainer.getParent() != null) {\n                finish();\n            }\n            initOrientationState();\n            this.mRemoveViewOnDestroy = intent.getBooleanExtra(\"removeViewOnDestroy\", false);\n            if (this.mRemoveViewOnDestroy) {\n                this.mContainer.addView(this.mWebViewFrameContainer, this.MATCH_PARENT_LAYOUT_PARAMS);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n            finish();\n        }\n    }",
            "children": [
                "<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>"
            ]
        },
        "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        super.onDestroy();\n        Logger.i(TAG, \"onDestroy\");\n        if (this.mRemoveViewOnDestroy) {\n            removeWebViewContainerView();\n        }\n        if (this.mControllerClearedFromOnPause) {\n            return;\n        }\n        Logger.i(TAG, \"onDestroy | destroyedFromBackground\");\n        clearWebviewController();\n    }",
            "children": [
                "<com.ironsource.sdk.utils.Logger: void i(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: boolean onKeyDown(int,android.view.KeyEvent)>": {
            "code": "boolean  onKeyDown(int,android.view.KeyEvent)  {\n        if (i == 4 && this.mWebViewController.inCustomView()) {\n            this.mWebViewController.hideCustomView();\n            return true;\n        }\n        if (this.mIsImmersive && (i == 25 || i == 24)) {\n            this.mUiThreadHandler.removeCallbacks(this.decorViewSettings);\n            this.mUiThreadHandler.postDelayed(this.decorViewSettings, 500L);\n        }\n        return super.onKeyDown(i, keyEvent);\n    }",
            "children": []
        },
        "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void onPause()>": {
            "code": "void  onPause()  {\n        super.onPause();\n        String str = TAG;\n        Logger.i(str, \"onPause, isFinishing=\" + isFinishing());\n        try {\n            ((AudioManager) getSystemService(\"audio\")).abandonAudioFocus(null);\n        } catch (Throwable th) {\n            th.printStackTrace();\n        }\n        WebController webController = this.mWebViewController;\n        if (webController != null) {\n            webController.unregisterConnectionReceiver(this);\n            this.mWebViewController.pause();\n            this.mWebViewController.viewableChange(false, Constants.ParametersKeys.MAIN);\n        }\n        if (!this.mRemoveViewOnDestroy && (isControllerView() || !isFinishing())) {\n            removeWebViewContainerView();\n        }\n        if (isFinishing()) {\n            this.mControllerClearedFromOnPause = true;\n            clearWebviewController();\n        }\n    }",
            "children": [
                "<com.ironsource.sdk.utils.Logger: void i(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n        Logger.i(TAG, \"onResume\");\n        if (!this.mRemoveViewOnDestroy) {\n            this.mContainer.addView(this.mWebViewFrameContainer, this.MATCH_PARENT_LAYOUT_PARAMS);\n        }\n        WebController webController = this.mWebViewController;\n        if (webController != null) {\n            webController.registerConnectionReceiver(this);\n            this.mWebViewController.resume();\n            this.mWebViewController.viewableChange(true, Constants.ParametersKeys.MAIN);\n        }\n        ((AudioManager) getSystemService(\"audio\")).requestAudioFocus(null, 3, 2);\n    }",
            "children": [
                "<com.ironsource.sdk.utils.Logger: void i(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void onSaveInstanceState(android.os.Bundle)>": {
            "code": "void  onSaveInstanceState(android.os.Bundle)  {\n        super.onSaveInstanceState(bundle);\n        if (TextUtils.isEmpty(this.mProductType) || !ISNEnums.ProductType.OfferWall.toString().equalsIgnoreCase(this.mProductType)) {\n            return;\n        }\n        this.mState.setShouldRestore(true);\n        bundle.putParcelable(\"state\", this.mState);\n    }",
            "children": [
                "<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>"
            ]
        },
        "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void onUserLeaveHint()>": {
            "code": "void  onUserLeaveHint()  {\n        super.onUserLeaveHint();\n        Logger.i(TAG, \"onUserLeaveHint\");\n    }",
            "children": [
                "<com.ironsource.sdk.utils.Logger: void i(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void onWindowFocusChanged(boolean)>": {
            "code": "void  onWindowFocusChanged(boolean)  {\n        super.onWindowFocusChanged(z);\n        if (this.mIsImmersive && z) {\n            runOnUiThread(this.decorViewSettings);\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void setRequestedOrientation(int)>": {
            "code": "void  setRequestedOrientation(int)  {\n        if (this.currentRequestedRotation != i) {\n            String str = TAG;\n            Logger.i(str, \"Rotation: Req = \" + i + \" Curr = \" + this.currentRequestedRotation);\n            this.currentRequestedRotation = i;\n            super.setRequestedOrientation(i);\n        }\n    }",
            "children": [
                "<com.ironsource.sdk.utils.Logger: void i(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: void finish()>": {
            "code": "void  finish()  {\n        WebController webController;\n        if (this.isSecondaryWebview && (webController = this.mWebViewController) != null) {\n            webController.engageEnd(Constants.ParametersKeys.SECONDARY_CLOSE);\n        }\n        super.finish();\n    }",
            "children": []
        },
        "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        if (this.webView.canGoBack()) {\n            this.webView.goBack();\n        } else {\n            super.onBackPressed();\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        Logger.i(TAG, \"onCreate()\");\n        try {\n            this.mWebViewController = (WebController) IronSourceAdsPublisherAgent.getInstance(this).getControllerManager().getController();\n            hideActivityTitle();\n            hideActivtiyStatusBar();\n            Bundle extras = getIntent().getExtras();\n            this.mUrl = extras.getString(WebController.EXTERNAL_URL);\n            this.isSecondaryWebview = extras.getBoolean(WebController.SECONDARY_WEB_VIEW);\n            this.mIsImmersive = getIntent().getBooleanExtra(Constants.ParametersKeys.IMMERSIVE, false);\n            if (this.mIsImmersive) {\n                getWindow().getDecorView().setOnSystemUiVisibilityChangeListener(new View.OnSystemUiVisibilityChangeListener() { // from class: com.ironsource.sdk.controller.OpenUrlActivity.1\n                    @Override // android.view.View.OnSystemUiVisibilityChangeListener\n                    public void onSystemUiVisibilityChange(int i) {\n                        if ((i & InputDeviceCompat.SOURCE_TOUCHSCREEN) == 0) {\n                            OpenUrlActivity.this.mUiThreadHandler.removeCallbacks(OpenUrlActivity.this.decorViewSettings);\n                            OpenUrlActivity.this.mUiThreadHandler.postDelayed(OpenUrlActivity.this.decorViewSettings, 500L);\n                        }\n                    }\n                });\n                runOnUiThread(this.decorViewSettings);\n            }\n            this.mainLayout = new RelativeLayout(this);\n            setContentView(this.mainLayout, new ViewGroup.LayoutParams(-1, -1));\n        } catch (Exception e) {\n            e.printStackTrace();\n            finish();\n        }\n    }",
            "children": [
                "<com.ironsource.sdk.agent.IronSourceAdsPublisherAgent: com.ironsource.sdk.agent.IronSourceAdsPublisherAgent getInstance(android.content.Context)>"
            ]
        },
        "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        super.onDestroy();\n        destroyWebView();\n    }",
            "children": []
        },
        "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: boolean onKeyDown(int,android.view.KeyEvent)>": {
            "code": "boolean  onKeyDown(int,android.view.KeyEvent)  {\n        if (this.mIsImmersive && (i == 25 || i == 24)) {\n            this.mUiThreadHandler.postDelayed(this.decorViewSettings, 500L);\n        }\n        return super.onKeyDown(i, keyEvent);\n    }",
            "children": []
        },
        "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: void onPause()>": {
            "code": "void  onPause()  {\n        super.onPause();\n        removeWebViewFromLayout();\n    }",
            "children": []
        },
        "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n        createWebView();\n    }",
            "children": []
        },
        "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: void onWindowFocusChanged(boolean)>": {
            "code": "void  onWindowFocusChanged(boolean)  {\n        super.onWindowFocusChanged(z);\n        if (this.mIsImmersive && z) {\n            runOnUiThread(this.decorViewSettings);\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.prime31.EtceteraProxyActivity: void onActivityResult(int,int,android.content.Intent)>": {
            "code": "void  onActivityResult(int,int,android.content.Intent)  {\n        super.onActivityResult(i, i2, intent);\n        try {\n        } catch (Exception e) {\n            String str = TAG;\n            Log.e(str, \"fatal error retrieving image: \" + e.getMessage());\n            if (i == 222) {\n                EtceteraPlugin.instance().photoAlbumItemChosen(null);\n            } else if (i == 111) {\n                EtceteraPlugin.instance().cameraPhotoTaken(null);\n            } else if (i == 333) {\n                EtceteraPlugin.instance().videoTaken(null);\n            }\n        }\n        if (i == 222) {\n            Log.i(TAG, \"processing ALBUM result\");\n            handleAlbum(i2, intent);\n        } else if (i == 111) {\n            Log.i(TAG, \"processing CAMERA result\");\n            handleCamera(i2, intent);\n        } else {\n            if (i == 333) {\n                Log.i(TAG, \"processing VIDEO result\");\n                handleVideo(i2, intent);\n            }\n            finish();\n        }\n        finish();\n    }",
            "children": [
                "<com.prime31.EtceteraPluginBase: com.prime31.EtceteraPlugin instance()>"
            ]
        },
        "Entry-point: <com.prime31.EtceteraProxyActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        _type = getIntent().getExtras().getString(\"type\");\n        String str = TAG;\n        Log.i(str, \"proxy received action: \" + _type);\n        if (_type.equals(PROXY_ALBUM)) {\n            Intent intent = new Intent();\n            intent.setType(\"image/*\");\n            intent.setAction(\"android.intent.action.GET_CONTENT\");\n            intent.putExtra(\"return-data\", true);\n            startActivityForResult(Intent.createChooser(intent, \"Select Picture\"), 222);\n        } else if (_type.equals(PROXY_CAMERA)) {\n            Intent intent2 = new Intent(\"android.media.action.IMAGE_CAPTURE\");\n            try {\n                File createImageFile = createImageFile();\n                this._currentPhotoPath = createImageFile.getAbsolutePath();\n                Uri uriForFile = FileProvider.getUriForFile(this, String.valueOf(getPackageName()) + \".provider\", createImageFile);\n                String str2 = TAG;\n                Log.i(str2, \"using photoUri: \" + uriForFile);\n                intent2.putExtra(\"output\", uriForFile);\n                startActivityForResult(intent2, 111);\n            } catch (IOException e) {\n                this._currentPhotoPath = null;\n                String str3 = TAG;\n                Log.i(str3, \"error creating or taking photo: \" + e.getMessage());\n            }\n        } else if (_type.equals(\"video\")) {\n            _destinationFilePath = getIntent().getExtras().getString(\"path\");\n            startActivityForResult(new Intent(\"android.media.action.VIDEO_CAPTURE\"), 333);\n        }\n    }",
            "children": [
                "<android.util.Log: int i(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.prime31.P31VideoPlayerActivity: void onConfigurationChanged(android.content.res.Configuration)>": {
            "code": "void  onConfigurationChanged(android.content.res.Configuration)  {\n        super.onConfigurationChanged(configuration);\n    }",
            "children": []
        },
        "Entry-point: <com.prime31.P31VideoPlayerActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        setTheme(16973831);\n        super.onCreate(bundle);\n        Log.i(TAG, \"icicle: \" + bundle);\n        Bundle bundle2 = (Bundle) getLastNonConfigurationInstance();\n        if (bundle2 != null) {\n            this._savedPositionBeforeRotation = bundle2.getInt(SAVED_POSITION);\n            Log.i(TAG, \"retrieved saved position: \" + this._savedPositionBeforeRotation);\n        }\n        this._layout = new FrameLayout(this);\n        this._preview = new SurfaceView(this);\n        this._layout.addView(this._preview);\n        setContentView(this._layout);\n        this._holder = this._preview.getHolder();\n        this._holder.addCallback(this);\n        this._holder.setType(3);\n        Bundle extras = getIntent().getExtras();\n        this._showControls = extras.getBoolean(\"showControls\");\n        if (!this._showControls) {\n            this._closeOnTouch = extras.getBoolean(\"closeOnTouch\");\n        }\n        this._path = extras.getString(\"path\");\n        this._isRemoteVideo = this._path.startsWith(HttpHost.DEFAULT_SCHEME_NAME);\n        this._layout.setBackgroundColor(extras.getInt(\"color\"));\n        this._scalingMode = extras.getInt(\"scalingMode\");\n    }",
            "children": [
                "<android.util.Log: int i(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.prime31.P31VideoPlayerActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        super.onDestroy();\n        Log.i(TAG, \"onDestroy\");\n        this._layout.removeAllViews();\n        releaseMediaPlayer();\n        doCleanUp();\n    }",
            "children": [
                "<android.util.Log: int i(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.prime31.P31VideoPlayerActivity: void onPause()>": {
            "code": "void  onPause()  {\n        super.onPause();\n        Log.i(TAG, \"onPause\");\n        getCurrentPosition();\n        pause();\n        releaseMediaPlayer();\n        doCleanUp();\n    }",
            "children": [
                "<android.util.Log: int i(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.prime31.P31VideoPlayerActivity: void onResume()>": {
            "code": "void  onResume()  {\n        super.onPause();\n        Log.i(TAG, \"onResume\");\n        if (this._mediaPlayer == null && !this._surfaceDestroyed && this._savedPositionBeforeRotation > 0) {\n            Log.i(TAG, \"null mediaplayer most likely due to memory pressure. recreating...\");\n            playVideo();\n        }\n        start();\n    }",
            "children": [
                "<android.util.Log: int i(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.prime31.P31VideoPlayerActivity: void onStop()>": {
            "code": "void  onStop()  {\n        super.onStop();\n        Log.i(TAG, \"onStop\");\n        releaseMediaPlayer();\n        doCleanUp();\n    }",
            "children": [
                "<android.util.Log: int i(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.prime31.P31VideoPlayerActivity: boolean onTouchEvent(android.view.MotionEvent)>": {
            "code": "boolean  onTouchEvent(android.view.MotionEvent)  {\n        MediaController mediaController = this._mediaController;\n        if (mediaController != null && this._mediaPlayer != null) {\n            mediaController.onTouchEvent(motionEvent);\n        } else if (!this._showControls && this._mediaPlayer != null && this._closeOnTouch) {\n            Log.i(TAG, \"screen touched and closeOnTouch is true. releasing player and finishing\");\n            releaseMediaPlayer();\n            finish();\n        }\n        return super.onTouchEvent(motionEvent);\n    }",
            "children": [
                "<android.util.Log: int i(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.prime31.WebViewActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        if (this._disableBackButton) {\n            return;\n        }\n        EtceteraPlugin.instance().UnitySendMessage(\"webViewCancelled\", \"\");\n        super.onBackPressed();\n    }",
            "children": [
                "<com.prime31.EtceteraPluginBase: com.prime31.EtceteraPlugin instance()>"
            ]
        },
        "Entry-point: <com.prime31.WebViewActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        this._spinner = new ProgressDialog(this);\n        this._spinner.requestWindowFeature(1);\n        this._spinner.setMessage(\"Loading...\");\n        this._disableBackButton = getIntent().getExtras().getBoolean(\"disableBackButton\", false);\n        if (getIntent().getExtras().getBoolean(\"disableTitle\", false)) {\n            Log.i(TAG, \"disabling title in web view window\");\n            requestWindowFeature(1);\n        }\n        String string = getIntent().getExtras().getString(\"url\");\n        setUpWebView(string.toLowerCase().contains(MRGSSocial.TWITTER));\n        this._webView.loadUrl(string);\n    }",
            "children": [
                "<android.app.ProgressDialog: void <init>(android.content.Context)>"
            ]
        },
        "Entry-point: <com.prime31.WebViewActivity: void onPause()>": {
            "code": "void  onPause()  {\n        super.onPause();\n        try {\n            Class.forName(\"android.webkit.WebView\").getMethod(\"onPause\", null).invoke(this._webView, null);\n        } catch (ClassNotFoundException | IllegalAccessException | NoSuchMethodException | InvocationTargetException | Exception unused) {\n        }\n    }",
            "children": [
                "<java.lang.Class: java.lang.Class forName(java.lang.String)>"
            ]
        },
        "Entry-point: <com.unity.purchasing.googleplay.PurchaseActivity: void onActivityResult(int,int,android.content.Intent)>": {
            "code": "void  onActivityResult(int,int,android.content.Intent)  {\n        super.onActivityResult(i, i2, intent);\n        processActivityResult(i, i2, intent);\n        this.receivedResult = true;\n    }",
            "children": []
        },
        "Entry-point: <com.unity.purchasing.googleplay.PurchaseActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        Log.i(TAG, \"Creating purchase activity\");\n        Bundle extras = getIntent().getExtras();\n        if (extras != null && extras.getBoolean(\"vr\", false)) {\n            View decorView = getWindow().getDecorView();\n            if (Build.VERSION.SDK_INT >= 11) {\n                decorView.setSystemUiVisibility(6);\n            }\n        }\n        String string = getIntent().getExtras().getString(\"productId\");\n        String string2 = getIntent().getExtras().getString(\"developerPayload\");\n        String string3 = getIntent().getExtras().getString(\"type\");\n        String string4 = getIntent().getExtras().getString(\"oldSkuMetadata\");\n        String string5 = getIntent().getExtras().getString(\"newSku\");\n        if (string3 != null && string3.equals(\"subscription_update\")) {\n            if (GooglePlayPurchasing.ContinueSubscriptionUpdate(this, string4, string5)) {\n                return;\n            }\n            setResult(0);\n            finish();\n        } else if (GooglePlayPurchasing.ContinuePurchase(this, string, string2)) {\n        } else {\n            setResult(0);\n            finish();\n        }\n    }",
            "children": [
                "<com.unity.purchasing.googleplay.GooglePlayPurchasing: boolean ContinuePurchase(android.app.Activity,java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.unity.purchasing.googleplay.PurchaseActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        super.onDestroy();\n        if (this.receivedResult) {\n            return;\n        }\n        processActivityResult(999, 0, null);\n    }",
            "children": []
        },
        "Entry-point: <com.unity.udp.udpsandbox.LoginActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        setContentView(R.layout.udp_login_activity);\n        findViewById(R.id.emailText).getRootView().setBackgroundColor(getResources().getColor(17170443));\n        setTitle(TITLE_SIGN);\n        this.context = this;\n    }",
            "children": []
        },
        "Entry-point: <com.unity.udp.udpsandbox.LoginActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        super.onDestroy();\n    }",
            "children": []
        },
        "Entry-point: <com.unity.udp.udpsandbox.UDPPurchasing$LoginHelperActivity: void onActivityResult(int,int,android.content.Intent)>": {
            "code": "void  onActivityResult(int,int,android.content.Intent)  None",
            "children": []
        },
        "Entry-point: <com.unity.udp.udpsandbox.UDPPurchasing$LoginHelperActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  None",
            "children": [
                "<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>"
            ]
        },
        "Entry-point: <com.unity3d.services.ads.adunit.AdUnitTransparentActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  None",
            "children": [
                "<android.graphics.drawable.ColorDrawable: void <init>(int)>"
            ]
        },
        "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        AdUnitEvent adUnitEvent;\n        super.onCreate(bundle);\n        if (WebViewApp.getCurrentApp() == null) {\n            DeviceLog.error(\"Unity Ads web app is null, closing Unity Ads activity from onCreate\");\n            finish();\n            return;\n        }\n        AdUnit.setAdUnitActivity(this);\n        Intent.setActiveActivity(this);\n        createLayout();\n        ViewUtilities.removeViewFromParent(this._layout);\n        AdUnitRelativeLayout adUnitRelativeLayout = this._layout;\n        addContentView(adUnitRelativeLayout, adUnitRelativeLayout.getLayoutParams());\n        if (bundle == null) {\n            this._views = getIntent().getStringArrayExtra(EXTRA_VIEWS);\n            this._keyEventList = getIntent().getIntegerArrayListExtra(EXTRA_KEY_EVENT_LIST);\n            if (getIntent().hasExtra(\"orientation\")) {\n                this._orientation = getIntent().getIntExtra(\"orientation\", -1);\n            }\n            if (getIntent().hasExtra(EXTRA_SYSTEM_UI_VISIBILITY)) {\n                this._systemUiVisibility = getIntent().getIntExtra(EXTRA_SYSTEM_UI_VISIBILITY, 0);\n            }\n            if (getIntent().hasExtra(EXTRA_ACTIVITY_ID)) {\n                this._activityId = getIntent().getIntExtra(EXTRA_ACTIVITY_ID, -1);\n            }\n            if (getIntent().hasExtra(EXTRA_DISPLAY_CUTOUT_MODE)) {\n                this._displayCutoutMode = getIntent().getIntExtra(EXTRA_DISPLAY_CUTOUT_MODE, 0);\n            }\n            adUnitEvent = AdUnitEvent.ON_CREATE;\n        } else {\n            this._views = bundle.getStringArray(EXTRA_VIEWS);\n            this._orientation = bundle.getInt(\"orientation\", -1);\n            this._systemUiVisibility = bundle.getInt(EXTRA_SYSTEM_UI_VISIBILITY, 0);\n            this._keyEventList = bundle.getIntegerArrayList(EXTRA_KEY_EVENT_LIST);\n            this._keepScreenOn = bundle.getBoolean(EXTRA_KEEP_SCREEN_ON);\n            this._activityId = bundle.getInt(EXTRA_ACTIVITY_ID, -1);\n            this._displayCutoutMode = bundle.getInt(EXTRA_DISPLAY_CUTOUT_MODE, 0);\n            setKeepScreenOn(this._keepScreenOn);\n            adUnitEvent = AdUnitEvent.ON_RESTORE;\n        }\n        setOrientation(this._orientation);\n        setSystemUiVisibility(this._systemUiVisibility);\n        setLayoutInDisplayCutoutMode(this._displayCutoutMode);\n        String[] strArr = this._views;\n        if (strArr != null) {\n            for (String str : strArr) {\n                IAdUnitViewHandler viewHandler = getViewHandler(str);\n                if (viewHandler != null) {\n                    viewHandler.onCreate(this, bundle);\n                }\n            }\n        }\n        WebViewApp.getCurrentApp().sendEvent(WebViewEventCategory.ADUNIT, adUnitEvent, Integer.valueOf(this._activityId));\n    }",
            "children": [
                "<java.lang.Integer: java.lang.Integer valueOf(int)>"
            ]
        },
        "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        super.onDestroy();\n        if (WebViewApp.getCurrentApp() == null) {\n            if (isFinishing()) {\n                return;\n            }\n            DeviceLog.error(\"Unity Ads web app is null, closing Unity Ads activity from onDestroy\");\n            finish();\n            return;\n        }\n        WebViewApp.getCurrentApp().sendEvent(WebViewEventCategory.ADUNIT, AdUnitEvent.ON_DESTROY, Boolean.valueOf(isFinishing()), Integer.valueOf(this._activityId));\n        Map<String, IAdUnitViewHandler> map = this._viewHandlers;\n        if (map != null) {\n            for (Map.Entry<String, IAdUnitViewHandler> entry : map.entrySet()) {\n                if (entry.getValue() != null) {\n                    entry.getValue().onDestroy(this);\n                }\n            }\n        }\n        if (AdUnit.getCurrentAdUnitActivityId() == this._activityId) {\n            AdUnit.setAdUnitActivity(null);\n        }\n        Intent.removeActiveActivity(this);\n    }",
            "children": [
                "<com.unity3d.services.core.api.Intent: void removeActiveActivity(android.app.Activity)>"
            ]
        },
        "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: boolean onKeyDown(int,android.view.KeyEvent)>": {
            "code": "boolean  onKeyDown(int,android.view.KeyEvent)  {\n        ArrayList<Integer> arrayList = this._keyEventList;\n        if (arrayList == null || !arrayList.contains(Integer.valueOf(i))) {\n            return false;\n        }\n        WebViewApp.getCurrentApp().sendEvent(WebViewEventCategory.ADUNIT, AdUnitEvent.KEY_DOWN, Integer.valueOf(i), Long.valueOf(keyEvent.getEventTime()), Long.valueOf(keyEvent.getDownTime()), Integer.valueOf(keyEvent.getRepeatCount()), Integer.valueOf(this._activityId));\n        return true;\n    }",
            "children": [
                "<java.lang.Integer: java.lang.Integer valueOf(int)>"
            ]
        },
        "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onPause()>": {
            "code": "void  onPause()  {\n        super.onPause();\n        if (WebViewApp.getCurrentApp() == null) {\n            if (isFinishing()) {\n                return;\n            }\n            DeviceLog.error(\"Unity Ads web app is null, closing Unity Ads activity from onPause\");\n            finish();\n            return;\n        }\n        if (WebViewApp.getCurrentApp().getWebView() == null) {\n            DeviceLog.warning(\"Unity Ads web view is null, from onPause\");\n        } else if (isFinishing()) {\n            ViewUtilities.removeViewFromParent(WebViewApp.getCurrentApp().getWebView());\n        }\n        Map<String, IAdUnitViewHandler> map = this._viewHandlers;\n        if (map != null) {\n            for (Map.Entry<String, IAdUnitViewHandler> entry : map.entrySet()) {\n                if (entry.getValue() != null) {\n                    entry.getValue().onPause(this);\n                }\n            }\n        }\n        WebViewApp.getCurrentApp().sendEvent(WebViewEventCategory.ADUNIT, AdUnitEvent.ON_PAUSE, Boolean.valueOf(isFinishing()), Integer.valueOf(this._activityId));\n    }",
            "children": [
                "<java.lang.Integer: java.lang.Integer valueOf(int)>"
            ]
        },
        "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>": {
            "code": "void  onRequestPermissionsResult(int,java.lang.String[],int[])  {\n        try {\n            JSONArray jSONArray = new JSONArray();\n            JSONArray jSONArray2 = new JSONArray();\n            for (String str : strArr) {\n                jSONArray.put(str);\n            }\n            for (int i2 : iArr) {\n                jSONArray2.put(i2);\n            }\n            WebViewApp.getCurrentApp().sendEvent(WebViewEventCategory.PERMISSIONS, PermissionsEvent.PERMISSIONS_RESULT, Integer.valueOf(i), jSONArray, jSONArray2);\n        } catch (Exception e) {\n            WebViewApp.getCurrentApp().sendEvent(WebViewEventCategory.PERMISSIONS, PermissionsEvent.PERMISSIONS_ERROR, e.getMessage());\n        }\n    }",
            "children": [
                "<com.unity3d.services.core.webview.WebViewApp: com.unity3d.services.core.webview.WebViewApp getCurrentApp()>"
            ]
        },
        "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n        if (WebViewApp.getCurrentApp() == null) {\n            if (isFinishing()) {\n                return;\n            }\n            DeviceLog.error(\"Unity Ads web app is null, closing Unity Ads activity from onResume\");\n            finish();\n            return;\n        }\n        setViews(this._views);\n        Map<String, IAdUnitViewHandler> map = this._viewHandlers;\n        if (map != null) {\n            for (Map.Entry<String, IAdUnitViewHandler> entry : map.entrySet()) {\n                if (entry.getValue() != null) {\n                    entry.getValue().onResume(this);\n                }\n            }\n        }\n        WebViewApp.getCurrentApp().sendEvent(WebViewEventCategory.ADUNIT, AdUnitEvent.ON_RESUME, Integer.valueOf(this._activityId));\n    }",
            "children": [
                "<java.lang.Integer: java.lang.Integer valueOf(int)>"
            ]
        },
        "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onSaveInstanceState(android.os.Bundle)>": {
            "code": "void  onSaveInstanceState(android.os.Bundle)  {\n        super.onSaveInstanceState(bundle);\n        bundle.putInt(\"orientation\", this._orientation);\n        bundle.putInt(EXTRA_SYSTEM_UI_VISIBILITY, this._systemUiVisibility);\n        bundle.putIntegerArrayList(EXTRA_KEY_EVENT_LIST, this._keyEventList);\n        bundle.putBoolean(EXTRA_KEEP_SCREEN_ON, this._keepScreenOn);\n        bundle.putStringArray(EXTRA_VIEWS, this._views);\n        bundle.putInt(EXTRA_ACTIVITY_ID, this._activityId);\n    }",
            "children": []
        },
        "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onStart()>": {
            "code": "void  onStart()  {\n        super.onStart();\n        if (WebViewApp.getCurrentApp() == null) {\n            if (isFinishing()) {\n                return;\n            }\n            DeviceLog.error(\"Unity Ads web app is null, closing Unity Ads activity from onStart\");\n            finish();\n            return;\n        }\n        Map<String, IAdUnitViewHandler> map = this._viewHandlers;\n        if (map != null) {\n            for (Map.Entry<String, IAdUnitViewHandler> entry : map.entrySet()) {\n                if (entry.getValue() != null) {\n                    entry.getValue().onStart(this);\n                }\n            }\n        }\n        WebViewApp.getCurrentApp().sendEvent(WebViewEventCategory.ADUNIT, AdUnitEvent.ON_START, Integer.valueOf(this._activityId));\n    }",
            "children": [
                "<java.lang.Integer: java.lang.Integer valueOf(int)>"
            ]
        },
        "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onStop()>": {
            "code": "void  onStop()  {\n        super.onStop();\n        if (WebViewApp.getCurrentApp() == null) {\n            if (isFinishing()) {\n                return;\n            }\n            DeviceLog.error(\"Unity Ads web app is null, closing Unity Ads activity from onStop\");\n            finish();\n            return;\n        }\n        Map<String, IAdUnitViewHandler> map = this._viewHandlers;\n        if (map != null) {\n            for (Map.Entry<String, IAdUnitViewHandler> entry : map.entrySet()) {\n                if (entry.getValue() != null) {\n                    entry.getValue().onStop(this);\n                }\n            }\n        }\n        WebViewApp.getCurrentApp().sendEvent(WebViewEventCategory.ADUNIT, AdUnitEvent.ON_STOP, Integer.valueOf(this._activityId));\n    }",
            "children": [
                "<java.lang.Integer: java.lang.Integer valueOf(int)>"
            ]
        },
        "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onWindowFocusChanged(boolean)>": {
            "code": "void  onWindowFocusChanged(boolean)  {\n        if (z) {\n            WebViewApp.getCurrentApp().sendEvent(WebViewEventCategory.ADUNIT, AdUnitEvent.ON_FOCUS_GAINED, Integer.valueOf(this._activityId));\n        } else {\n            WebViewApp.getCurrentApp().sendEvent(WebViewEventCategory.ADUNIT, AdUnitEvent.ON_FOCUS_LOST, Integer.valueOf(this._activityId));\n        }\n        super.onWindowFocusChanged(z);\n    }",
            "children": [
                "<java.lang.Integer: java.lang.Integer valueOf(int)>"
            ]
        },
        "Entry-point: <com.vk.api.sdk.ui.VKCaptchaActivity: void finish()>": {
            "code": "void  finish()  None",
            "children": []
        },
        "Entry-point: <com.vk.api.sdk.ui.VKCaptchaActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  None",
            "children": [
                "<kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>"
            ]
        },
        "Entry-point: <com.vk.api.sdk.ui.VKCaptchaActivity: void onDestroy()>": {
            "code": "void  onDestroy()  None",
            "children": [
                "<com.vk.api.sdk.utils.VKValidationLocker: void signal()>"
            ]
        },
        "Entry-point: <com.vk.api.sdk.ui.VKConfirmationActivity: void finish()>": {
            "code": "void  finish()          super.finish();\n        VKValidationLocker.INSTANCE.signal();\n        overridePendingTransition(0, 0);\n    }\n\n",
            "children": [
                "<com.vk.api.sdk.utils.VKValidationLocker: void signal()>"
            ]
        },
        "Entry-point: <com.vk.api.sdk.ui.VKConfirmationActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)          super.onCreate(bundle);\n        overridePendingTransition(0, 0);\n        VKConfirmationActivity vKConfirmationActivity = this;\n        setContentView(new FrameLayout(vKConfirmationActivity));\n        new AlertDialog.Builder(vKConfirmationActivity, 5).setTitle(R.string.vk_confirm).setMessage(getIntent().getStringExtra(KEY_MESSAGE)).setPositiveButton(17039370, new DialogInterface.OnClickListener() { // from class: com.vk.api.sdk.ui.VKConfirmationActivity$onCreate$1\n            @Override // android.content.DialogInterface.OnClickListener\n            public final void onClick(DialogInterface dialogInterface, int i) {\n                VKConfirmationActivity.Companion.setResult(true);\n                VKConfirmationActivity.this.finish();\n            }\n        }).setNegativeButton(17039360, new DialogInterface.OnClickListener() { // from class: com.vk.api.sdk.ui.VKConfirmationActivity$onCreate$2\n            @Override // android.content.DialogInterface.OnClickListener\n            public final void onClick(DialogInterface dialogInterface, int i) {\n                VKConfirmationActivity.Companion.setResult(false);\n                VKConfirmationActivity.this.finish();\n            }\n        }).setOnCancelListener(new DialogInterface.OnCancelListener() { // from class: com.vk.api.sdk.ui.VKConfirmationActivity$onCreate$3\n            @Override // android.content.DialogInterface.OnCancelListener\n            public final void onCancel(DialogInterface dialogInterface) {\n                VKConfirmationActivity.Companion.setResult(false);\n                VKConfirmationActivity.this.finish();\n            }\n        }).show();\n    }\n\n",
            "children": [
                "<com.vk.api.sdk.ui.VKConfirmationActivity$onCreate$3: void <init>(com.vk.api.sdk.ui.VKConfirmationActivity)>"
            ]
        },
        "Entry-point: <com.vk.api.sdk.ui.VKConfirmationActivity: void onDestroy()>": {
            "code": "void  onDestroy()          super.onDestroy();\n        VKValidationLocker.INSTANCE.signal();\n    }\n\n",
            "children": [
                "<com.vk.api.sdk.utils.VKValidationLocker: void signal()>"
            ]
        },
        "Entry-point: <com.vk.api.sdk.ui.VKWebViewAuthActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)       super.onCreate(bundle);\n        setContentView(R.layout.vk_webview_auth_dialog);\n        View findViewById = findViewById(R.id.webView);\n        Intrinsics.checkExpressionValueIsNotNull(findViewById, \"findViewById(R.id.webView)\");\n        this.webView = (WebView) findViewById;\n        View findViewById2 = findViewById(R.id.progress);\n        Intrinsics.checkExpressionValueIsNotNull(findViewById2, \"findViewById(R.id.progress)\");\n        this.progress = (ProgressBar) findViewById2;\n        VKAuthParams fromBundle = VKAuthParams.Companion.fromBundle(getIntent().getBundleExtra(VK_EXTRA_AUTH_PARAMS));\n        if (fromBundle == null) {\n            if (!needValidationResult()) {\n                finish();\n            }\n        } else {\n            this.params = fromBundle;\n        }\n        configureWebView();\n        loadUrl();\n    }\n\n   ",
            "children": [
                "<kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>"
            ]
        },
        "Entry-point: <com.vk.api.sdk.ui.VKWebViewAuthActivity: void onDestroy()>": {
            "code": "void  onDestroy()       WebView webView = this.webView;\n        if (webView == null) {\n            Intrinsics.throwUninitializedPropertyAccessException(\"webView\");\n        }\n        webView.destroy();\n        VKValidationLocker.INSTANCE.signal();\n        super.onDestroy();\n    }\n\n   ",
            "children": [
                "<kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>"
            ]
        }
    }
}