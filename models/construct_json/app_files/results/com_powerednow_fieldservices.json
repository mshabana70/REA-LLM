{
    "raw": [
        {
            "entry_point": "Entry-point: <com.intentfilter.androidpermissions.PermissionsActivity: void <clinit>()>",
            "children": [
                "<com.intentfilter.androidpermissions.helpers.Logger: com.intentfilter.androidpermissions.helpers.Logger loggerFor(java.lang.Class)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.intentfilter.androidpermissions.PermissionsActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.intentfilter.androidpermissions.PermissionsActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<androidx.core.app.ActivityCompat: void requestPermissions(android.app.Activity,java.lang.String[],int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.intentfilter.androidpermissions.PermissionsActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>",
            "children": [
                "<java.util.Arrays: java.util.List asList(java.lang.Object[])>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.api.LoadSumUpPaymentSettingsActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.api.LoadSumUpPaymentSettingsActivity: void onCreate(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.api.LoadSumUpPaymentsActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.api.LoadSumUpPaymentsActivity: void onActivityResult(int,int,android.content.Intent)>",
            "children": [
                "<java.lang.String: java.lang.String valueOf(int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.api.LoadSumUpPaymentsActivity: void onBackPressed()>",
            "children": [
                "<com.sumup.merchant.Models.OrderModel: void clearOrderPad()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.api.LoadSumUpPaymentsActivity: void onCreate(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.api.LoadSumUpPaymentsActivity: void onPause()>"
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.api.LoadSumUpPaymentsActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>",
            "children": [
                "<com.sumup.merchant.util.PermissionUtils: void setCanAskPermission(android.app.Activity,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.api.LoadSumUpPaymentsActivity: void onStart()>"
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.BtTroubleshootingActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.CheckoutAPIDrivenPageActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.CheckoutAPIDrivenPageActivity: void onActivityResult(int,int,android.content.Intent)>",
            "children": [
                "<java.lang.String: java.lang.String valueOf(int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.CheckoutAPIDrivenPageActivity: void onBackPressed()>",
            "children": [
                "<com.sumup.merchant.api.LoadSumUpPaymentsActivity: void sendAffiliateResponse(android.app.Activity,int,java.lang.String,boolean)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.CheckoutAPIDrivenPageActivity: void onPause()>",
            "children": [
                "<com.sumup.merchant.CoreState: org.greenrobot.eventbus.EventBus getBus()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.CheckoutAPIDrivenPageActivity: void onResume()>",
            "children": [
                "<com.sumup.merchant.CoreState: org.greenrobot.eventbus.EventBus getBus()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.CheckoutAPIDrivenPageActivity: void onSaveInstanceState(android.os.Bundle)>",
            "children": [
                "<icepick.Icepick: void saveInstanceState(java.lang.Object,android.os.Bundle)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.DashboardActivity: void <init>()>",
            "children": [
                "<android.os.Handler: void <init>(android.os.Looper)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.DashboardActivity: void onDestroy()>"
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.DashboardActivity: void onResume()>"
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.MainActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.PaymentSettingsActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.PaymentSettingsActivity: void onResume()>"
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.PinPlusSetupActivity: void <clinit>()>",
            "children": [
                "<android.app.Activity: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.PinPlusSetupActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.PinPlusSetupActivity: void onActivityResult(int,int,android.content.Intent)>",
            "children": [
                "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.PinPlusSetupActivity: void onBackPressed()>"
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.PinPlusSetupActivity: void onCreate(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.PinPlusSetupActivity: android.app.Dialog onCreateDialog(int)>",
            "children": [
                "<com.sumup.merchant.util.FirmwareUpdateUtil: java.lang.String getFirmwareUpdateMessage(com.sumup.merchant.Models.FirmwareInfo,android.content.Context)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.PinPlusSetupActivity: void onPause()>"
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.PinPlusSetupActivity: void onRestart()>",
            "children": [
                "<com.sumup.merchant.CoreState: org.greenrobot.eventbus.EventBus getBus()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.PinPlusSetupActivity: void onResume()>"
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.PinPlusSetupActivity: void onStart()>"
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.PinPlusSetupActivity: void onStop()>",
            "children": [
                "<com.sumup.merchant.CoreState: org.greenrobot.eventbus.EventBus getBus()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.ResendReceiptActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.SendSmsActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.SendSmsActivity: void onBackPressed()>",
            "children": [
                "<com.sumup.merchant.util.KeyboardUtils: void hideKeyboard(android.app.Activity)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.SendSmsActivity: void onResume()>"
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.SendSmsActivity: void onSaveInstanceState(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.TransactionStateActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.SumUpBaseActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.SumUpBaseActivity: void onBackPressed()>",
            "children": [
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.SumUpBaseActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.sumup.merchant.ui.Activities.LoginActivity: void startForExpiredAccessTokenPassingDeepLink(boolean,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.SumUpBaseActivity: boolean onOptionsItemSelected(android.view.MenuItem)>"
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.SumUpBaseActivity: void onResume()>",
            "children": [
                "<com.sumup.merchant.Network.rpcManager: com.sumup.merchant.Network.rpcManager Instance()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.SumUpBaseActivity: void startActivity(android.content.Intent)>"
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.SumUpBaseActivity: void startActivityForResult(android.content.Intent,int)>"
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.LoginActivity: void <init>()>",
            "children": [
                "<com.sumup.merchant.CoreState: com.sumup.merchant.CoreState Instance()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.LoginActivity: void onActivityResult(int,int,android.content.Intent)>",
            "children": [
                "<com.sumup.merchant.CoreState: java.lang.String getCurrentEnvironmentName()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.LoginActivity: void onBackPressed()>",
            "children": [
                "<com.sumup.merchant.CoreState: com.sumup.merchant.CoreState Instance()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.LoginActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.sumup.merchant.util.LoginUtils: boolean canLogInImmediately()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.LoginActivity: boolean onCreateOptionsMenu(android.view.Menu)>",
            "children": [
                "<com.sumup.merchant.CoreState: java.lang.String getCurrentEnvironmentName()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.LoginActivity: void onDestroy()>",
            "children": [
                "<com.sumup.merchant.CoreState: org.greenrobot.eventbus.EventBus getBus()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.LoginActivity: void onNewIntent(android.content.Intent)>",
            "children": [
                "<com.sumup.merchant.util.Utils: void showMessage(android.content.Context,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.LoginActivity: boolean onOptionsItemSelected(android.view.MenuItem)>"
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.LoginActivity: void onPause()>",
            "children": [
                "<com.sumup.merchant.util.PermissionUtils: boolean hasLocationPermissions(android.content.Context)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.LoginActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>",
            "children": [
                "<com.sumup.merchant.util.PermissionUtils: void setCanAskPermission(android.app.Activity,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.LoginActivity: void onResume()>",
            "children": [
                "<com.sumup.merchant.util.PermissionUtils: boolean hasLocationPermissions(android.content.Context)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.sumup.merchant.ui.Activities.LoginActivity: void onSaveInstanceState(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.transistorsoft.locationmanager.activity.TSLocationManagerActivity: void <clinit>()>",
            "children": [
                "<com.transistorsoft.tslocationmanager.Application: java.lang.String HDImtqGy(java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.transistorsoft.locationmanager.activity.TSLocationManagerActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.transistorsoft.locationmanager.activity.TSLocationManagerActivity: void onActivityResult(int,int,android.content.Intent)>",
            "children": [
                "<com.transistorsoft.locationmanager.logger.TSLog: java.lang.String ok(java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.transistorsoft.locationmanager.activity.TSLocationManagerActivity: void onCreate(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.transistorsoft.locationmanager.activity.TSLocationManagerActivity: void onDestroy()>",
            "children": [
                "<org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.transistorsoft.locationmanager.activity.TSLocationManagerActivity: void onNewIntent(android.content.Intent)>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void closeOptionsMenu()>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: boolean dispatchKeyEvent(android.view.KeyEvent)>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: android.view.MenuInflater getMenuInflater()>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void invalidateOptionsMenu()>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onConfigurationChanged(android.content.res.Configuration)>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onContentChanged()>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<android.os.Build$VERSION: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onDestroy()>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: boolean onKeyDown(int,android.view.KeyEvent)>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: boolean onMenuItemSelected(int,android.view.MenuItem)>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: boolean onMenuOpened(int,android.view.Menu)>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onPanelClosed(int,android.view.Menu)>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onPostCreate(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onPostResume()>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onSaveInstanceState(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onStart()>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onStop()>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onTitleChanged(java.lang.CharSequence,int)>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void openOptionsMenu()>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void setContentView(int)>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>"
        },
        {
            "entry_point": "Entry-point: <androidx.appcompat.app.AppCompatActivity: void setTheme(int)>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.FacebookActivity: void <clinit>()>",
            "children": [
                "<android.app.Activity: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.facebook.FacebookActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.FacebookActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>",
            "children": [
                "<com.facebook.internal.instrument.crashshield.CrashShieldHandler: void handleThrowable(java.lang.Throwable,java.lang.Object)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.facebook.FacebookActivity: void onConfigurationChanged(android.content.res.Configuration)>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.FacebookActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.facebook.FacebookSdk: void sdkInitialize(android.content.Context)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void <init>()>",
            "children": [
                "<androidx.fragment.app.FragmentActivity$HostCallbacks: void <init>(androidx.fragment.app.FragmentActivity)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>",
            "children": [
                "<androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)>",
            "children": [
                "<androidx.core.app.ActivityCompat: androidx.core.app.ActivityCompat$PermissionCompatDelegate getPermissionCompatDelegate()>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onBackPressed()>",
            "children": [
                "<android.os.Build$VERSION: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<android.util.Log: int w(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: boolean onCreatePanelMenu(int,android.view.Menu)>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onDestroy()>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onLowMemory()>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onMultiWindowModeChanged(boolean)>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onNewIntent(android.content.Intent)>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onPanelClosed(int,android.view.Menu)>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onPause()>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onPictureInPictureModeChanged(boolean)>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onPostResume()>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>",
            "children": [
                "<android.util.Log: int w(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onResume()>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: java.lang.Object onRetainNonConfigurationInstance()>",
            "children": [
                "<androidx.fragment.app.FragmentActivity$NonConfigurationInstances: void <init>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)>",
            "children": [
                "<java.lang.String: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onStart()>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onStateNotSaved()>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onStop()>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int)>",
            "children": [
                "<androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>",
            "children": [
                "<androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)>",
            "children": [
                "<androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>",
            "children": [
                "<androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.core.app.ComponentActivity: void <init>()>",
            "children": [
                "<androidx.collection.SimpleArrayMap: void <init>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.core.app.ComponentActivity: boolean dispatchKeyEvent(android.view.KeyEvent)>",
            "children": [
                "<androidx.core.view.KeyEventDispatcher: boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.core.app.ComponentActivity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>",
            "children": [
                "<androidx.core.view.KeyEventDispatcher: boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.core.app.ComponentActivity: void onSaveInstanceState(android.os.Bundle)>",
            "children": [
                "<androidx.lifecycle.Lifecycle$State: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.adobe.phonegap.push.BackgroundHandlerActivity: void <clinit>()>"
        },
        {
            "entry_point": "Entry-point: <com.adobe.phonegap.push.BackgroundHandlerActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.adobe.phonegap.push.BackgroundHandlerActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.adobe.phonegap.push.PushPlugin: boolean isActive()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.adobe.phonegap.push.BackgroundHandlerActivity: void onResume()>"
        },
        {
            "entry_point": "Entry-point: <com.adobe.phonegap.push.PushHandlerActivity: void <clinit>()>"
        },
        {
            "entry_point": "Entry-point: <com.adobe.phonegap.push.PushHandlerActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.adobe.phonegap.push.PushHandlerActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<android.util.Log: int d(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.adobe.phonegap.push.PushHandlerActivity: void onResume()>"
        },
        {
            "entry_point": "Entry-point: <com.android.billingclient.api.ProxyBillingActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.android.billingclient.api.ProxyBillingActivity: void onActivityResult(int,int,android.content.Intent)>",
            "children": [
                "<com.android.billingclient.util.BillingHelper: void logWarn(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.android.billingclient.api.ProxyBillingActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.android.billingclient.util.BillingHelper: void logVerbose(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.android.billingclient.api.ProxyBillingActivity: void onSaveInstanceState(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.CustomTabActivity: void <clinit>()>",
            "children": [
                "<android.app.Activity: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.facebook.CustomTabActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.CustomTabActivity: void onActivityResult(int,int,android.content.Intent)>",
            "children": [
                "<androidx.localbroadcastmanager.content.LocalBroadcastManager: androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.facebook.CustomTabActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.facebook.CustomTabMainActivity: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.facebook.CustomTabActivity: void onDestroy()>",
            "children": [
                "<androidx.localbroadcastmanager.content.LocalBroadcastManager: androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.facebook.CustomTabMainActivity: void <clinit>()>",
            "children": [
                "<android.app.Activity: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.facebook.CustomTabMainActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.CustomTabMainActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<androidx.localbroadcastmanager.content.LocalBroadcastManager: androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.facebook.CustomTabMainActivity: void onNewIntent(android.content.Intent)>",
            "children": [
                "<androidx.localbroadcastmanager.content.LocalBroadcastManager: androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.facebook.CustomTabMainActivity: void onResume()>"
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.common.api.GoogleApiActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.common.api.GoogleApiActivity: void onActivityResult(int,int,android.content.Intent)>",
            "children": [
                "<com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.api.internal.GoogleApiManager zab(android.content.Context)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.common.api.GoogleApiActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.google.android.gms.common.GoogleApiAvailability: com.google.android.gms.common.GoogleApiAvailability getInstance()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.common.api.GoogleApiActivity: void onSaveInstanceState(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.tagmanager.PreviewActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.tagmanager.PreviewActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.google.android.gms.tagmanager.zzdi: void zzav(java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.powerednow.fieldservices.MainActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.powerednow.fieldservices.MainActivity: void onCreate(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <org.apache.cordova.CordovaActivity: void <clinit>()>"
        },
        {
            "entry_point": "Entry-point: <org.apache.cordova.CordovaActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <org.apache.cordova.CordovaActivity: void onActivityResult(int,int,android.content.Intent)>",
            "children": [
                "<org.apache.cordova.LOG: void d(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <org.apache.cordova.CordovaActivity: void onConfigurationChanged(android.content.res.Configuration)>"
        },
        {
            "entry_point": "Entry-point: <org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<org.apache.cordova.LOG: void d(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <org.apache.cordova.CordovaActivity: boolean onCreateOptionsMenu(android.view.Menu)>"
        },
        {
            "entry_point": "Entry-point: <org.apache.cordova.CordovaActivity: void onDestroy()>",
            "children": [
                "<org.apache.cordova.LOG: void d(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <org.apache.cordova.CordovaActivity: void onNewIntent(android.content.Intent)>"
        },
        {
            "entry_point": "Entry-point: <org.apache.cordova.CordovaActivity: boolean onOptionsItemSelected(android.view.MenuItem)>"
        },
        {
            "entry_point": "Entry-point: <org.apache.cordova.CordovaActivity: void onPause()>",
            "children": [
                "<org.apache.cordova.LOG: void d(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)>"
        },
        {
            "entry_point": "Entry-point: <org.apache.cordova.CordovaActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>",
            "children": [
                "<org.apache.cordova.LOG: void d(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <org.apache.cordova.CordovaActivity: void onResume()>",
            "children": [
                "<org.apache.cordova.LOG: void d(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <org.apache.cordova.CordovaActivity: void onSaveInstanceState(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <org.apache.cordova.CordovaActivity: void onStart()>",
            "children": [
                "<org.apache.cordova.LOG: void d(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <org.apache.cordova.CordovaActivity: void onStop()>",
            "children": [
                "<org.apache.cordova.LOG: void d(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <org.apache.cordova.CordovaActivity: void onWindowFocusChanged(boolean)>"
        },
        {
            "entry_point": "Entry-point: <org.apache.cordova.CordovaActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>"
        }
    ],
    "functions": {
        "Entry-point: <com.intentfilter.androidpermissions.PermissionsActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        ActivityCompat.requestPermissions(this, getIntent().getStringArrayExtra(EXTRA_PERMISSIONS), 100);\n    }",
            "children": [
                "<androidx.core.app.ActivityCompat: void requestPermissions(android.app.Activity,java.lang.String[],int)>"
            ]
        },
        "Entry-point: <com.intentfilter.androidpermissions.PermissionsActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>": {
            "code": "void  onRequestPermissionsResult(int,java.lang.String[],int[])  {\n        super.onRequestPermissionsResult(i, strArr, iArr);\n        if (iArr.length == 0 || strArr.length == 0) {\n            logger.e(\"Permission request interrupted. Aborting.\");\n            PermissionManager.getInstance(this).removePendingPermissionRequests(Arrays.asList(getIntent().getStringArrayExtra(EXTRA_PERMISSIONS)));\n            finish();\n            return;\n        }\n        Logger logger2 = logger;\n        logger2.i(\"RequestPermissionsResult, sending broadcast for permissions \" + Arrays.toString(strArr));\n        sendPermissionResponse(strArr, iArr);\n        finish();\n    }",
            "children": [
                "<java.util.Arrays: java.util.List asList(java.lang.Object[])>"
            ]
        },
        "Entry-point: <com.sumup.merchant.api.LoadSumUpPaymentSettingsActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        setTheme(R.style.SumUpThemeLegacy);\n        super.onCreate(bundle);\n    }",
            "children": []
        },
        "Entry-point: <com.sumup.merchant.api.LoadSumUpPaymentsActivity: void onActivityResult(int,int,android.content.Intent)>": {
            "code": "void  onActivityResult(int,int,android.content.Intent)  None",
            "children": [
                "<java.lang.String: java.lang.String valueOf(int)>"
            ]
        },
        "Entry-point: <com.sumup.merchant.api.LoadSumUpPaymentsActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  None",
            "children": [
                "<com.sumup.merchant.Models.OrderModel: void clearOrderPad()>"
            ]
        },
        "Entry-point: <com.sumup.merchant.api.LoadSumUpPaymentsActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  None",
            "children": []
        },
        "Entry-point: <com.sumup.merchant.api.LoadSumUpPaymentsActivity: void onPause()>": {
            "code": "void  onPause()  None",
            "children": []
        },
        "Entry-point: <com.sumup.merchant.api.LoadSumUpPaymentsActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>": {
            "code": "void  onRequestPermissionsResult(int,java.lang.String[],int[])  None",
            "children": [
                "<com.sumup.merchant.util.PermissionUtils: void setCanAskPermission(android.app.Activity,java.lang.String)>"
            ]
        },
        "Entry-point: <com.sumup.merchant.api.LoadSumUpPaymentsActivity: void onStart()>": {
            "code": "void  onStart()  None",
            "children": []
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.CheckoutAPIDrivenPageActivity: void onActivityResult(int,int,android.content.Intent)>": {
            "code": "void  onActivityResult(int,int,android.content.Intent)  None",
            "children": [
                "<java.lang.String: java.lang.String valueOf(int)>"
            ]
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.CheckoutAPIDrivenPageActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  None",
            "children": [
                "<com.sumup.merchant.api.LoadSumUpPaymentsActivity: void sendAffiliateResponse(android.app.Activity,int,java.lang.String,boolean)>"
            ]
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.CheckoutAPIDrivenPageActivity: void onPause()>": {
            "code": "void  onPause()  None",
            "children": [
                "<com.sumup.merchant.CoreState: org.greenrobot.eventbus.EventBus getBus()>"
            ]
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.CheckoutAPIDrivenPageActivity: void onResume()>": {
            "code": "void  onResume()  None",
            "children": [
                "<com.sumup.merchant.CoreState: org.greenrobot.eventbus.EventBus getBus()>"
            ]
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.CheckoutAPIDrivenPageActivity: void onSaveInstanceState(android.os.Bundle)>": {
            "code": "void  onSaveInstanceState(android.os.Bundle)  None",
            "children": [
                "<icepick.Icepick: void saveInstanceState(java.lang.Object,android.os.Bundle)>"
            ]
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.DashboardActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        WebView webView = this.mWebView;\n        if (webView != null) {\n            webView.destroy();\n        }\n        super.onDestroy();\n    }",
            "children": []
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.DashboardActivity: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n        this.mTracker.screen(\"/signup/dashboard\");\n    }",
            "children": []
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.PaymentSettingsActivity: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n        this.mTracker.screen(\"/payment_settings\");\n    }",
            "children": []
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.PinPlusSetupActivity: void onActivityResult(int,int,android.content.Intent)>": {
            "code": "void  onActivityResult(int,int,android.content.Intent)  None",
            "children": [
                "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>"
            ]
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.PinPlusSetupActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  None",
            "children": []
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.PinPlusSetupActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  None",
            "children": []
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.PinPlusSetupActivity: void onPause()>": {
            "code": "void  onPause()  None",
            "children": []
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.PinPlusSetupActivity: void onRestart()>": {
            "code": "void  onRestart()  None",
            "children": [
                "<com.sumup.merchant.CoreState: org.greenrobot.eventbus.EventBus getBus()>"
            ]
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.PinPlusSetupActivity: void onResume()>": {
            "code": "void  onResume()  None",
            "children": []
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.PinPlusSetupActivity: void onStart()>": {
            "code": "void  onStart()  None",
            "children": []
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.PinPlusSetupActivity: void onStop()>": {
            "code": "void  onStop()  None",
            "children": [
                "<com.sumup.merchant.CoreState: org.greenrobot.eventbus.EventBus getBus()>"
            ]
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.SendSmsActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        KeyboardUtils.hideKeyboard(this);\n        super.onBackPressed();\n    }",
            "children": [
                "<com.sumup.merchant.util.KeyboardUtils: void hideKeyboard(android.app.Activity)>"
            ]
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.SendSmsActivity: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n        this.mTracker.screen(\"/send_sms\");\n    }",
            "children": []
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.SendSmsActivity: void onSaveInstanceState(android.os.Bundle)>": {
            "code": "void  onSaveInstanceState(android.os.Bundle)  {\n        super.onSaveInstanceState(bundle);\n        getSupportFragmentManager().putFragment(bundle, SendSmsFragment.TAG, getCurrentFragment());\n    }",
            "children": []
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.SumUpBaseActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        new StringBuilder(\"onBackPressed() \").append(getClass().getName());\n        super.onBackPressed();\n        animateDown();\n    }",
            "children": [
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"
            ]
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.SumUpBaseActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        if (FeatureUtils.isFeatureEnabled(FeatureUtils.FEATURE_SUMUP_2_0)) {\n            ThemeUtils.setSumUp20Theme(this);\n        }\n        if (!((UserModel) CoreState.Instance().get(UserModel.class)).isLoggedIn() && requiresAccessToken()) {\n            Log.w(\"App was killed in the background, redirecting to login\");\n            LoginActivity.startForExpiredAccessTokenPassingDeepLink(false, PushHelper.retrieveDeepLink(getIntent()));\n            super.onCreate(null);\n            finish();\n            return;\n        }\n        super.onCreate(bundle);\n        if (getResources().getBoolean(R.bool.isTablet)) {\n            setRequestedOrientation(2);\n        }\n        setUpActionBar();\n        getSupportFragmentManager().addOnBackStackChangedListener(new FragmentManager.OnBackStackChangedListener() { // from class: com.sumup.merchant.ui.Activities.SumUpBaseActivity.1\n            @Override // androidx.fragment.app.FragmentManager.OnBackStackChangedListener\n            public void onBackStackChanged() {\n                SumUpBaseActivity.this.supportInvalidateOptionsMenu();\n            }\n        });\n        onSafeCreate(bundle);\n    }",
            "children": [
                "<com.sumup.merchant.ui.Activities.LoginActivity: void startForExpiredAccessTokenPassingDeepLink(boolean,java.lang.String)>"
            ]
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.SumUpBaseActivity: boolean onOptionsItemSelected(android.view.MenuItem)>": {
            "code": "boolean  onOptionsItemSelected(android.view.MenuItem)  {\n        if (menuItem.getItemId() == 16908332) {\n            onBackPressed();\n            return true;\n        }\n        return super.onOptionsItemSelected(menuItem);\n    }",
            "children": []
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.SumUpBaseActivity: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n        if (CoreState.Instance().isAppInBackground()) {\n            CoreState.Instance().setAppInBackground(false);\n            if (((UserModel) CoreState.Instance().get(UserModel.class)).isLoggedIn()) {\n                rpcManager.Instance().postAction(new rpcActionCheckToken());\n            }\n        }\n    }",
            "children": [
                "<com.sumup.merchant.Network.rpcManager: com.sumup.merchant.Network.rpcManager Instance()>"
            ]
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.SumUpBaseActivity: void startActivity(android.content.Intent)>": {
            "code": "void  startActivity(android.content.Intent)  {\n        super.startActivity(intent);\n        animateUp();\n    }",
            "children": []
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.SumUpBaseActivity: void startActivityForResult(android.content.Intent,int)>": {
            "code": "void  startActivityForResult(android.content.Intent,int)  {\n        super.startActivityForResult(intent, i);\n        animateUp();\n    }",
            "children": []
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.LoginActivity: void onActivityResult(int,int,android.content.Intent)>": {
            "code": "void  onActivityResult(int,int,android.content.Intent)  None",
            "children": [
                "<com.sumup.merchant.CoreState: java.lang.String getCurrentEnvironmentName()>"
            ]
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.LoginActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  None",
            "children": [
                "<com.sumup.merchant.CoreState: com.sumup.merchant.CoreState Instance()>"
            ]
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.LoginActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  None",
            "children": [
                "<com.sumup.merchant.util.LoginUtils: boolean canLogInImmediately()>"
            ]
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.LoginActivity: boolean onCreateOptionsMenu(android.view.Menu)>": {
            "code": "boolean  onCreateOptionsMenu(android.view.Menu)  None",
            "children": [
                "<com.sumup.merchant.CoreState: java.lang.String getCurrentEnvironmentName()>"
            ]
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.LoginActivity: void onDestroy()>": {
            "code": "void  onDestroy()  None",
            "children": [
                "<com.sumup.merchant.CoreState: org.greenrobot.eventbus.EventBus getBus()>"
            ]
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.LoginActivity: void onNewIntent(android.content.Intent)>": {
            "code": "void  onNewIntent(android.content.Intent)  None",
            "children": [
                "<com.sumup.merchant.util.Utils: void showMessage(android.content.Context,java.lang.String)>"
            ]
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.LoginActivity: boolean onOptionsItemSelected(android.view.MenuItem)>": {
            "code": "boolean  onOptionsItemSelected(android.view.MenuItem)  None",
            "children": []
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.LoginActivity: void onPause()>": {
            "code": "void  onPause()  None",
            "children": [
                "<com.sumup.merchant.util.PermissionUtils: boolean hasLocationPermissions(android.content.Context)>"
            ]
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.LoginActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>": {
            "code": "void  onRequestPermissionsResult(int,java.lang.String[],int[])  None",
            "children": [
                "<com.sumup.merchant.util.PermissionUtils: void setCanAskPermission(android.app.Activity,java.lang.String)>"
            ]
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.LoginActivity: void onResume()>": {
            "code": "void  onResume()  None",
            "children": [
                "<com.sumup.merchant.util.PermissionUtils: boolean hasLocationPermissions(android.content.Context)>"
            ]
        },
        "Entry-point: <com.sumup.merchant.ui.Activities.LoginActivity: void onSaveInstanceState(android.os.Bundle)>": {
            "code": "void  onSaveInstanceState(android.os.Bundle)  None",
            "children": []
        },
        "Entry-point: <com.transistorsoft.locationmanager.activity.TSLocationManagerActivity: void onActivityResult(int,int,android.content.Intent)>": {
            "code": "void  onActivityResult(int,int,android.content.Intent)        ok = TSLog.cancel(Application.HDImtqGy(\"\u7bb9\\ue6a5\ud468\ucec2\u237c\u4874\u46a2\u09dc\u8ed3\u0631\u6ce6\ufc3c\u042a\u0205\u96b4\\udb31\ua872\\uf42a\u66bf\u0409\\uf37e\u5f19\u170f\u7ed0\u7114\ub2d2\ufaaa\u4eeb\u3203\ub18a\ubc4b\u8734\u3c39\\ue686\u81e9\\u0379\"));\n                }\n                logger.debug(ok);\n            }\n            stop();\n        } catch (NullPointerException unused) {\n            TSLog.logger.debug(TSLog.ok(Application.HDImtqGy(\"\u7bb9\\ue6a5\ud468\ucec2\u237c\u4874\u46a2\u09dc\u8ed3\u0631\u6ce6\ufc3c\u042a\u0205\u96b4\\udb31\ua872\\uf42a\u66bf\u0409\\uf37e\u5f19\u170f\u7ed0\u7114\ub2d2\ufaaa\u4eeb\u3203\ub18a\ubc4e\u8732\u3c34\\ue68a\u81fc\u0369\u1789\u23db\")));\n            stop();\n        }\n    }\n\n    /* JADX INFO: Access modifiers changed from: protected */\n    @Override // androidx.appcompat.app.AppCompatActivity, androidx.fragment.app.FragmentActivity, androidx.core.app.ComponentActivity, android.app.Activity\n    public void onCreate(Bundle bundle) {\n        super.onCreate(bundle);\n        execute(getIntent());\n    }\n\n    /* JADX INFO: Access modifiers changed from: protected */\n    @Override // androidx.appcompat.app.AppCompatActivity, androidx.fragment.app.FragmentActivity, android.app.Activity\n    public void onDestroy() {\n        super.onDestroy();\n        TSLog.logger.debug(\"\");\n    }\n\n    /* JADX INFO: Access modifiers changed from: p",
            "children": [
                "<com.transistorsoft.locationmanager.logger.TSLog: java.lang.String ok(java.lang.String)>"
            ]
        },
        "Entry-point: <com.transistorsoft.locationmanager.activity.TSLocationManagerActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  ",
            "children": []
        },
        "Entry-point: <com.transistorsoft.locationmanager.activity.TSLocationManagerActivity: void onDestroy()>": {
            "code": "void  onDestroy()  ",
            "children": [
                "<org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String)>"
            ]
        },
        "Entry-point: <com.transistorsoft.locationmanager.activity.TSLocationManagerActivity: void onNewIntent(android.content.Intent)>": {
            "code": "void  onNewIntent(android.content.Intent)  ",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)>": {
            "code": "void  addContentView(android.view.View,android.view.ViewGroup$LayoutParams)  None",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void closeOptionsMenu()>": {
            "code": "void  closeOptionsMenu()  None",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: boolean dispatchKeyEvent(android.view.KeyEvent)>": {
            "code": "boolean  dispatchKeyEvent(android.view.KeyEvent)  None",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void invalidateOptionsMenu()>": {
            "code": "void  invalidateOptionsMenu()  None",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onConfigurationChanged(android.content.res.Configuration)>": {
            "code": "void  onConfigurationChanged(android.content.res.Configuration)  None",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onContentChanged()>": {
            "code": "void  onContentChanged()  None",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  None",
            "children": [
                "<android.os.Build$VERSION: void <clinit>()>"
            ]
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onDestroy()>": {
            "code": "void  onDestroy()  None",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: boolean onKeyDown(int,android.view.KeyEvent)>": {
            "code": "boolean  onKeyDown(int,android.view.KeyEvent)  None",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: boolean onMenuItemSelected(int,android.view.MenuItem)>": {
            "code": "boolean  onMenuItemSelected(int,android.view.MenuItem)  None",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: boolean onMenuOpened(int,android.view.Menu)>": {
            "code": "boolean  onMenuOpened(int,android.view.Menu)  None",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onPanelClosed(int,android.view.Menu)>": {
            "code": "void  onPanelClosed(int,android.view.Menu)  None",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onPostCreate(android.os.Bundle)>": {
            "code": "void  onPostCreate(android.os.Bundle)  None",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onPostResume()>": {
            "code": "void  onPostResume()  None",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onSaveInstanceState(android.os.Bundle)>": {
            "code": "void  onSaveInstanceState(android.os.Bundle)  None",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onStart()>": {
            "code": "void  onStart()  None",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onStop()>": {
            "code": "void  onStop()  None",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void onTitleChanged(java.lang.CharSequence,int)>": {
            "code": "void  onTitleChanged(java.lang.CharSequence,int)  None",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void openOptionsMenu()>": {
            "code": "void  openOptionsMenu()  None",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void setContentView(int)>": {
            "code": "void  setContentView(int)  None",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)>": {
            "code": "void  setContentView(android.view.View)  None",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>": {
            "code": "void  setContentView(android.view.View,android.view.ViewGroup$LayoutParams)  None",
            "children": []
        },
        "Entry-point: <androidx.appcompat.app.AppCompatActivity: void setTheme(int)>": {
            "code": "void  setTheme(int)  None",
            "children": []
        },
        "Entry-point: <com.facebook.FacebookActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": {
            "code": "void  dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])  {\n        if (CrashShieldHandler.isObjectCrashing(this)) {\n            return;\n        }\n        try {\n            if (EndToEndDumpsysHelper.maybeDump(str, printWriter, strArr)) {\n                return;\n            }\n            super.dump(str, fileDescriptor, printWriter, strArr);\n        } catch (Throwable th) {\n            CrashShieldHandler.handleThrowable(th, this);\n        }\n    }",
            "children": [
                "<com.facebook.internal.instrument.crashshield.CrashShieldHandler: void handleThrowable(java.lang.Throwable,java.lang.Object)>"
            ]
        },
        "Entry-point: <com.facebook.FacebookActivity: void onConfigurationChanged(android.content.res.Configuration)>": {
            "code": "void  onConfigurationChanged(android.content.res.Configuration)  {\n        super.onConfigurationChanged(configuration);\n        Fragment fragment = this.singleFragment;\n        if (fragment != null) {\n            fragment.onConfigurationChanged(configuration);\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.facebook.FacebookActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        Intent intent = getIntent();\n        if (!FacebookSdk.isInitialized()) {\n            Utility.logd(TAG, \"Facebook SDK not initialized. Make sure you call sdkInitialize inside your Application's onCreate method.\");\n            FacebookSdk.sdkInitialize(getApplicationContext());\n        }\n        setContentView(com.facebook.common.R.layout.com_facebook_activity_layout);\n        if (PASS_THROUGH_CANCEL_ACTION.equals(intent.getAction())) {\n            handlePassThroughError();\n        } else {\n            this.singleFragment = getFragment();\n        }\n    }",
            "children": [
                "<com.facebook.FacebookSdk: void sdkInitialize(android.content.Context)>"
            ]
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": {
            "code": "void  dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])  {\n        super.dump(str, fileDescriptor, printWriter, strArr);\n        printWriter.print(str);\n        printWriter.print(\"Local FragmentActivity \");\n        printWriter.print(Integer.toHexString(System.identityHashCode(this)));\n        printWriter.println(\" State:\");\n        String str2 = str + \"  \";\n        printWriter.print(str2);\n        printWriter.print(\"mCreated=\");\n        printWriter.print(this.mCreated);\n        printWriter.print(\" mResumed=\");\n        printWriter.print(this.mResumed);\n        printWriter.print(\" mStopped=\");\n        printWriter.print(this.mStopped);\n        if (getApplication() != null) {\n            LoaderManager.getInstance(this).dump(str2, fileDescriptor, printWriter, strArr);\n        }\n        this.mFragments.getSupportFragmentManager().dump(str, fileDescriptor, printWriter, strArr);\n    }",
            "children": [
                "<androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>"
            ]
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)>": {
            "code": "void  onActivityResult(int,int,android.content.Intent)  {\n        this.mFragments.noteStateNotSaved();\n        int i3 = i >> 16;\n        if (i3 != 0) {\n            int i4 = i3 - 1;\n            String str = this.mPendingFragmentActivityResults.get(i4);\n            this.mPendingFragmentActivityResults.remove(i4);\n            if (str == null) {\n                Log.w(TAG, \"Activity result delivered for unknown Fragment.\");\n                return;\n            }\n            Fragment findFragmentByWho = this.mFragments.findFragmentByWho(str);\n            if (findFragmentByWho == null) {\n                Log.w(TAG, \"Activity result no fragment exists for who: \" + str);\n                return;\n            }\n            findFragmentByWho.onActivityResult(i & SupportMenu.USER_MASK, i2, intent);\n            return;\n        }\n        ActivityCompat.PermissionCompatDelegate permissionCompatDelegate = ActivityCompat.getPermissionCompatDelegate();\n        if (permissionCompatDelegate == null || !permissionCompatDelegate.onActivityResult(this, i, i2, intent)) {\n            super.onActivityResult(i, i2, intent);\n        }\n    }",
            "children": [
                "<androidx.core.app.ActivityCompat: androidx.core.app.ActivityCompat$PermissionCompatDelegate getPermissionCompatDelegate()>"
            ]
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        FragmentManager supportFragmentManager = this.mFragments.getSupportFragmentManager();\n        boolean isStateSaved = supportFragmentManager.isStateSaved();\n        if (!isStateSaved || Build.VERSION.SDK_INT > 25) {\n            if (isStateSaved || !supportFragmentManager.popBackStackImmediate()) {\n                super.onBackPressed();\n            }\n        }\n    }",
            "children": [
                "<android.os.Build$VERSION: void <clinit>()>"
            ]
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)>": {
            "code": "void  onConfigurationChanged(android.content.res.Configuration)  {\n        super.onConfigurationChanged(configuration);\n        this.mFragments.noteStateNotSaved();\n        this.mFragments.dispatchConfigurationChanged(configuration);\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        this.mFragments.attachHost(null);\n        super.onCreate(bundle);\n        NonConfigurationInstances nonConfigurationInstances = (NonConfigurationInstances) getLastNonConfigurationInstance();\n        if (nonConfigurationInstances != null && nonConfigurationInstances.viewModelStore != null && this.mViewModelStore == null) {\n            this.mViewModelStore = nonConfigurationInstances.viewModelStore;\n        }\n        if (bundle != null) {\n            this.mFragments.restoreAllState(bundle.getParcelable(FRAGMENTS_TAG), nonConfigurationInstances != null ? nonConfigurationInstances.fragments : null);\n            if (bundle.containsKey(NEXT_CANDIDATE_REQUEST_INDEX_TAG)) {\n                this.mNextCandidateRequestIndex = bundle.getInt(NEXT_CANDIDATE_REQUEST_INDEX_TAG);\n                int[] intArray = bundle.getIntArray(ALLOCATED_REQUEST_INDICIES_TAG);\n                String[] stringArray = bundle.getStringArray(REQUEST_FRAGMENT_WHO_TAG);\n                if (intArray == null || stringArray == null || intArray.length != stringArray.length) {\n                    Log.w(TAG, \"Invalid requestCode mapping in savedInstanceState.\");\n                } else {\n                    this.mPendingFragmentActivityResults = new SparseArrayCompat<>(intArray.length);\n                    for (int i = 0; i < intArray.length; i++) {\n                        this.mPendingFragmentActivityResults.put(intArray[i], stringArray[i]);\n                    }\n                }\n            }\n        }\n        if (this.mPendingFragmentActivityResults == null) {\n            this.mPendingFragmentActivityResults = new SparseArrayCompat<>();\n            this.mNextCandidateRequestIndex = 0;\n        }\n        this.mFragments.dispatchCreate();\n    }",
            "children": [
                "<android.util.Log: int w(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: boolean onCreatePanelMenu(int,android.view.Menu)>": {
            "code": "boolean  onCreatePanelMenu(int,android.view.Menu)  {\n        if (i == 0) {\n            return super.onCreatePanelMenu(i, menu) | this.mFragments.dispatchCreateOptionsMenu(menu, getMenuInflater());\n        }\n        return super.onCreatePanelMenu(i, menu);\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        super.onDestroy();\n        if (this.mViewModelStore != null && !isChangingConfigurations()) {\n            this.mViewModelStore.clear();\n        }\n        this.mFragments.dispatchDestroy();\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onLowMemory()>": {
            "code": "void  onLowMemory()  {\n        super.onLowMemory();\n        this.mFragments.dispatchLowMemory();\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)>": {
            "code": "boolean  onMenuItemSelected(int,android.view.MenuItem)  {\n        if (super.onMenuItemSelected(i, menuItem)) {\n            return true;\n        }\n        if (i != 0) {\n            if (i != 6) {\n                return false;\n            }\n            return this.mFragments.dispatchContextItemSelected(menuItem);\n        }\n        return this.mFragments.dispatchOptionsItemSelected(menuItem);\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onMultiWindowModeChanged(boolean)>": {
            "code": "void  onMultiWindowModeChanged(boolean)  {\n        this.mFragments.dispatchMultiWindowModeChanged(z);\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onNewIntent(android.content.Intent)>": {
            "code": "void  onNewIntent(android.content.Intent)  {\n        super.onNewIntent(intent);\n        this.mFragments.noteStateNotSaved();\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onPanelClosed(int,android.view.Menu)>": {
            "code": "void  onPanelClosed(int,android.view.Menu)  {\n        if (i == 0) {\n            this.mFragments.dispatchOptionsMenuClosed(menu);\n        }\n        super.onPanelClosed(i, menu);\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onPause()>": {
            "code": "void  onPause()  {\n        super.onPause();\n        this.mResumed = false;\n        if (this.mHandler.hasMessages(2)) {\n            this.mHandler.removeMessages(2);\n            onResumeFragments();\n        }\n        this.mFragments.dispatchPause();\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onPictureInPictureModeChanged(boolean)>": {
            "code": "void  onPictureInPictureModeChanged(boolean)  {\n        this.mFragments.dispatchPictureInPictureModeChanged(z);\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onPostResume()>": {
            "code": "void  onPostResume()  {\n        super.onPostResume();\n        this.mHandler.removeMessages(2);\n        onResumeFragments();\n        this.mFragments.execPendingActions();\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)>": {
            "code": "boolean  onPreparePanel(int,android.view.View,android.view.Menu)  {\n        if (i == 0 && menu != null) {\n            return onPrepareOptionsPanel(view, menu) | this.mFragments.dispatchPrepareOptionsMenu(menu);\n        }\n        return super.onPreparePanel(i, view, menu);\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>": {
            "code": "void  onRequestPermissionsResult(int,java.lang.String[],int[])  {\n        this.mFragments.noteStateNotSaved();\n        int i2 = (i >> 16) & SupportMenu.USER_MASK;\n        if (i2 != 0) {\n            int i3 = i2 - 1;\n            String str = this.mPendingFragmentActivityResults.get(i3);\n            this.mPendingFragmentActivityResults.remove(i3);\n            if (str == null) {\n                Log.w(TAG, \"Activity result delivered for unknown Fragment.\");\n                return;\n            }\n            Fragment findFragmentByWho = this.mFragments.findFragmentByWho(str);\n            if (findFragmentByWho == null) {\n                Log.w(TAG, \"Activity result no fragment exists for who: \" + str);\n                return;\n            }\n            findFragmentByWho.onRequestPermissionsResult(i & SupportMenu.USER_MASK, strArr, iArr);\n        }\n    }",
            "children": [
                "<android.util.Log: int w(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n        this.mHandler.sendEmptyMessage(2);\n        this.mResumed = true;\n        this.mFragments.execPendingActions();\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)>": {
            "code": "void  onSaveInstanceState(android.os.Bundle)  {\n        super.onSaveInstanceState(bundle);\n        markFragmentsCreated();\n        Parcelable saveAllState = this.mFragments.saveAllState();\n        if (saveAllState != null) {\n            bundle.putParcelable(FRAGMENTS_TAG, saveAllState);\n        }\n        if (this.mPendingFragmentActivityResults.size() > 0) {\n            bundle.putInt(NEXT_CANDIDATE_REQUEST_INDEX_TAG, this.mNextCandidateRequestIndex);\n            int[] iArr = new int[this.mPendingFragmentActivityResults.size()];\n            String[] strArr = new String[this.mPendingFragmentActivityResults.size()];\n            for (int i = 0; i < this.mPendingFragmentActivityResults.size(); i++) {\n                iArr[i] = this.mPendingFragmentActivityResults.keyAt(i);\n                strArr[i] = this.mPendingFragmentActivityResults.valueAt(i);\n            }\n            bundle.putIntArray(ALLOCATED_REQUEST_INDICIES_TAG, iArr);\n            bundle.putStringArray(REQUEST_FRAGMENT_WHO_TAG, strArr);\n        }\n    }",
            "children": [
                "<java.lang.String: void <clinit>()>"
            ]
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onStart()>": {
            "code": "void  onStart()  {\n        super.onStart();\n        this.mStopped = false;\n        if (!this.mCreated) {\n            this.mCreated = true;\n            this.mFragments.dispatchActivityCreated();\n        }\n        this.mFragments.noteStateNotSaved();\n        this.mFragments.execPendingActions();\n        this.mFragments.dispatchStart();\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onStateNotSaved()>": {
            "code": "void  onStateNotSaved()  {\n        this.mFragments.noteStateNotSaved();\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onStop()>": {
            "code": "void  onStop()  {\n        super.onStop();\n        this.mStopped = true;\n        markFragmentsCreated();\n        this.mFragments.dispatchStop();\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int)>": {
            "code": "void  startActivityForResult(android.content.Intent,int)  {\n        if (!this.mStartedActivityFromFragment && i != -1) {\n            checkForValidRequestCode(i);\n        }\n        super.startActivityForResult(intent, i);\n    }",
            "children": [
                "<androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)>"
            ]
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>": {
            "code": "void  startActivityForResult(android.content.Intent,int,android.os.Bundle)  {\n        if (!this.mStartedActivityFromFragment && i != -1) {\n            checkForValidRequestCode(i);\n        }\n        super.startActivityForResult(intent, i);\n    }",
            "children": [
                "<androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)>"
            ]
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)>": {
            "code": "void  startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)  {\n        if (!this.mStartedIntentSenderFromFragment && i != -1) {\n            checkForValidRequestCode(i);\n        }\n        super.startIntentSenderForResult(intentSender, i, intent, i2, i3, i4);\n    }",
            "children": [
                "<androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)>"
            ]
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>": {
            "code": "void  startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)  {\n        if (!this.mStartedIntentSenderFromFragment && i != -1) {\n            checkForValidRequestCode(i);\n        }\n        super.startIntentSenderForResult(intentSender, i, intent, i2, i3, i4);\n    }",
            "children": [
                "<androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)>"
            ]
        },
        "Entry-point: <androidx.core.app.ComponentActivity: boolean dispatchKeyEvent(android.view.KeyEvent)>": {
            "code": "boolean  dispatchKeyEvent(android.view.KeyEvent)  {\n        View decorView = getWindow().getDecorView();\n        if (decorView == null || !KeyEventDispatcher.dispatchBeforeHierarchy(decorView, keyEvent)) {\n            return KeyEventDispatcher.dispatchKeyEvent(this, decorView, this, keyEvent);\n        }\n        return true;\n    }",
            "children": [
                "<androidx.core.view.KeyEventDispatcher: boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent)>"
            ]
        },
        "Entry-point: <androidx.core.app.ComponentActivity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>": {
            "code": "boolean  dispatchKeyShortcutEvent(android.view.KeyEvent)  {\n        View decorView = getWindow().getDecorView();\n        if (decorView == null || !KeyEventDispatcher.dispatchBeforeHierarchy(decorView, keyEvent)) {\n            return super.dispatchKeyShortcutEvent(keyEvent);\n        }\n        return true;\n    }",
            "children": [
                "<androidx.core.view.KeyEventDispatcher: boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent)>"
            ]
        },
        "Entry-point: <androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        ReportFragment.injectIfNeededIn(this);\n    }",
            "children": [
                "<androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)>"
            ]
        },
        "Entry-point: <androidx.core.app.ComponentActivity: void onSaveInstanceState(android.os.Bundle)>": {
            "code": "void  onSaveInstanceState(android.os.Bundle)  {\n        this.mLifecycleRegistry.markState(Lifecycle.State.CREATED);\n        super.onSaveInstanceState(bundle);\n    }",
            "children": [
                "<androidx.lifecycle.Lifecycle$State: void <clinit>()>"
            ]
        },
        "Entry-point: <com.adobe.phonegap.push.BackgroundHandlerActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        FCMService fCMService = new FCMService();\n        Intent intent = getIntent();\n        int i = intent.getExtras().getInt(PushConstants.NOT_ID, 0);\n        String str = LOG_TAG;\n        Log.d(str, \"not id = \" + i);\n        fCMService.setNotification(i, \"\");\n        super.onCreate(bundle);\n        Log.v(LOG_TAG, \"onCreate\");\n        String string = getIntent().getExtras().getString(PushConstants.CALLBACK);\n        String str2 = LOG_TAG;\n        Log.d(str2, \"callback = \" + string);\n        boolean z = getIntent().getExtras().getBoolean(PushConstants.START_IN_BACKGROUND, false);\n        boolean z2 = getIntent().getExtras().getBoolean(PushConstants.DISMISSED, false);\n        String str3 = LOG_TAG;\n        Log.d(str3, \"dismissed = \" + z2);\n        if (!z) {\n            ((NotificationManager) getSystemService(\"notification\")).cancel(FCMService.getAppName(this), i);\n        }\n        boolean isActive = PushPlugin.isActive();\n        processPushBundle(isActive, intent);\n        finish();\n        if (z2) {\n            return;\n        }\n        if (!isActive) {\n            forceMainActivityReload(false);\n        } else {\n            forceMainActivityReload(true);\n        }\n    }",
            "children": [
                "<com.adobe.phonegap.push.PushPlugin: boolean isActive()>"
            ]
        },
        "Entry-point: <com.adobe.phonegap.push.BackgroundHandlerActivity: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n        ((NotificationManager) getSystemService(\"notification\")).cancelAll();\n    }",
            "children": []
        },
        "Entry-point: <com.adobe.phonegap.push.PushHandlerActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        FCMService fCMService = new FCMService();\n        Intent intent = getIntent();\n        int i = intent.getExtras().getInt(PushConstants.NOT_ID, 0);\n        String str = LOG_TAG;\n        Log.d(str, \"not id = \" + i);\n        fCMService.setNotification(i, \"\");\n        super.onCreate(bundle);\n        Log.v(LOG_TAG, \"onCreate\");\n        String string = getIntent().getExtras().getString(PushConstants.CALLBACK);\n        String str2 = LOG_TAG;\n        Log.d(str2, \"callback = \" + string);\n        boolean z = getIntent().getExtras().getBoolean(PushConstants.FOREGROUND, true);\n        boolean z2 = getIntent().getExtras().getBoolean(PushConstants.START_IN_BACKGROUND, false);\n        boolean z3 = getIntent().getExtras().getBoolean(PushConstants.DISMISSED, false);\n        String str3 = LOG_TAG;\n        Log.d(str3, \"dismissed = \" + z3);\n        if (!z2) {\n            ((NotificationManager) getSystemService(\"notification\")).cancel(FCMService.getAppName(this), i);\n        }\n        boolean isActive = PushPlugin.isActive();\n        boolean processPushBundle = processPushBundle(isActive, intent);\n        if (processPushBundle && Build.VERSION.SDK_INT < 24 && !z2) {\n            z = true;\n        }\n        String str4 = LOG_TAG;\n        Log.d(str4, \"bringToForeground = \" + z);\n        finish();\n        if (z3) {\n            return;\n        }\n        String str5 = LOG_TAG;\n        Log.d(str5, \"isPushPluginActive = \" + isActive);\n        if (!isActive && z && processPushBundle) {\n            Log.d(LOG_TAG, \"forceMainActivityReload\");\n            forceMainActivityReload(false);\n        } else if (z2) {\n            Log.d(LOG_TAG, \"startOnBackgroundTrue\");\n            forceMainActivityReload(true);\n        } else {\n            Log.d(LOG_TAG, \"don't want main activity\");\n        }\n    }",
            "children": [
                "<android.util.Log: int d(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.adobe.phonegap.push.PushHandlerActivity: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n        ((NotificationManager) getSystemService(\"notification\")).cancelAll();\n    }",
            "children": []
        },
        "Entry-point: <com.android.billingclient.api.ProxyBillingActivity: void onActivityResult(int,int,android.content.Intent)>": {
            "code": "void  onActivityResult(int,int,android.content.Intent)  None",
            "children": [
                "<com.android.billingclient.util.BillingHelper: void logWarn(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.android.billingclient.api.ProxyBillingActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  None",
            "children": [
                "<com.android.billingclient.util.BillingHelper: void logVerbose(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.android.billingclient.api.ProxyBillingActivity: void onSaveInstanceState(android.os.Bundle)>": {
            "code": "void  onSaveInstanceState(android.os.Bundle)  None",
            "children": []
        },
        "Entry-point: <com.facebook.CustomTabActivity: void onActivityResult(int,int,android.content.Intent)>": {
            "code": "void  onActivityResult(int,int,android.content.Intent)  None",
            "children": [
                "<androidx.localbroadcastmanager.content.LocalBroadcastManager: androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context)>"
            ]
        },
        "Entry-point: <com.facebook.CustomTabActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  None",
            "children": [
                "<com.facebook.CustomTabMainActivity: void <clinit>()>"
            ]
        },
        "Entry-point: <com.facebook.CustomTabActivity: void onDestroy()>": {
            "code": "void  onDestroy()  None",
            "children": [
                "<androidx.localbroadcastmanager.content.LocalBroadcastManager: androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context)>"
            ]
        },
        "Entry-point: <com.facebook.CustomTabMainActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  None",
            "children": [
                "<androidx.localbroadcastmanager.content.LocalBroadcastManager: androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context)>"
            ]
        },
        "Entry-point: <com.facebook.CustomTabMainActivity: void onNewIntent(android.content.Intent)>": {
            "code": "void  onNewIntent(android.content.Intent)  None",
            "children": [
                "<androidx.localbroadcastmanager.content.LocalBroadcastManager: androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context)>"
            ]
        },
        "Entry-point: <com.facebook.CustomTabMainActivity: void onResume()>": {
            "code": "void  onResume()  None",
            "children": []
        },
        "Entry-point: <com.google.android.gms.common.api.GoogleApiActivity: void onActivityResult(int,int,android.content.Intent)>": {
            "code": "void  onActivityResult(int,int,android.content.Intent)  None",
            "children": [
                "<com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.api.internal.GoogleApiManager zab(android.content.Context)>"
            ]
        },
        "Entry-point: <com.google.android.gms.common.api.GoogleApiActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  None",
            "children": [
                "<com.google.android.gms.common.GoogleApiAvailability: com.google.android.gms.common.GoogleApiAvailability getInstance()>"
            ]
        },
        "Entry-point: <com.google.android.gms.common.api.GoogleApiActivity: void onSaveInstanceState(android.os.Bundle)>": {
            "code": "void  onSaveInstanceState(android.os.Bundle)  None",
            "children": []
        },
        "Entry-point: <com.google.android.gms.tagmanager.PreviewActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        try {\n            super.onCreate(bundle);\n            zzdi.zzaw(\"Preview activity\");\n            Uri data = getIntent().getData();\n            if (!TagManager.getInstance(this).zza(data)) {\n                String valueOf = String.valueOf(data);\n                StringBuilder sb = new StringBuilder(String.valueOf(valueOf).length() + 73);\n                sb.append(\"Cannot preview the app with the uri: \");\n                sb.append(valueOf);\n                sb.append(\". Launching current version instead.\");\n                String sb2 = sb.toString();\n                zzdi.zzac(sb2);\n                AlertDialog create = new AlertDialog.Builder(this).create();\n                create.setTitle(\"Preview failure\");\n                create.setMessage(sb2);\n                create.setButton(-1, \"Continue\", new zzeg(this));\n                create.show();\n            }\n            Intent launchIntentForPackage = getPackageManager().getLaunchIntentForPackage(getPackageName());\n            if (launchIntentForPackage != null) {\n                String valueOf2 = String.valueOf(getPackageName());\n                zzdi.zzaw(valueOf2.length() != 0 ? \"Invoke the launch activity for package name: \".concat(valueOf2) : new String(\"Invoke the launch activity for package name: \"));\n                startActivity(launchIntentForPackage);\n                return;\n            }\n            String valueOf3 = String.valueOf(getPackageName());\n            zzdi.zzaw(valueOf3.length() != 0 ? \"No launch activity found for package name: \".concat(valueOf3) : new String(\"No launch activity found for package name: \"));\n        } catch (Exception e) {\n            String valueOf4 = String.valueOf(e.getMessage());\n            zzdi.zzav(valueOf4.length() != 0 ? \"Calling preview threw an exception: \".concat(valueOf4) : new String(\"Calling preview threw an exception: \"));\n        }\n    }",
            "children": [
                "<com.google.android.gms.tagmanager.zzdi: void zzav(java.lang.String)>"
            ]
        },
        "Entry-point: <com.powerednow.fieldservices.MainActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  None",
            "children": []
        },
        "Entry-point: <org.apache.cordova.CordovaActivity: void onActivityResult(int,int,android.content.Intent)>": {
            "code": "void  onActivityResult(int,int,android.content.Intent)  None",
            "children": [
                "<org.apache.cordova.LOG: void d(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <org.apache.cordova.CordovaActivity: void onConfigurationChanged(android.content.res.Configuration)>": {
            "code": "void  onConfigurationChanged(android.content.res.Configuration)  None",
            "children": []
        },
        "Entry-point: <org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  None",
            "children": [
                "<org.apache.cordova.LOG: void d(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <org.apache.cordova.CordovaActivity: boolean onCreateOptionsMenu(android.view.Menu)>": {
            "code": "boolean  onCreateOptionsMenu(android.view.Menu)  None",
            "children": []
        },
        "Entry-point: <org.apache.cordova.CordovaActivity: void onDestroy()>": {
            "code": "void  onDestroy()  None",
            "children": [
                "<org.apache.cordova.LOG: void d(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <org.apache.cordova.CordovaActivity: void onNewIntent(android.content.Intent)>": {
            "code": "void  onNewIntent(android.content.Intent)  None",
            "children": []
        },
        "Entry-point: <org.apache.cordova.CordovaActivity: boolean onOptionsItemSelected(android.view.MenuItem)>": {
            "code": "boolean  onOptionsItemSelected(android.view.MenuItem)  None",
            "children": []
        },
        "Entry-point: <org.apache.cordova.CordovaActivity: void onPause()>": {
            "code": "void  onPause()  None",
            "children": [
                "<org.apache.cordova.LOG: void d(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)>": {
            "code": "boolean  onPrepareOptionsMenu(android.view.Menu)  None",
            "children": []
        },
        "Entry-point: <org.apache.cordova.CordovaActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>": {
            "code": "void  onRequestPermissionsResult(int,java.lang.String[],int[])  None",
            "children": [
                "<org.apache.cordova.LOG: void d(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <org.apache.cordova.CordovaActivity: void onResume()>": {
            "code": "void  onResume()  None",
            "children": [
                "<org.apache.cordova.LOG: void d(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <org.apache.cordova.CordovaActivity: void onSaveInstanceState(android.os.Bundle)>": {
            "code": "void  onSaveInstanceState(android.os.Bundle)  None",
            "children": []
        },
        "Entry-point: <org.apache.cordova.CordovaActivity: void onStart()>": {
            "code": "void  onStart()  None",
            "children": [
                "<org.apache.cordova.LOG: void d(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <org.apache.cordova.CordovaActivity: void onStop()>": {
            "code": "void  onStop()  None",
            "children": [
                "<org.apache.cordova.LOG: void d(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <org.apache.cordova.CordovaActivity: void onWindowFocusChanged(boolean)>": {
            "code": "void  onWindowFocusChanged(boolean)  None",
            "children": []
        },
        "Entry-point: <org.apache.cordova.CordovaActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>": {
            "code": "void  startActivityForResult(android.content.Intent,int,android.os.Bundle)  None",
            "children": []
        }
    }
}