{
    "raw": [
        {
            "entry_point": "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void <init>()>",
            "children": [
                "<com.facebook.ads.AudienceNetworkActivity$1: void <init>(com.facebook.ads.AudienceNetworkActivity)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void finish()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onActivityResult(int,int,android.content.Intent)>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onBackPressed()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onConfigurationChanged(android.content.res.Configuration)>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: com.facebook.ads.internal.dynamicloading.DynamicLoader makeLoader(android.content.Context)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onDestroy()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onPause()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onResume()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onSaveInstanceState(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onStart()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onStop()>"
        },
        {
            "entry_point": "Entry-point: <com.facebook.ads.AudienceNetworkActivity: boolean onTouchEvent(android.view.MotionEvent)>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void <init>()>",
            "children": [
                "<androidx.fragment.app.FragmentActivity$HostCallbacks: void <init>(androidx.fragment.app.FragmentActivity)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>",
            "children": [
                "<androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)>",
            "children": [
                "<androidx.core.app.ActivityCompat: androidx.core.app.ActivityCompat$PermissionCompatDelegate getPermissionCompatDelegate()>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onBackPressed()>",
            "children": [
                "<android.os.Build$VERSION: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<android.util.Log: int w(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: boolean onCreatePanelMenu(int,android.view.Menu)>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onDestroy()>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onLowMemory()>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onMultiWindowModeChanged(boolean)>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onNewIntent(android.content.Intent)>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onPanelClosed(int,android.view.Menu)>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onPause()>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onPictureInPictureModeChanged(boolean)>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onPostResume()>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>",
            "children": [
                "<android.util.Log: int w(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onResume()>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: java.lang.Object onRetainNonConfigurationInstance()>",
            "children": [
                "<androidx.fragment.app.FragmentActivity$NonConfigurationInstances: void <init>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)>",
            "children": [
                "<java.lang.String: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onStart()>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onStateNotSaved()>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void onStop()>"
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int)>",
            "children": [
                "<androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>",
            "children": [
                "<androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)>",
            "children": [
                "<androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.fragment.app.FragmentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>",
            "children": [
                "<androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.core.app.ComponentActivity: void <init>()>",
            "children": [
                "<androidx.collection.SimpleArrayMap: void <init>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.core.app.ComponentActivity: boolean dispatchKeyEvent(android.view.KeyEvent)>",
            "children": [
                "<androidx.core.view.KeyEventDispatcher: boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.core.app.ComponentActivity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>",
            "children": [
                "<androidx.core.view.KeyEventDispatcher: boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)>"
            ]
        },
        {
            "entry_point": "Entry-point: <androidx.core.app.ComponentActivity: void onSaveInstanceState(android.os.Bundle)>",
            "children": [
                "<androidx.lifecycle.Lifecycle$State: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.adcolony.sdk.AdColonyAdViewActivity: void <init>()>",
            "children": [
                "<com.adcolony.sdk.a: com.adcolony.sdk.i c()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.adcolony.sdk.AdColonyAdViewActivity: void onBackPressed()>"
        },
        {
            "entry_point": "Entry-point: <com.adcolony.sdk.AdColonyAdViewActivity: void onConfigurationChanged(android.content.res.Configuration)>"
        },
        {
            "entry_point": "Entry-point: <com.adcolony.sdk.AdColonyAdViewActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.adcolony.sdk.a: com.adcolony.sdk.i c()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.adcolony.sdk.AdColonyAdViewActivity: void onDestroy()>"
        },
        {
            "entry_point": "Entry-point: <com.adcolony.sdk.AdColonyAdViewActivity: void onPause()>"
        },
        {
            "entry_point": "Entry-point: <com.adcolony.sdk.AdColonyAdViewActivity: void onResume()>"
        },
        {
            "entry_point": "Entry-point: <com.adcolony.sdk.AdColonyAdViewActivity: void onWindowFocusChanged(boolean)>"
        },
        {
            "entry_point": "Entry-point: <com.adcolony.sdk.AdColonyInterstitialActivity: void <init>()>",
            "children": [
                "<com.adcolony.sdk.a: com.adcolony.sdk.i c()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.adcolony.sdk.AdColonyInterstitialActivity: void onBackPressed()>"
        },
        {
            "entry_point": "Entry-point: <com.adcolony.sdk.AdColonyInterstitialActivity: void onConfigurationChanged(android.content.res.Configuration)>"
        },
        {
            "entry_point": "Entry-point: <com.adcolony.sdk.AdColonyInterstitialActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<android.os.Looper: android.os.Looper getMainLooper()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.adcolony.sdk.AdColonyInterstitialActivity: void onDestroy()>"
        },
        {
            "entry_point": "Entry-point: <com.adcolony.sdk.AdColonyInterstitialActivity: void onPause()>"
        },
        {
            "entry_point": "Entry-point: <com.adcolony.sdk.AdColonyInterstitialActivity: void onResume()>"
        },
        {
            "entry_point": "Entry-point: <com.adcolony.sdk.AdColonyInterstitialActivity: void onWindowFocusChanged(boolean)>"
        },
        {
            "entry_point": "Entry-point: <com.adcolony.sdk.b: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.adcolony.sdk.b: void onBackPressed()>",
            "children": [
                "<com.adcolony.sdk.t: boolean a(org.json.JSONObject,java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.adcolony.sdk.b: void onConfigurationChanged(android.content.res.Configuration)>"
        },
        {
            "entry_point": "Entry-point: <com.adcolony.sdk.b: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.adcolony.sdk.t: boolean b(org.json.JSONObject,java.lang.String,int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.adcolony.sdk.b: void onDestroy()>",
            "children": [
                "<com.adcolony.sdk.t: boolean a(org.json.JSONObject,java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.adcolony.sdk.b: void onPause()>"
        },
        {
            "entry_point": "Entry-point: <com.adcolony.sdk.b: void onResume()>"
        },
        {
            "entry_point": "Entry-point: <com.adcolony.sdk.b: void onWindowFocusChanged(boolean)>",
            "children": [
                "<com.adcolony.sdk.a: com.adcolony.sdk.i c()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.amazon.device.ads.AdActivity: void <clinit>()>"
        },
        {
            "entry_point": "Entry-point: <com.amazon.device.ads.AdActivity: void <init>()>",
            "children": [
                "<com.amazon.device.ads.AdRegistration: com.amazon.device.ads.AdRegistrationExecutor getAmazonAdRegistrationExecutor()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.amazon.device.ads.AdActivity: void onBackPressed()>"
        },
        {
            "entry_point": "Entry-point: <com.amazon.device.ads.AdActivity: void onConfigurationChanged(android.content.res.Configuration)>"
        },
        {
            "entry_point": "Entry-point: <com.amazon.device.ads.AdActivity: void onCreate(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.amazon.device.ads.AdActivity: void onDestroy()>"
        },
        {
            "entry_point": "Entry-point: <com.amazon.device.ads.AdActivity: void onPause()>"
        },
        {
            "entry_point": "Entry-point: <com.amazon.device.ads.AdActivity: void onResume()>"
        },
        {
            "entry_point": "Entry-point: <com.amazon.device.ads.AdActivity: void onStop()>"
        },
        {
            "entry_point": "Entry-point: <com.amazon.device.ads.AdActivity: void onWindowFocusChanged(boolean)>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.sdk.AppLovinWebViewActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.sdk.AppLovinWebViewActivity: void onBackPressed()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.sdk.AppLovinWebViewActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.applovin.impl.sdk.utils.o: boolean b(java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void <clinit>()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void <init>()>",
            "children": [
                "<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onBackPressed()>",
            "children": [
                "<com.applovin.impl.sdk.utils.r: boolean f(android.content.Context)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onConfigurationChanged(android.content.res.Configuration)>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<android.webkit.WebView: void setDataDirectorySuffix(java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onDestroy()>",
            "children": [
                "<android.app.Activity: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: boolean onKeyDown(int,android.view.KeyEvent)>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onLowMemory()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onPause()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onResume()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onStop()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onWindowFocusChanged(boolean)>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.adview.AppLovinInterstitialActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.adview.r: void <init>()>",
            "children": [
                "<java.util.HashSet: void <init>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.adview.r: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.applovin.impl.a.h: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.adview.r: void onPause()>",
            "children": [
                "<com.applovin.impl.a.a$c: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.adview.r: void onResume()>",
            "children": [
                "<com.applovin.impl.a.a$c: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.adview.n: void <clinit>()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.adview.n: void <init>()>",
            "children": [
                "<android.os.Looper: android.os.Looper getMainLooper()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.adview.n: void onBackPressed()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.adview.n: void onCreate(android.os.Bundle)>",
            "children": [
                "<android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.adview.n: void onDestroy()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.adview.n: void onPause()>",
            "children": [
                "<java.lang.System: long currentTimeMillis()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.adview.n: void onResume()>",
            "children": [
                "<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.adview.n: void onSaveInstanceState(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.adview.n: void onWindowFocusChanged(boolean)>",
            "children": [
                "<com.applovin.impl.sdk.r: void f(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.applovin.mediation.MaxDebuggerAdUnitDetailActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.a.a: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.a.a: void onCreate(android.os.Bundle)>",
            "children": [
                "<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.a.a: void onDestroy()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.mediation.MaxDebuggerAdUnitsListActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.a.c: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.a.c: void onCreate(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.mediation.MaxDebuggerActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.b.a: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.b.a: void onCreate(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.b.a: boolean onCreateOptionsMenu(android.view.Menu)>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.b.a: void onDestroy()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.b.a: boolean onOptionsItemSelected(android.view.MenuItem)>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.b.a: void onStart()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.mediation.MaxDebuggerDetailActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.c.a: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.c.a: void onCreate(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.mediation.MaxDebuggerMultiAdActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.testmode.a: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.testmode.a: void onCreate(android.os.Bundle)>",
            "children": [
                "<java.lang.StringBuilder: void <init>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.testmode.a: void onDestroy()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.a: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.applovin.impl.mediation.debugger.ui.a: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.applovin.impl.sdk.utils.r: boolean e(android.content.Context)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.appodeal.ads.TestActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.appodeal.ads.TestActivity: void onBackPressed()>",
            "children": [
                "<com.appodeal.ads.Appodeal: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.appodeal.ads.TestActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.appodeal.ads.Appodeal: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.appodeal.ads.TestActivity: void onResume()>",
            "children": [
                "<com.appodeal.ads.Appodeal: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.appodeal.ads.TestActivity: void onSaveInstanceState(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.appodeal.ads.VideoPlayerActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.appodeal.ads.VideoPlayerActivity: void onBackPressed()>"
        },
        {
            "entry_point": "Entry-point: <com.appodeal.ads.VideoPlayerActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.explorestack.iab.utils.Assets: android.graphics.Bitmap getBitmapFromBase64(java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.explorestack.iab.vast.activity.VastActivity: void <clinit>()>",
            "children": [
                "<android.app.Activity: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.explorestack.iab.vast.activity.VastActivity: void <init>()>",
            "children": [
                "<com.explorestack.iab.vast.activity.VastActivity$1: void <init>(com.explorestack.iab.vast.activity.VastActivity)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.explorestack.iab.vast.activity.VastActivity: void onBackPressed()>"
        },
        {
            "entry_point": "Entry-point: <com.explorestack.iab.vast.activity.VastActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.explorestack.iab.utils.Utils: void applyFullscreenActivityFlags(android.app.Activity)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.explorestack.iab.vast.activity.VastActivity: void onDestroy()>",
            "children": [
                "<com.explorestack.iab.vast.activity.VastActivity: void removeListener(com.explorestack.iab.vast.VastRequest)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.explorestack.iab.vast.activity.VastActivity: void onSaveInstanceState(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.explorestack.iab.mraid.MraidActivity: void <clinit>()>",
            "children": [
                "<android.app.Activity: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.explorestack.iab.mraid.MraidActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.explorestack.iab.mraid.MraidActivity: void onBackPressed()>"
        },
        {
            "entry_point": "Entry-point: <com.explorestack.iab.mraid.MraidActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.explorestack.iab.utils.Utils: void applyFullscreenActivityFlags(android.app.Activity)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.explorestack.iab.mraid.MraidActivity: void onDestroy()>",
            "children": [
                "<com.explorestack.iab.mraid.MraidActivity: void removeFromDisplayCache(java.lang.Integer)>"
            ]
        },
        {
            "entry_point": "Entry-point: <io.bidmachine.nativead.view.VideoPlayerActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <io.bidmachine.nativead.view.VideoPlayerActivity: void onBackPressed()>"
        },
        {
            "entry_point": "Entry-point: <io.bidmachine.nativead.view.VideoPlayerActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.explorestack.iab.utils.Assets: android.graphics.Bitmap getBitmapFromBase64(java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.criteo.publisher.CriteoInterstitialActivity: void <init>()>",
            "children": [
                "<com.criteo.publisher.logging.h: com.criteo.publisher.logging.g b(java.lang.Class)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.criteo.publisher.CriteoInterstitialActivity: void onBackPressed()>"
        },
        {
            "entry_point": "Entry-point: <com.criteo.publisher.CriteoInterstitialActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.criteo.publisher.u: com.criteo.publisher.logging.e b(java.lang.Throwable)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.criteo.publisher.CriteoInterstitialActivity: void onDestroy()>"
        },
        {
            "entry_point": "Entry-point: <com.explorestack.consent.activity.ConsentFormActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.explorestack.consent.activity.ConsentFormActivity: void finish()>"
        },
        {
            "entry_point": "Entry-point: <com.explorestack.consent.activity.ConsentFormActivity: void onBackPressed()>"
        },
        {
            "entry_point": "Entry-point: <com.explorestack.consent.activity.ConsentFormActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.explorestack.consent.activity.ConsentFormActivity: void onDestroy()>"
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.ads.AdActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.ads.AdActivity: void onActivityResult(int,int,android.content.Intent)>",
            "children": [
                "<com.google.android.gms.internal.ads.zzazk: void zze(java.lang.String,java.lang.Throwable)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.ads.AdActivity: void onBackPressed()>",
            "children": [
                "<com.google.android.gms.internal.ads.zzazk: void zze(java.lang.String,java.lang.Throwable)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.ads.AdActivity: void onConfigurationChanged(android.content.res.Configuration)>",
            "children": [
                "<com.google.android.gms.internal.ads.zzazk: void zze(java.lang.String,java.lang.Throwable)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.ads.AdActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.google.android.gms.internal.ads.zzazk: void zze(java.lang.String,java.lang.Throwable)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.ads.AdActivity: void onDestroy()>",
            "children": [
                "<com.google.android.gms.internal.ads.zzazk: void zze(java.lang.String,java.lang.Throwable)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.ads.AdActivity: void onPause()>",
            "children": [
                "<com.google.android.gms.internal.ads.zzazk: void zze(java.lang.String,java.lang.Throwable)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.ads.AdActivity: void onRestart()>",
            "children": [
                "<com.google.android.gms.internal.ads.zzazk: void zze(java.lang.String,java.lang.Throwable)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.ads.AdActivity: void onResume()>",
            "children": [
                "<com.google.android.gms.internal.ads.zzazk: void zze(java.lang.String,java.lang.Throwable)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.ads.AdActivity: void onSaveInstanceState(android.os.Bundle)>",
            "children": [
                "<com.google.android.gms.internal.ads.zzazk: void zze(java.lang.String,java.lang.Throwable)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.ads.AdActivity: void onStart()>",
            "children": [
                "<com.google.android.gms.internal.ads.zzazk: void zze(java.lang.String,java.lang.Throwable)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.ads.AdActivity: void onStop()>",
            "children": [
                "<com.google.android.gms.internal.ads.zzazk: void zze(java.lang.String,java.lang.Throwable)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.ads.AdActivity: void onUserLeaveHint()>",
            "children": [
                "<com.google.android.gms.internal.ads.zzazk: void zze(java.lang.String,java.lang.Throwable)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.ads.AdActivity: void setContentView(int)>"
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.ads.AdActivity: void setContentView(android.view.View)>"
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.ads.AdActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>"
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.common.api.GoogleApiActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.common.api.GoogleApiActivity: void onActivityResult(int,int,android.content.Intent)>",
            "children": [
                "<com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.api.internal.GoogleApiManager zab(android.content.Context)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.common.api.GoogleApiActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.google.android.gms.common.GoogleApiAvailability: com.google.android.gms.common.GoogleApiAvailability getInstance()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.google.android.gms.common.api.GoogleApiActivity: void onSaveInstanceState(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.InterstitialActivity: void <clinit>()>"
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.InterstitialActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.InterstitialActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.ironsource.sdk.utils.Logger: void i(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.InterstitialActivity: void onPause()>",
            "children": [
                "<com.ironsource.sdk.utils.Logger: void i(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.InterstitialActivity: void onResume()>",
            "children": [
                "<com.ironsource.sdk.utils.Logger: void i(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void <clinit>()>"
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void <init>()>",
            "children": [
                "<com.ironsource.sdk.controller.ControllerActivity$1: void <init>(com.ironsource.sdk.controller.ControllerActivity)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void onBackPressed()>",
            "children": [
                "<com.ironsource.sdk.handlers.BackButtonHandler: com.ironsource.sdk.handlers.BackButtonHandler getInstance()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void onDestroy()>",
            "children": [
                "<com.ironsource.sdk.utils.Logger: void i(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: boolean onKeyDown(int,android.view.KeyEvent)>"
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void onPause()>",
            "children": [
                "<com.ironsource.sdk.utils.Logger: void i(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void onResume()>",
            "children": [
                "<com.ironsource.sdk.utils.Logger: void i(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void onSaveInstanceState(android.os.Bundle)>",
            "children": [
                "<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void onUserLeaveHint()>",
            "children": [
                "<com.ironsource.sdk.utils.Logger: void i(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void onWindowFocusChanged(boolean)>"
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void setRequestedOrientation(int)>",
            "children": [
                "<com.ironsource.sdk.utils.Logger: void i(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: void <clinit>()>",
            "children": [
                "<com.ironsource.sdk.utils.SDKUtils: int generateViewId()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: void <init>()>",
            "children": [
                "<android.os.Handler: void <init>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: void finish()>"
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: void onBackPressed()>"
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.ironsource.sdk.agent.IronSourceAdsPublisherAgent: com.ironsource.sdk.agent.IronSourceAdsPublisherAgent getInstance(android.content.Context)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: void onDestroy()>"
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: boolean onKeyDown(int,android.view.KeyEvent)>"
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: void onPause()>"
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: void onResume()>"
        },
        {
            "entry_point": "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: void onWindowFocusChanged(boolean)>"
        },
        {
            "entry_point": "Entry-point: <com.my.target.common.MyTargetActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.my.target.common.MyTargetActivity: void onBackPressed()>"
        },
        {
            "entry_point": "Entry-point: <com.my.target.common.MyTargetActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<android.view.View: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.my.target.common.MyTargetActivity: void onDestroy()>"
        },
        {
            "entry_point": "Entry-point: <com.my.target.common.MyTargetActivity: boolean onOptionsItemSelected(android.view.MenuItem)>"
        },
        {
            "entry_point": "Entry-point: <com.my.target.common.MyTargetActivity: void onPause()>"
        },
        {
            "entry_point": "Entry-point: <com.my.target.common.MyTargetActivity: void onResume()>"
        },
        {
            "entry_point": "Entry-point: <com.my.target.common.MyTargetActivity: void onStart()>"
        },
        {
            "entry_point": "Entry-point: <com.my.target.common.MyTargetActivity: void onStop()>"
        },
        {
            "entry_point": "Entry-point: <com.ogury.analytics.activity.SBActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.ogury.analytics.activity.SBActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.ogury.analytics.IIIIIIIIIIII: void <init>(com.ogury.analytics.activity.SBActivity)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ogury.analytics.activity.SBActivity: void onResume()>",
            "children": [
                "<com.ogury.analytics.activity.SBActivity$IIIIIIIIIIII: void run()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ogury.analytics.activity.SBActivity: void onStart()>"
        },
        {
            "entry_point": "Entry-point: <com.ogury.cm.ConsentActivity: void <clinit>()>",
            "children": [
                "<android.app.Activity: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ogury.cm.ConsentActivity: void <init>()>",
            "children": [
                "<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ogury.cm.ConsentActivity: void onBackPressed()>"
        },
        {
            "entry_point": "Entry-point: <com.ogury.cm.ConsentActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.ogury.cm.internal.aacba: void b(java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.ogury.cm.ConsentActivity: void onDestroy()>",
            "children": [
                "<com.ogury.cm.aaaac: void a(com.ogury.cm.aaaaa)>"
            ]
        },
        {
            "entry_point": "Entry-point: <io.presage.mraid.browser.Android8AndLaterShortcutActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <io.presage.mraid.browser.ShortcutActivity: void <clinit>()>",
            "children": [
                "<android.app.Activity: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <io.presage.mraid.browser.ShortcutActivity: void <init>()>",
            "children": [
                "<com.ogury.ed.internal.hb: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <io.presage.mraid.browser.ShortcutActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <io.presage.mraid.browser.ShortcutActivity: void onDestroy()>"
        },
        {
            "entry_point": "Entry-point: <io.presage.interstitial.ui.InterstitialAndroid8RotableActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <io.presage.interstitial.ui.InterstitialAndroid8TransparentActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <io.presage.interstitial.ui.InterstitialActivity: void <clinit>()>",
            "children": [
                "<android.app.Activity: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <io.presage.interstitial.ui.InterstitialActivity: void <init>()>",
            "children": [
                "<com.ogury.ed.internal.cp: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <io.presage.interstitial.ui.InterstitialActivity: void onBackPressed()>"
        },
        {
            "entry_point": "Entry-point: <io.presage.interstitial.ui.InterstitialActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.ogury.ed.internal.cp: void a(java.lang.Throwable)>"
            ]
        },
        {
            "entry_point": "Entry-point: <io.presage.interstitial.ui.InterstitialActivity: void onDestroy()>"
        },
        {
            "entry_point": "Entry-point: <io.presage.interstitial.ui.InterstitialActivity: void onPause()>",
            "children": [
                "<com.ogury.ed.internal.n: void b(boolean)>"
            ]
        },
        {
            "entry_point": "Entry-point: <io.presage.interstitial.ui.InterstitialActivity: void onResume()>",
            "children": [
                "<com.ogury.ed.internal.n: void b(boolean)>"
            ]
        },
        {
            "entry_point": "Entry-point: <io.presage.interstitial.ui.InterstitialActivity: void onStop()>"
        },
        {
            "entry_point": "Entry-point: <com.smaato.sdk.core.browser.SmaatoSdkBrowserActivity: void <clinit>()>"
        },
        {
            "entry_point": "Entry-point: <com.smaato.sdk.core.browser.SmaatoSdkBrowserActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.smaato.sdk.core.browser.SmaatoSdkBrowserActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.smaato.sdk.core.util.Objects: void onNotNull(java.lang.Object,com.smaato.sdk.core.util.fi.Consumer)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.smaato.sdk.core.browser.SmaatoSdkBrowserActivity: void onDestroy()>",
            "children": [
                "<com.smaato.sdk.core.util.Objects: void onNotNull(java.lang.Object,com.smaato.sdk.core.util.fi.Consumer)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.smaato.sdk.core.browser.SmaatoSdkBrowserActivity: void onPause()>",
            "children": [
                "<com.smaato.sdk.core.util.Objects: void onNotNull(java.lang.Object,com.smaato.sdk.core.util.fi.Consumer)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.smaato.sdk.core.browser.SmaatoSdkBrowserActivity: void onResume()>",
            "children": [
                "<com.smaato.sdk.core.util.Objects: void onNotNull(java.lang.Object,com.smaato.sdk.core.util.fi.Consumer)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.smaato.sdk.core.browser.SmaatoSdkBrowserActivity: void onStart()>",
            "children": [
                "<com.smaato.sdk.core.util.Objects: void onNotNull(java.lang.Object,com.smaato.sdk.core.util.fi.Consumer)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.smaato.sdk.core.browser.SmaatoSdkBrowserActivity: void onStop()>",
            "children": [
                "<com.smaato.sdk.core.util.Objects: void onNotNull(java.lang.Object,com.smaato.sdk.core.util.fi.Consumer)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.smaato.sdk.interstitial.InterstitialAdActivity: void <clinit>()>"
        },
        {
            "entry_point": "Entry-point: <com.smaato.sdk.interstitial.InterstitialAdActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.smaato.sdk.interstitial.InterstitialAdActivity: void onBackPressed()>"
        },
        {
            "entry_point": "Entry-point: <com.smaato.sdk.interstitial.InterstitialAdActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<android.util.Log: int e(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.smaato.sdk.interstitial.InterstitialAdActivity: void onDestroy()>",
            "children": [
                "<com.smaato.sdk.core.util.Objects: void onNotNull(java.lang.Object,com.smaato.sdk.core.util.fi.Consumer)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.smaato.sdk.rewarded.widget.RewardedInterstitialAdActivity: void <clinit>()>"
        },
        {
            "entry_point": "Entry-point: <com.smaato.sdk.rewarded.widget.RewardedInterstitialAdActivity: void <init>()>",
            "children": [
                "<com.smaato.sdk.rewarded.widget.RewardedInterstitialAdActivity$1: void <init>(com.smaato.sdk.rewarded.widget.RewardedInterstitialAdActivity)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.smaato.sdk.rewarded.widget.RewardedInterstitialAdActivity: void onBackPressed()>"
        },
        {
            "entry_point": "Entry-point: <com.smaato.sdk.rewarded.widget.RewardedInterstitialAdActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.smaato.sdk.core.AndroidsInjector: void inject(android.app.Activity)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.smaato.sdk.rewarded.widget.RewardedInterstitialAdActivity: void onDestroy()>",
            "children": [
                "<com.smaato.sdk.core.util.Objects: void onNotNull(java.lang.Object,com.smaato.sdk.core.util.fi.Consumer)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.startapp.sdk.ads.interstitials.OverlayActivity: void <clinit>()>",
            "children": [
                "<java.lang.Class: java.lang.String getSimpleName()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.startapp.sdk.ads.interstitials.OverlayActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.startapp.sdk.ads.interstitials.OverlayActivity: void finish()>"
        },
        {
            "entry_point": "Entry-point: <com.startapp.sdk.ads.interstitials.OverlayActivity: void onBackPressed()>"
        },
        {
            "entry_point": "Entry-point: <com.startapp.sdk.ads.interstitials.OverlayActivity: void onConfigurationChanged(android.content.res.Configuration)>"
        },
        {
            "entry_point": "Entry-point: <com.startapp.sdk.ads.interstitials.OverlayActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.startapp.sdk.adsbase.model.AdPreferences$Placement: com.startapp.sdk.adsbase.model.AdPreferences$Placement a(int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.startapp.sdk.ads.interstitials.OverlayActivity: void onDestroy()>",
            "children": [
                "<com.startapp.sdk.adsbase.l.aa: void a(android.app.Activity,boolean)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.startapp.sdk.ads.interstitials.OverlayActivity: boolean onKeyDown(int,android.view.KeyEvent)>"
        },
        {
            "entry_point": "Entry-point: <com.startapp.sdk.ads.interstitials.OverlayActivity: void onPause()>",
            "children": [
                "<com.startapp.sdk.adsbase.a: void a(android.content.Context)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.startapp.sdk.ads.interstitials.OverlayActivity: void onResume()>",
            "children": [
                "<com.startapp.common.b.b: void a(android.app.Activity,int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.startapp.sdk.ads.interstitials.OverlayActivity: void onSaveInstanceState(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.startapp.sdk.ads.interstitials.OverlayActivity: void onStop()>"
        },
        {
            "entry_point": "Entry-point: <com.startapp.sdk.ads.list3d.List3DActivity: void <init>()>",
            "children": [
                "<com.startapp.sdk.ads.list3d.List3DActivity$1: void <init>(com.startapp.sdk.ads.list3d.List3DActivity)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.startapp.sdk.ads.list3d.List3DActivity: void finish()>",
            "children": [
                "<com.startapp.sdk.ads.list3d.g: com.startapp.sdk.ads.list3d.g a()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.startapp.sdk.ads.list3d.List3DActivity: void onBackPressed()>",
            "children": [
                "<com.startapp.sdk.ads.list3d.g: com.startapp.sdk.ads.list3d.g a()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.startapp.sdk.ads.list3d.List3DActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.startapp.sdk.ads.list3d.List3DActivity: void onDestroy()>",
            "children": [
                "<com.startapp.sdk.adsbase.l.aa: void a(android.app.Activity,boolean)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.startapp.sdk.ads.list3d.List3DActivity: void onPause()>",
            "children": [
                "<com.startapp.sdk.ads.list3d.g: com.startapp.sdk.ads.list3d.g a()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.startapp.sdk.ads.list3d.List3DActivity: void onResume()>",
            "children": [
                "<com.startapp.sdk.ads.list3d.g: com.startapp.sdk.ads.list3d.g a()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.startapp.sdk.ads.list3d.List3DActivity: void onSaveInstanceState(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.startapp.sdk.adsbase.consent.ConsentActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.startapp.sdk.adsbase.consent.ConsentActivity: void onBackPressed()>"
        },
        {
            "entry_point": "Entry-point: <com.startapp.sdk.adsbase.consent.ConsentActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.startapp.common.b.b: void d(android.webkit.WebView)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.startapp.sdk.adsbase.consent.ConsentActivity: void onStop()>",
            "children": [
                "<com.startapp.sdk.components.c: com.startapp.sdk.components.c a(android.content.Context)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.unity3d.player.UnityPlayerActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.player.UnityPlayerActivity: boolean dispatchKeyEvent(android.view.KeyEvent)>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onConfigurationChanged(android.content.res.Configuration)>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<android.view.View: void <clinit>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onDestroy()>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.player.UnityPlayerActivity: boolean onGenericMotionEvent(android.view.MotionEvent)>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.player.UnityPlayerActivity: boolean onKeyDown(int,android.view.KeyEvent)>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.player.UnityPlayerActivity: boolean onKeyUp(int,android.view.KeyEvent)>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onLowMemory()>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onNewIntent(android.content.Intent)>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onPause()>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onResume()>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onStart()>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onStop()>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.player.UnityPlayerActivity: boolean onTouchEvent(android.view.MotionEvent)>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onTrimMemory(int)>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onWindowFocusChanged(boolean)>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.services.ads.adunit.AdUnitSoftwareActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.services.ads.adunit.AdUnitTransparentSoftwareActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.services.ads.adunit.AdUnitTransparentActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.services.ads.adunit.AdUnitTransparentActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<android.graphics.drawable.ColorDrawable: void <init>(int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<java.lang.Integer: java.lang.Integer valueOf(int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onDestroy()>",
            "children": [
                "<com.unity3d.services.core.api.Intent: void removeActiveActivity(android.app.Activity)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: boolean onKeyDown(int,android.view.KeyEvent)>",
            "children": [
                "<java.lang.Integer: java.lang.Integer valueOf(int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onPause()>",
            "children": [
                "<java.lang.Integer: java.lang.Integer valueOf(int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>",
            "children": [
                "<com.unity3d.services.core.webview.WebViewApp: com.unity3d.services.core.webview.WebViewApp getCurrentApp()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onResume()>",
            "children": [
                "<java.lang.Integer: java.lang.Integer valueOf(int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onSaveInstanceState(android.os.Bundle)>"
        },
        {
            "entry_point": "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onStart()>",
            "children": [
                "<java.lang.Integer: java.lang.Integer valueOf(int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onStop()>",
            "children": [
                "<java.lang.Integer: java.lang.Integer valueOf(int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onWindowFocusChanged(boolean)>",
            "children": [
                "<java.lang.Integer: java.lang.Integer valueOf(int)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.vungle.warren.ui.VungleActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.vungle.warren.AdActivity: void <init>()>",
            "children": [
                "<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.vungle.warren.AdActivity: void onBackPressed()>"
        },
        {
            "entry_point": "Entry-point: <com.vungle.warren.AdActivity: void onConfigurationChanged(android.content.res.Configuration)>",
            "children": [
                "<android.util.Log: int d(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.vungle.warren.AdActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.vungle.warren.AdActivity: void onDestroy()>",
            "children": [
                "<androidx.localbroadcastmanager.content.LocalBroadcastManager: androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.vungle.warren.AdActivity: void onNewIntent(android.content.Intent)>",
            "children": [
                "<com.vungle.warren.VungleLogger: void warn(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.vungle.warren.AdActivity: void onPause()>"
        },
        {
            "entry_point": "Entry-point: <com.vungle.warren.AdActivity: void onRestoreInstanceState(android.os.Bundle)>",
            "children": [
                "<java.lang.StringBuilder: void <init>()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.vungle.warren.AdActivity: void onResume()>"
        },
        {
            "entry_point": "Entry-point: <com.vungle.warren.AdActivity: void onSaveInstanceState(android.os.Bundle)>",
            "children": [
                "<android.util.Log: int d(java.lang.String,java.lang.String)>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.vungle.warren.AdActivity: void onWindowFocusChanged(boolean)>"
        },
        {
            "entry_point": "Entry-point: <com.vungle.warren.AdActivity: void setRequestedOrientation(int)>"
        },
        {
            "entry_point": "Entry-point: <com.yandex.mobile.ads.AdActivity: void <clinit>()>"
        },
        {
            "entry_point": "Entry-point: <com.yandex.mobile.ads.AdActivity: void <init>()>"
        },
        {
            "entry_point": "Entry-point: <com.yandex.mobile.ads.AdActivity: void onBackPressed()>"
        },
        {
            "entry_point": "Entry-point: <com.yandex.mobile.ads.AdActivity: void onCreate(android.os.Bundle)>",
            "children": [
                "<com.yandex.mobile.ads.impl.m: com.yandex.mobile.ads.impl.m a()>"
            ]
        },
        {
            "entry_point": "Entry-point: <com.yandex.mobile.ads.AdActivity: void onDestroy()>"
        },
        {
            "entry_point": "Entry-point: <com.yandex.mobile.ads.AdActivity: void onPause()>"
        },
        {
            "entry_point": "Entry-point: <com.yandex.mobile.ads.AdActivity: void onResume()>"
        }
    ],
    "functions": {
        "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void finish()>": {
            "code": "void  finish()  {\n            AudienceNetworkActivity.super.finish();\n        }",
            "children": []
        },
        "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onActivityResult(int,int,android.content.Intent)>": {
            "code": "void  onActivityResult(int,int,android.content.Intent)  {\n            AudienceNetworkActivity.super.onActivityResult(i, i2, intent);\n        }",
            "children": []
        },
        "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n            AudienceNetworkActivity.super.onBackPressed();\n        }",
            "children": []
        },
        "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onConfigurationChanged(android.content.res.Configuration)>": {
            "code": "void  onConfigurationChanged(android.content.res.Configuration)  {\n            AudienceNetworkActivity.super.onConfigurationChanged(configuration);\n        }",
            "children": []
        },
        "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n            AudienceNetworkActivity.super.onCreate(bundle);\n        }",
            "children": [
                "<com.facebook.ads.internal.dynamicloading.DynamicLoaderFactory: com.facebook.ads.internal.dynamicloading.DynamicLoader makeLoader(android.content.Context)>"
            ]
        },
        "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n            AudienceNetworkActivity.super.onDestroy();\n        }",
            "children": []
        },
        "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onPause()>": {
            "code": "void  onPause()  {\n            AudienceNetworkActivity.super.onPause();\n        }",
            "children": []
        },
        "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onResume()>": {
            "code": "void  onResume()  {\n            AudienceNetworkActivity.super.onResume();\n        }",
            "children": []
        },
        "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onSaveInstanceState(android.os.Bundle)>": {
            "code": "void  onSaveInstanceState(android.os.Bundle)  {\n            AudienceNetworkActivity.super.onSaveInstanceState(bundle);\n        }",
            "children": []
        },
        "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onStart()>": {
            "code": "void  onStart()  {\n            AudienceNetworkActivity.super.onStart();\n        }",
            "children": []
        },
        "Entry-point: <com.facebook.ads.AudienceNetworkActivity: void onStop()>": {
            "code": "void  onStop()  {\n            AudienceNetworkActivity.super.onStop();\n        }",
            "children": []
        },
        "Entry-point: <com.facebook.ads.AudienceNetworkActivity: boolean onTouchEvent(android.view.MotionEvent)>": {
            "code": "boolean  onTouchEvent(android.view.MotionEvent)  {\n            return AudienceNetworkActivity.super.onTouchEvent(motionEvent);\n        }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": {
            "code": "void  dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])  {\n        super.dump(str, fileDescriptor, printWriter, strArr);\n        printWriter.print(str);\n        printWriter.print(\"Local FragmentActivity \");\n        printWriter.print(Integer.toHexString(System.identityHashCode(this)));\n        printWriter.println(\" State:\");\n        String str2 = str + \"  \";\n        printWriter.print(str2);\n        printWriter.print(\"mCreated=\");\n        printWriter.print(this.mCreated);\n        printWriter.print(\" mResumed=\");\n        printWriter.print(this.mResumed);\n        printWriter.print(\" mStopped=\");\n        printWriter.print(this.mStopped);\n        if (getApplication() != null) {\n            LoaderManager.getInstance(this).dump(str2, fileDescriptor, printWriter, strArr);\n        }\n        this.mFragments.getSupportFragmentManager().dump(str, fileDescriptor, printWriter, strArr);\n    }",
            "children": [
                "<androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>"
            ]
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)>": {
            "code": "void  onActivityResult(int,int,android.content.Intent)  {\n        this.mFragments.noteStateNotSaved();\n        int i3 = i >> 16;\n        if (i3 != 0) {\n            int i4 = i3 - 1;\n            String str = this.mPendingFragmentActivityResults.get(i4);\n            this.mPendingFragmentActivityResults.remove(i4);\n            if (str == null) {\n                Log.w(TAG, \"Activity result delivered for unknown Fragment.\");\n                return;\n            }\n            Fragment findFragmentByWho = this.mFragments.findFragmentByWho(str);\n            if (findFragmentByWho == null) {\n                Log.w(TAG, \"Activity result no fragment exists for who: \" + str);\n                return;\n            }\n            findFragmentByWho.onActivityResult(i & 65535, i2, intent);\n            return;\n        }\n        ActivityCompat.PermissionCompatDelegate permissionCompatDelegate = ActivityCompat.getPermissionCompatDelegate();\n        if (permissionCompatDelegate == null || !permissionCompatDelegate.onActivityResult(this, i, i2, intent)) {\n            super.onActivityResult(i, i2, intent);\n        }\n    }",
            "children": [
                "<androidx.core.app.ActivityCompat: androidx.core.app.ActivityCompat$PermissionCompatDelegate getPermissionCompatDelegate()>"
            ]
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        FragmentManager supportFragmentManager = this.mFragments.getSupportFragmentManager();\n        boolean isStateSaved = supportFragmentManager.isStateSaved();\n        if (!isStateSaved || Build.VERSION.SDK_INT > 25) {\n            if (isStateSaved || !supportFragmentManager.popBackStackImmediate()) {\n                super.onBackPressed();\n            }\n        }\n    }",
            "children": [
                "<android.os.Build$VERSION: void <clinit>()>"
            ]
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)>": {
            "code": "void  onConfigurationChanged(android.content.res.Configuration)  {\n        super.onConfigurationChanged(configuration);\n        this.mFragments.noteStateNotSaved();\n        this.mFragments.dispatchConfigurationChanged(configuration);\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        this.mFragments.attachHost(null);\n        super.onCreate(bundle);\n        NonConfigurationInstances nonConfigurationInstances = (NonConfigurationInstances) getLastNonConfigurationInstance();\n        if (nonConfigurationInstances != null && nonConfigurationInstances.viewModelStore != null && this.mViewModelStore == null) {\n            this.mViewModelStore = nonConfigurationInstances.viewModelStore;\n        }\n        if (bundle != null) {\n            this.mFragments.restoreAllState(bundle.getParcelable(FRAGMENTS_TAG), nonConfigurationInstances != null ? nonConfigurationInstances.fragments : null);\n            if (bundle.containsKey(NEXT_CANDIDATE_REQUEST_INDEX_TAG)) {\n                this.mNextCandidateRequestIndex = bundle.getInt(NEXT_CANDIDATE_REQUEST_INDEX_TAG);\n                int[] intArray = bundle.getIntArray(ALLOCATED_REQUEST_INDICIES_TAG);\n                String[] stringArray = bundle.getStringArray(REQUEST_FRAGMENT_WHO_TAG);\n                if (intArray == null || stringArray == null || intArray.length != stringArray.length) {\n                    Log.w(TAG, \"Invalid requestCode mapping in savedInstanceState.\");\n                } else {\n                    this.mPendingFragmentActivityResults = new SparseArrayCompat<>(intArray.length);\n                    for (int i = 0; i < intArray.length; i++) {\n                        this.mPendingFragmentActivityResults.put(intArray[i], stringArray[i]);\n                    }\n                }\n            }\n        }\n        if (this.mPendingFragmentActivityResults == null) {\n            this.mPendingFragmentActivityResults = new SparseArrayCompat<>();\n            this.mNextCandidateRequestIndex = 0;\n        }\n        this.mFragments.dispatchCreate();\n    }",
            "children": [
                "<android.util.Log: int w(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: boolean onCreatePanelMenu(int,android.view.Menu)>": {
            "code": "boolean  onCreatePanelMenu(int,android.view.Menu)  {\n        if (i == 0) {\n            return super.onCreatePanelMenu(i, menu) | this.mFragments.dispatchCreateOptionsMenu(menu, getMenuInflater());\n        }\n        return super.onCreatePanelMenu(i, menu);\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        super.onDestroy();\n        if (this.mViewModelStore != null && !isChangingConfigurations()) {\n            this.mViewModelStore.clear();\n        }\n        this.mFragments.dispatchDestroy();\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onLowMemory()>": {
            "code": "void  onLowMemory()  {\n        super.onLowMemory();\n        this.mFragments.dispatchLowMemory();\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)>": {
            "code": "boolean  onMenuItemSelected(int,android.view.MenuItem)  {\n        if (super.onMenuItemSelected(i, menuItem)) {\n            return true;\n        }\n        if (i != 0) {\n            if (i != 6) {\n                return false;\n            }\n            return this.mFragments.dispatchContextItemSelected(menuItem);\n        }\n        return this.mFragments.dispatchOptionsItemSelected(menuItem);\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onMultiWindowModeChanged(boolean)>": {
            "code": "void  onMultiWindowModeChanged(boolean)  {\n        this.mFragments.dispatchMultiWindowModeChanged(z);\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onNewIntent(android.content.Intent)>": {
            "code": "void  onNewIntent(android.content.Intent)  {\n        super.onNewIntent(intent);\n        this.mFragments.noteStateNotSaved();\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onPanelClosed(int,android.view.Menu)>": {
            "code": "void  onPanelClosed(int,android.view.Menu)  {\n        if (i == 0) {\n            this.mFragments.dispatchOptionsMenuClosed(menu);\n        }\n        super.onPanelClosed(i, menu);\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onPause()>": {
            "code": "void  onPause()  {\n        super.onPause();\n        this.mResumed = false;\n        if (this.mHandler.hasMessages(2)) {\n            this.mHandler.removeMessages(2);\n            onResumeFragments();\n        }\n        this.mFragments.dispatchPause();\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onPictureInPictureModeChanged(boolean)>": {
            "code": "void  onPictureInPictureModeChanged(boolean)  {\n        this.mFragments.dispatchPictureInPictureModeChanged(z);\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onPostResume()>": {
            "code": "void  onPostResume()  {\n        super.onPostResume();\n        this.mHandler.removeMessages(2);\n        onResumeFragments();\n        this.mFragments.execPendingActions();\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)>": {
            "code": "boolean  onPreparePanel(int,android.view.View,android.view.Menu)  {\n        if (i == 0 && menu != null) {\n            return onPrepareOptionsPanel(view, menu) | this.mFragments.dispatchPrepareOptionsMenu(menu);\n        }\n        return super.onPreparePanel(i, view, menu);\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>": {
            "code": "void  onRequestPermissionsResult(int,java.lang.String[],int[])  {\n        this.mFragments.noteStateNotSaved();\n        int i2 = (i >> 16) & 65535;\n        if (i2 != 0) {\n            int i3 = i2 - 1;\n            String str = this.mPendingFragmentActivityResults.get(i3);\n            this.mPendingFragmentActivityResults.remove(i3);\n            if (str == null) {\n                Log.w(TAG, \"Activity result delivered for unknown Fragment.\");\n                return;\n            }\n            Fragment findFragmentByWho = this.mFragments.findFragmentByWho(str);\n            if (findFragmentByWho == null) {\n                Log.w(TAG, \"Activity result no fragment exists for who: \" + str);\n                return;\n            }\n            findFragmentByWho.onRequestPermissionsResult(i & 65535, strArr, iArr);\n        }\n    }",
            "children": [
                "<android.util.Log: int w(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n        this.mHandler.sendEmptyMessage(2);\n        this.mResumed = true;\n        this.mFragments.execPendingActions();\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)>": {
            "code": "void  onSaveInstanceState(android.os.Bundle)  {\n        super.onSaveInstanceState(bundle);\n        markFragmentsCreated();\n        Parcelable saveAllState = this.mFragments.saveAllState();\n        if (saveAllState != null) {\n            bundle.putParcelable(FRAGMENTS_TAG, saveAllState);\n        }\n        if (this.mPendingFragmentActivityResults.size() > 0) {\n            bundle.putInt(NEXT_CANDIDATE_REQUEST_INDEX_TAG, this.mNextCandidateRequestIndex);\n            int[] iArr = new int[this.mPendingFragmentActivityResults.size()];\n            String[] strArr = new String[this.mPendingFragmentActivityResults.size()];\n            for (int i = 0; i < this.mPendingFragmentActivityResults.size(); i++) {\n                iArr[i] = this.mPendingFragmentActivityResults.keyAt(i);\n                strArr[i] = this.mPendingFragmentActivityResults.valueAt(i);\n            }\n            bundle.putIntArray(ALLOCATED_REQUEST_INDICIES_TAG, iArr);\n            bundle.putStringArray(REQUEST_FRAGMENT_WHO_TAG, strArr);\n        }\n    }",
            "children": [
                "<java.lang.String: void <clinit>()>"
            ]
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onStart()>": {
            "code": "void  onStart()  {\n        super.onStart();\n        this.mStopped = false;\n        if (!this.mCreated) {\n            this.mCreated = true;\n            this.mFragments.dispatchActivityCreated();\n        }\n        this.mFragments.noteStateNotSaved();\n        this.mFragments.execPendingActions();\n        this.mFragments.dispatchStart();\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onStateNotSaved()>": {
            "code": "void  onStateNotSaved()  {\n        this.mFragments.noteStateNotSaved();\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void onStop()>": {
            "code": "void  onStop()  {\n        super.onStop();\n        this.mStopped = true;\n        markFragmentsCreated();\n        this.mFragments.dispatchStop();\n    }",
            "children": []
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int)>": {
            "code": "void  startActivityForResult(android.content.Intent,int)  {\n        if (!this.mStartedActivityFromFragment && i != -1) {\n            checkForValidRequestCode(i);\n        }\n        super.startActivityForResult(intent, i);\n    }",
            "children": [
                "<androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)>"
            ]
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>": {
            "code": "void  startActivityForResult(android.content.Intent,int,android.os.Bundle)  {\n        if (!this.mStartedActivityFromFragment && i != -1) {\n            checkForValidRequestCode(i);\n        }\n        super.startActivityForResult(intent, i);\n    }",
            "children": [
                "<androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)>"
            ]
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)>": {
            "code": "void  startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)  {\n        if (!this.mStartedIntentSenderFromFragment && i != -1) {\n            checkForValidRequestCode(i);\n        }\n        super.startIntentSenderForResult(intentSender, i, intent, i2, i3, i4);\n    }",
            "children": [
                "<androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)>"
            ]
        },
        "Entry-point: <androidx.fragment.app.FragmentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>": {
            "code": "void  startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)  {\n        if (!this.mStartedIntentSenderFromFragment && i != -1) {\n            checkForValidRequestCode(i);\n        }\n        super.startIntentSenderForResult(intentSender, i, intent, i2, i3, i4);\n    }",
            "children": [
                "<androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)>"
            ]
        },
        "Entry-point: <androidx.core.app.ComponentActivity: boolean dispatchKeyEvent(android.view.KeyEvent)>": {
            "code": "boolean  dispatchKeyEvent(android.view.KeyEvent)  {\n        View decorView = getWindow().getDecorView();\n        if (decorView == null || !KeyEventDispatcher.dispatchBeforeHierarchy(decorView, keyEvent)) {\n            return KeyEventDispatcher.dispatchKeyEvent(this, decorView, this, keyEvent);\n        }\n        return true;\n    }",
            "children": [
                "<androidx.core.view.KeyEventDispatcher: boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent)>"
            ]
        },
        "Entry-point: <androidx.core.app.ComponentActivity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>": {
            "code": "boolean  dispatchKeyShortcutEvent(android.view.KeyEvent)  {\n        View decorView = getWindow().getDecorView();\n        if (decorView == null || !KeyEventDispatcher.dispatchBeforeHierarchy(decorView, keyEvent)) {\n            return super.dispatchKeyShortcutEvent(keyEvent);\n        }\n        return true;\n    }",
            "children": [
                "<androidx.core.view.KeyEventDispatcher: boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent)>"
            ]
        },
        "Entry-point: <androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        ReportFragment.injectIfNeededIn(this);\n    }",
            "children": [
                "<androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)>"
            ]
        },
        "Entry-point: <androidx.core.app.ComponentActivity: void onSaveInstanceState(android.os.Bundle)>": {
            "code": "void  onSaveInstanceState(android.os.Bundle)  {\n        this.mLifecycleRegistry.markState(Lifecycle.State.CREATED);\n        super.onSaveInstanceState(bundle);\n    }",
            "children": [
                "<androidx.lifecycle.Lifecycle$State: void <clinit>()>"
            ]
        },
        "Entry-point: <com.adcolony.sdk.AdColonyAdViewActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        b();\n    }",
            "children": []
        },
        "Entry-point: <com.adcolony.sdk.AdColonyAdViewActivity: void onConfigurationChanged(android.content.res.Configuration)>": {
            "code": "void  onConfigurationChanged(android.content.res.Configuration)  {\n        super.onConfigurationChanged(configuration);\n    }",
            "children": []
        },
        "Entry-point: <com.adcolony.sdk.AdColonyAdViewActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        AdColonyAdView adColonyAdView;\n        if (a.e() && (adColonyAdView = this.m) != null) {\n            this.c = adColonyAdView.getOrientation();\n            super.onCreate(bundle);\n            this.m.b();\n            AdColonyAdViewListener listener = this.m.getListener();\n            if (listener != null) {\n                listener.onOpened(this.m);\n                return;\n            }\n            return;\n        }\n        a.c().a((AdColonyAdView) null);\n        finish();\n    }",
            "children": [
                "<com.adcolony.sdk.a: com.adcolony.sdk.i c()>"
            ]
        },
        "Entry-point: <com.adcolony.sdk.AdColonyAdViewActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        super.onDestroy();\n    }",
            "children": []
        },
        "Entry-point: <com.adcolony.sdk.AdColonyAdViewActivity: void onPause()>": {
            "code": "void  onPause()  {\n        super.onPause();\n    }",
            "children": []
        },
        "Entry-point: <com.adcolony.sdk.AdColonyAdViewActivity: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n    }",
            "children": []
        },
        "Entry-point: <com.adcolony.sdk.AdColonyAdViewActivity: void onWindowFocusChanged(boolean)>": {
            "code": "void  onWindowFocusChanged(boolean)  {\n        super.onWindowFocusChanged(z);\n    }",
            "children": []
        },
        "Entry-point: <com.adcolony.sdk.AdColonyInterstitialActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        super.onBackPressed();\n    }",
            "children": []
        },
        "Entry-point: <com.adcolony.sdk.AdColonyInterstitialActivity: void onConfigurationChanged(android.content.res.Configuration)>": {
            "code": "void  onConfigurationChanged(android.content.res.Configuration)  {\n        super.onConfigurationChanged(configuration);\n    }",
            "children": []
        },
        "Entry-point: <com.adcolony.sdk.AdColonyInterstitialActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        AdColonyInterstitial adColonyInterstitial;\n        AdColonyInterstitial adColonyInterstitial2 = this.m;\n        this.c = adColonyInterstitial2 == null ? -1 : adColonyInterstitial2.g();\n        super.onCreate(bundle);\n        if (!a.e() || (adColonyInterstitial = this.m) == null) {\n            return;\n        }\n        d0 f = adColonyInterstitial.f();\n        if (f != null) {\n            f.a(this.a);\n        }\n        this.n = new h(new Handler(Looper.getMainLooper()), this.m);\n        if (this.m.getListener() != null) {\n            this.m.getListener().onOpened(this.m);\n        }\n    }",
            "children": [
                "<android.os.Looper: android.os.Looper getMainLooper()>"
            ]
        },
        "Entry-point: <com.adcolony.sdk.AdColonyInterstitialActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        super.onDestroy();\n    }",
            "children": []
        },
        "Entry-point: <com.adcolony.sdk.AdColonyInterstitialActivity: void onPause()>": {
            "code": "void  onPause()  {\n        super.onPause();\n    }",
            "children": []
        },
        "Entry-point: <com.adcolony.sdk.AdColonyInterstitialActivity: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n    }",
            "children": []
        },
        "Entry-point: <com.adcolony.sdk.AdColonyInterstitialActivity: void onWindowFocusChanged(boolean)>": {
            "code": "void  onWindowFocusChanged(boolean)  {\n        super.onWindowFocusChanged(z);\n    }",
            "children": []
        },
        "Entry-point: <com.adcolony.sdk.b: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        JSONObject b = t.b();\n        t.a(b, \"id\", this.a.a());\n        new y(\"AdSession.on_back_button\", this.a.k(), b).d();\n    }",
            "children": [
                "<com.adcolony.sdk.t: boolean a(org.json.JSONObject,java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.adcolony.sdk.b: void onConfigurationChanged(android.content.res.Configuration)>": {
            "code": "void  onConfigurationChanged(android.content.res.Configuration)  {\n        super.onConfigurationChanged(configuration);\n        if (this instanceof AdColonyInterstitialActivity) {\n            a();\n        } else {\n            ((AdColonyAdViewActivity) this).c();\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.adcolony.sdk.b: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        if (com.adcolony.sdk.a.e() && com.adcolony.sdk.a.c().f() != null) {\n            i c = com.adcolony.sdk.a.c();\n            this.g = false;\n            c f = c.f();\n            this.a = f;\n            f.c(false);\n            if (l0.f()) {\n                this.a.c(true);\n            }\n            this.b = this.a.a();\n            this.d = this.a.k();\n            boolean multiWindowEnabled = c.r().getMultiWindowEnabled();\n            this.h = multiWindowEnabled;\n            if (multiWindowEnabled) {\n                getWindow().addFlags(2048);\n                getWindow().clearFlags(1024);\n            } else {\n                getWindow().addFlags(1024);\n                getWindow().clearFlags(2048);\n            }\n            requestWindowFeature(1);\n            getWindow().getDecorView().setBackgroundColor(ViewCompat.MEASURED_STATE_MASK);\n            if (c.r().getKeepScreenOn()) {\n                getWindow().addFlags(128);\n            }\n            ViewParent parent = this.a.getParent();\n            if (parent != null) {\n                ((ViewGroup) parent).removeView(this.a);\n            }\n            setContentView(this.a);\n            this.a.i().add(com.adcolony.sdk.a.a(\"AdSession.finish_fullscreen_ad\", (a0) new a(), true));\n            this.a.j().add(\"AdSession.finish_fullscreen_ad\");\n            a(this.c);\n            if (!this.a.o()) {\n                JSONObject b = t.b();\n                t.a(b, \"id\", this.a.a());\n                t.b(b, \"screen_width\", this.a.d());\n                t.b(b, \"screen_height\", this.a.b());\n                new y(\"AdSession.on_fullscreen_ad_started\", this.a.k(), b).d();\n                this.a.d(true);\n                return;\n            }\n            a();\n            return;\n        }\n        finish();\n    }",
            "children": [
                "<com.adcolony.sdk.t: boolean b(org.json.JSONObject,java.lang.String,int)>"
            ]
        },
        "Entry-point: <com.adcolony.sdk.b: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        super.onDestroy();\n        if (!com.adcolony.sdk.a.e() || this.a == null || this.e) {\n            return;\n        }\n        if ((Build.VERSION.SDK_INT < 24 || !l0.f()) && !this.a.q()) {\n            JSONObject b = t.b();\n            t.a(b, \"id\", this.a.a());\n            new y(\"AdSession.on_error\", this.a.k(), b).d();\n            this.g = true;\n        }\n    }",
            "children": [
                "<com.adcolony.sdk.t: boolean a(org.json.JSONObject,java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.adcolony.sdk.b: void onPause()>": {
            "code": "void  onPause()  {\n        super.onPause();\n        a(this.f);\n        this.f = false;\n    }",
            "children": []
        },
        "Entry-point: <com.adcolony.sdk.b: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n        a();\n        b(this.f);\n        this.f = true;\n        this.j = true;\n    }",
            "children": []
        },
        "Entry-point: <com.adcolony.sdk.b: void onWindowFocusChanged(boolean)>": {
            "code": "void  onWindowFocusChanged(boolean)  {\n        if (z && this.f) {\n            com.adcolony.sdk.a.c().u().b(true);\n            b(this.f);\n            this.i = true;\n        } else if (z || !this.f) {\n        } else {\n            com.adcolony.sdk.a.c().u().a(true);\n            a(this.f);\n            this.i = false;\n        }\n    }",
            "children": [
                "<com.adcolony.sdk.a: com.adcolony.sdk.i c()>"
            ]
        },
        "Entry-point: <com.amazon.device.ads.AdActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  None",
            "children": []
        },
        "Entry-point: <com.amazon.device.ads.AdActivity: void onConfigurationChanged(android.content.res.Configuration)>": {
            "code": "void  onConfigurationChanged(android.content.res.Configuration)  None",
            "children": []
        },
        "Entry-point: <com.amazon.device.ads.AdActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  None",
            "children": []
        },
        "Entry-point: <com.amazon.device.ads.AdActivity: void onDestroy()>": {
            "code": "void  onDestroy()  None",
            "children": []
        },
        "Entry-point: <com.amazon.device.ads.AdActivity: void onPause()>": {
            "code": "void  onPause()  None",
            "children": []
        },
        "Entry-point: <com.amazon.device.ads.AdActivity: void onResume()>": {
            "code": "void  onResume()  None",
            "children": []
        },
        "Entry-point: <com.amazon.device.ads.AdActivity: void onStop()>": {
            "code": "void  onStop()  None",
            "children": []
        },
        "Entry-point: <com.amazon.device.ads.AdActivity: void onWindowFocusChanged(boolean)>": {
            "code": "void  onWindowFocusChanged(boolean)  None",
            "children": []
        },
        "Entry-point: <com.applovin.sdk.AppLovinWebViewActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        EventListener eventListener = this.c;\n        if (eventListener != null) {\n            eventListener.onReceivedEvent(EVENT_DISMISSED_VIA_BACK_BUTTON);\n        }\n        super.onBackPressed();\n    }",
            "children": []
        },
        "Entry-point: <com.applovin.sdk.AppLovinWebViewActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        String stringExtra = getIntent().getStringExtra(INTENT_EXTRA_KEY_SDK_KEY);\n        if (TextUtils.isEmpty(stringExtra)) {\n            r.i(\"AppLovinWebViewActivity\", \"No SDK key specified\");\n        } else {\n            final AppLovinSdk appLovinSdk = AppLovinSdk.getInstance(stringExtra, new AppLovinSdkSettings(), getApplicationContext());\n            try {\n                this.b = new WebView(this);\n                setContentView(this.b);\n                WebSettings settings = this.b.getSettings();\n                settings.setSupportMultipleWindows(false);\n                settings.setJavaScriptEnabled(true);\n                this.b.setVerticalScrollBarEnabled(true);\n                this.b.setHorizontalScrollBarEnabled(true);\n                this.b.setScrollBarStyle(33554432);\n                this.b.setWebViewClient(new WebViewClient() { // from class: com.applovin.sdk.AppLovinWebViewActivity.1\n                    @Override // android.webkit.WebViewClient\n                    public boolean shouldOverrideUrlLoading(WebView webView, String str) {\n                        Uri parse = Uri.parse(str);\n                        String scheme = parse.getScheme();\n                        String host = parse.getHost();\n                        String path = parse.getPath();\n                        r logger = appLovinSdk.getLogger();\n                        logger.b(\"AppLovinWebViewActivity\", \"Handling url load: \" + str);\n                        if (AppodealNetworks.APPLOVIN.equalsIgnoreCase(scheme) && \"com.applovin.sdk\".equalsIgnoreCase(host) && AppLovinWebViewActivity.this.c != null) {\n                            if (path.endsWith(\"webview_event\")) {\n                                Set<String> queryParameterNames = parse.getQueryParameterNames();\n                                String str2 = queryParameterNames.isEmpty() ? \"\" : (String) queryParameterNames.toArray()[0];\n                                if (!o.b(str2)) {\n                                    appLovinSdk.getLogger().e(\"AppLovinWebViewActivity\", \"Failed to parse WebView event parameter\");\n                                    return true;\n                                }\n                                String queryParameter = parse.getQueryParameter(str2);\n                                r logger2 = appLovinSdk.getLogger();\n                                logger2.b(\"AppLovinWebViewActivity\", \"Parsed WebView event parameter name: \" + str2 + \" and value: \" + queryParameter);\n                                AppLovinWebViewActivity.this.c.onReceivedEvent(queryParameter);\n                                return true;\n                            }\n                            return true;\n                        }\n                        return super.shouldOverrideUrlLoading(webView, str);\n                    }\n                });\n                if (getIntent().getBooleanExtra(INTENT_EXTRA_KEY_IMMERSIVE_MODE_ON, false)) {\n                    getWindow().getDecorView().setSystemUiVisibility(5894);\n                }\n                if (o.b(this.a)) {\n                    this.b.loadUrl(this.a);\n                    return;\n                }\n                return;\n            } catch (Throwable th) {\n                appLovinSdk.getLogger().b(\"AppLovinWebViewActivity\", \"Failed to initialize WebView.\", th);\n            }\n        }\n        finish();\n    }",
            "children": [
                "<com.applovin.impl.sdk.utils.o: boolean b(java.lang.String)>"
            ]
        },
        "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        a aVar = this.b;\n        if (aVar != null) {\n            aVar.j();\n        }\n        if (com.applovin.impl.sdk.utils.r.f(getApplicationContext())) {\n            super.onBackPressed();\n        }\n    }",
            "children": [
                "<com.applovin.impl.sdk.utils.r: boolean f(android.content.Context)>"
            ]
        },
        "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onConfigurationChanged(android.content.res.Configuration)>": {
            "code": "void  onConfigurationChanged(android.content.res.Configuration)  {\n        super.onConfigurationChanged(configuration);\n        a aVar = this.b;\n        if (aVar != null) {\n            aVar.a(configuration);\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        ActivityManager activityManager;\n        super.onCreate(bundle);\n        requestWindowFeature(1);\n        getWindow().setFlags(1024, 1024);\n        getWindow().addFlags(16777216);\n        getWindow().addFlags(128);\n        findViewById(16908290).setBackgroundColor(ViewCompat.MEASURED_STATE_MASK);\n        this.a = AppLovinSdk.getInstance(getIntent().getStringExtra(\"com.applovin.interstitial.sdk_key\"), new AppLovinSdkSettings(this), this).coreSdk;\n        if (parentInterstitialWrapper == null) {\n            Intent intent = new Intent(this, FullscreenAdService.class);\n            this.d = new com.applovin.impl.adview.activity.a(this, this.a);\n            bindService(intent, this.d, 1);\n            if (g.g()) {\n                try {\n                    WebView.setDataDirectorySuffix(String.valueOf(Process.myPid()));\n                    return;\n                } catch (Throwable unused) {\n                    return;\n                }\n            }\n            return;\n        }\n        int intValue = ((Integer) this.a.a(b.eI)).intValue();\n        if (intValue != -1 && (activityManager = (ActivityManager) getSystemService(\"activity\")) != null) {\n            ActivityManager.MemoryInfo memoryInfo = new ActivityManager.MemoryInfo();\n            activityManager.getMemoryInfo(memoryInfo);\n            if (memoryInfo.availMem < intValue) {\n                a(\"Not enough available memory\", null);\n                return;\n            }\n        }\n        present(parentInterstitialWrapper.b(), parentInterstitialWrapper.e(), parentInterstitialWrapper.d(), parentInterstitialWrapper.c());\n    }",
            "children": [
                "<android.webkit.WebView: void setDataDirectorySuffix(java.lang.String)>"
            ]
        },
        "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        parentInterstitialWrapper = null;\n        com.applovin.impl.adview.activity.a aVar = this.d;\n        if (aVar != null) {\n            try {\n                unbindService(aVar);\n            } catch (Throwable unused) {\n            }\n        }\n        a aVar2 = this.b;\n        if (aVar2 != null) {\n            aVar2.h();\n        }\n        super.onDestroy();\n    }",
            "children": [
                "<android.app.Activity: void <clinit>()>"
            ]
        },
        "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: boolean onKeyDown(int,android.view.KeyEvent)>": {
            "code": "boolean  onKeyDown(int,android.view.KeyEvent)  {\n        a aVar = this.b;\n        if (aVar != null) {\n            aVar.a(i, keyEvent);\n        }\n        return super.onKeyDown(i, keyEvent);\n    }",
            "children": []
        },
        "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onLowMemory()>": {
            "code": "void  onLowMemory()  {\n        a aVar = this.b;\n        if (aVar != null) {\n            aVar.i();\n        }\n        super.onLowMemory();\n    }",
            "children": []
        },
        "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onPause()>": {
            "code": "void  onPause()  {\n        super.onPause();\n        a aVar = this.b;\n        if (aVar != null) {\n            aVar.e();\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onResume()>": {
            "code": "void  onResume()  {\n        a aVar;\n        try {\n            super.onResume();\n            if (this.c.get() || (aVar = this.b) == null) {\n                return;\n            }\n            aVar.d();\n        } catch (IllegalArgumentException e) {\n            this.a.y().b(\"InterActivityV2\", \"Error was encountered in onResume().\", e);\n            dismiss();\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onStop()>": {
            "code": "void  onStop()  {\n        super.onStop();\n        a aVar = this.b;\n        if (aVar != null) {\n            aVar.g();\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.applovin.adview.AppLovinFullscreenActivity: void onWindowFocusChanged(boolean)>": {
            "code": "void  onWindowFocusChanged(boolean)  {\n        if (this.b != null) {\n            if (!this.c.getAndSet(false) || (this.b instanceof e)) {\n                this.b.c(z);\n            }\n            if (z) {\n                getWindow().getDecorView().setSystemUiVisibility(5894);\n            }\n        }\n        super.onWindowFocusChanged(z);\n    }",
            "children": []
        },
        "Entry-point: <com.applovin.impl.adview.r: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        if (isVastAd()) {\n            this.a.addAll(b().a(a.c.VIDEO, com.applovin.impl.a.h.a));\n            a(a.c.IMPRESSION);\n            a(a.c.VIDEO, Tracker.Events.CREATIVE_VIEW);\n        }\n    }",
            "children": [
                "<com.applovin.impl.a.h: void <clinit>()>"
            ]
        },
        "Entry-point: <com.applovin.impl.adview.r: void onPause()>": {
            "code": "void  onPause()  {\n        super.onPause();\n        a(this.postitialWasDisplayed ? a.c.COMPANION : a.c.VIDEO, Tracker.Events.CREATIVE_PAUSE);\n    }",
            "children": [
                "<com.applovin.impl.a.a$c: void <clinit>()>"
            ]
        },
        "Entry-point: <com.applovin.impl.adview.r: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n        a(this.postitialWasDisplayed ? a.c.COMPANION : a.c.VIDEO, Tracker.Events.CREATIVE_RESUME);\n    }",
            "children": [
                "<com.applovin.impl.a.a$c: void <clinit>()>"
            ]
        },
        "Entry-point: <com.applovin.impl.adview.n: void onBackPressed()>": {
            "code": "void  onBackPressed()  None",
            "children": []
        },
        "Entry-point: <com.applovin.impl.adview.n: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  None",
            "children": [
                "<android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>"
            ]
        },
        "Entry-point: <com.applovin.impl.adview.n: void onDestroy()>": {
            "code": "void  onDestroy()  None",
            "children": []
        },
        "Entry-point: <com.applovin.impl.adview.n: void onPause()>": {
            "code": "void  onPause()  None",
            "children": [
                "<java.lang.System: long currentTimeMillis()>"
            ]
        },
        "Entry-point: <com.applovin.impl.adview.n: void onResume()>": {
            "code": "void  onResume()  None",
            "children": [
                "<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>"
            ]
        },
        "Entry-point: <com.applovin.impl.adview.n: void onSaveInstanceState(android.os.Bundle)>": {
            "code": "void  onSaveInstanceState(android.os.Bundle)  None",
            "children": []
        },
        "Entry-point: <com.applovin.impl.adview.n: void onWindowFocusChanged(boolean)>": {
            "code": "void  onWindowFocusChanged(boolean)  None",
            "children": [
                "<com.applovin.impl.sdk.r: void f(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.applovin.impl.mediation.debugger.ui.a.a: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        setContentView(R.layout.mediation_debugger_ad_unit_detail_activity);\n        setTitle(this.c.a());\n        this.j = (ListView) findViewById(R.id.listView);\n        this.k = findViewById(R.id.ad_presenter_view);\n        this.l = (AdControlButton) findViewById(R.id.ad_control_button);\n        this.m = (TextView) findViewById(R.id.status_textview);\n        this.j.setAdapter((ListAdapter) this.c);\n        this.m.setText(this.a.G().a() ? \"Not Supported while Test Mode is enabled\" : \"Tap to load an ad\");\n        this.m.setTypeface(Typeface.DEFAULT_BOLD);\n        this.l.setOnClickListener(this);\n        ShapeDrawable shapeDrawable = new ShapeDrawable();\n        shapeDrawable.setPadding(0, 10, 0, 0);\n        shapeDrawable.getPaint().setColor(-1);\n        shapeDrawable.getPaint().setShadowLayer(10, 0.0f, -10, 855638016);\n        shapeDrawable.setShape(new RectShape());\n        LayerDrawable layerDrawable = new LayerDrawable(new Drawable[]{shapeDrawable});\n        layerDrawable.setLayerInset(0, 0, 10, 0, 0);\n        this.k.setBackground(layerDrawable);\n    }",
            "children": [
                "<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>"
            ]
        },
        "Entry-point: <com.applovin.impl.mediation.debugger.ui.a.a: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        super.onDestroy();\n        if (this.d != null) {\n            this.a.G().a(\"\", false);\n            this.a.G().a(false);\n        }\n        MaxAdView maxAdView = this.e;\n        if (maxAdView != null) {\n            maxAdView.destroy();\n        }\n        MaxInterstitialAd maxInterstitialAd = this.f;\n        if (maxInterstitialAd != null) {\n            maxInterstitialAd.destroy();\n        }\n        MaxRewardedAd maxRewardedAd = this.h;\n        if (maxRewardedAd != null) {\n            maxRewardedAd.destroy();\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.applovin.impl.mediation.debugger.ui.a.c: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        setTitle(\"Ad Units\");\n        setContentView(R.layout.list_view);\n        this.e = (ListView) findViewById(R.id.listView);\n        this.e.setAdapter((ListAdapter) this.c);\n    }",
            "children": []
        },
        "Entry-point: <com.applovin.impl.mediation.debugger.ui.b.a: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        setTitle(\"MAX Mediation Debugger\");\n        setContentView(R.layout.list_view);\n        this.c = (FrameLayout) findViewById(16908290);\n        this.d = (ListView) findViewById(R.id.listView);\n    }",
            "children": []
        },
        "Entry-point: <com.applovin.impl.mediation.debugger.ui.b.a: boolean onCreateOptionsMenu(android.view.Menu)>": {
            "code": "boolean  onCreateOptionsMenu(android.view.Menu)  {\n        getMenuInflater().inflate(R.menu.mediation_debugger_activity_menu, menu);\n        return true;\n    }",
            "children": []
        },
        "Entry-point: <com.applovin.impl.mediation.debugger.ui.b.a: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        super.onDestroy();\n        this.a.unregisterDataSetObserver(this.b);\n    }",
            "children": []
        },
        "Entry-point: <com.applovin.impl.mediation.debugger.ui.b.a: boolean onOptionsItemSelected(android.view.MenuItem)>": {
            "code": "boolean  onOptionsItemSelected(android.view.MenuItem)  {\n        if (R.id.action_share == menuItem.getItemId()) {\n            a();\n            return true;\n        }\n        return super.onOptionsItemSelected(menuItem);\n    }",
            "children": []
        },
        "Entry-point: <com.applovin.impl.mediation.debugger.ui.b.a: void onStart()>": {
            "code": "void  onStart()  {\n        super.onStart();\n        this.d.setAdapter((ListAdapter) this.a);\n        if (this.a.a()) {\n            return;\n        }\n        b();\n    }",
            "children": []
        },
        "Entry-point: <com.applovin.impl.mediation.debugger.ui.c.a: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        setContentView(R.layout.list_view);\n        this.b = (ListView) findViewById(R.id.listView);\n        this.b.setAdapter((ListAdapter) this.a);\n    }",
            "children": []
        },
        "Entry-point: <com.applovin.impl.mediation.debugger.ui.testmode.a: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        setContentView(R.layout.mediation_debugger_multi_ad_activity);\n        setTitle(this.a.h() + \" Test Ads\");\n        a();\n        b();\n        c();\n        d();\n        findViewById(R.id.rewarded_interstitial_control_view).setVisibility(8);\n        try {\n            setRequestedOrientation(7);\n        } catch (Throwable th) {\n            com.applovin.impl.sdk.r.c(\"AppLovinSdk\", \"Failed to set portrait orientation\", th);\n        }\n    }",
            "children": [
                "<java.lang.StringBuilder: void <init>()>"
            ]
        },
        "Entry-point: <com.applovin.impl.mediation.debugger.ui.testmode.a: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        super.onDestroy();\n        this.b.G().a(\"\", false);\n        MaxAdView maxAdView = this.c;\n        if (maxAdView != null) {\n            maxAdView.destroy();\n        }\n        MaxAdView maxAdView2 = this.d;\n        if (maxAdView2 != null) {\n            maxAdView2.destroy();\n        }\n        MaxInterstitialAd maxInterstitialAd = this.e;\n        if (maxInterstitialAd != null) {\n            maxInterstitialAd.destroy();\n        }\n        MaxRewardedAd maxRewardedAd = this.g;\n        if (maxRewardedAd != null) {\n            maxRewardedAd.destroy();\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.applovin.impl.mediation.debugger.ui.a: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        if (!r.e(this)) {\n            setTheme(R.style.com_applovin_mediation_MaxDebuggerActivity_Theme_Live);\n        }\n        super.onCreate(bundle);\n    }",
            "children": [
                "<com.applovin.impl.sdk.utils.r: boolean e(android.content.Context)>"
            ]
        },
        "Entry-point: <com.appodeal.ads.TestActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  None",
            "children": [
                "<com.appodeal.ads.Appodeal: void <clinit>()>"
            ]
        },
        "Entry-point: <com.appodeal.ads.TestActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  None",
            "children": [
                "<com.appodeal.ads.Appodeal: void <clinit>()>"
            ]
        },
        "Entry-point: <com.appodeal.ads.TestActivity: void onResume()>": {
            "code": "void  onResume()  None",
            "children": [
                "<com.appodeal.ads.Appodeal: void <clinit>()>"
            ]
        },
        "Entry-point: <com.appodeal.ads.TestActivity: void onSaveInstanceState(android.os.Bundle)>": {
            "code": "void  onSaveInstanceState(android.os.Bundle)  None",
            "children": []
        },
        "Entry-point: <com.appodeal.ads.VideoPlayerActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        b();\n    }",
            "children": []
        },
        "Entry-point: <com.appodeal.ads.VideoPlayerActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        getWindow().addFlags(128);\n        Intent intent = getIntent();\n        String stringExtra = intent.getStringExtra(\"com.appodeal.ads.fileUri\");\n        this.a = intent.getIntExtra(\"com.appodeal.ads.seekTo\", 0);\n        Log.log(\"VideoPlayerActivity\", \"Start\", String.format(\"position: %s\", Integer.valueOf(this.a)));\n        if (stringExtra == null) {\n            return;\n        }\n        this.c = au.d;\n        RelativeLayout relativeLayout = new RelativeLayout(this);\n        relativeLayout.setLayoutParams(new RelativeLayout.LayoutParams(-1, -1));\n        this.b = new VideoView(this);\n        RelativeLayout.LayoutParams layoutParams = new RelativeLayout.LayoutParams(-1, -1);\n        layoutParams.addRule(13);\n        this.b.setLayoutParams(layoutParams);\n        this.b.setOnCompletionListener(this);\n        this.b.setOnPreparedListener(this);\n        this.b.setVideoPath(stringExtra);\n        relativeLayout.addView(this.b);\n        CircleCountdownView circleCountdownView = new CircleCountdownView(this);\n        circleCountdownView.setColors(Assets.mainAssetsColor, Assets.backgroundColor);\n        int a2 = bt.a(this, 24.0f);\n        RelativeLayout.LayoutParams layoutParams2 = new RelativeLayout.LayoutParams(a2, a2);\n        layoutParams2.addRule(11, -1);\n        layoutParams2.addRule(10, -1);\n        int a3 = bt.a(this, 8.0f);\n        layoutParams2.setMargins(a3, a3, a3, a3);\n        circleCountdownView.setImage(Assets.getBitmapFromBase64(Assets.close));\n        circleCountdownView.setLayoutParams(layoutParams2);\n        circleCountdownView.setOnClickListener(new View.OnClickListener() { // from class: com.appodeal.ads.VideoPlayerActivity.1\n            @Override // android.view.View.OnClickListener\n            public void onClick(View view) {\n                VideoPlayerActivity.this.b();\n            }\n        });\n        relativeLayout.addView(circleCountdownView);\n        setContentView(relativeLayout);\n    }",
            "children": [
                "<com.explorestack.iab.utils.Assets: android.graphics.Bitmap getBitmapFromBase64(java.lang.String)>"
            ]
        },
        "Entry-point: <com.explorestack.iab.vast.activity.VastActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        VastView vastView = this.vastView;\n        if (vastView != null) {\n            vastView.handleBackPress();\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.explorestack.iab.vast.activity.VastActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        int preferredVideoOrientation;\n        getWindow().setBackgroundDrawable(new ColorDrawable(ViewCompat.MEASURED_STATE_MASK));\n        overridePendingTransition(0, 0);\n        super.onCreate(bundle);\n        this.vastRequest = (VastRequest) getIntent().getParcelableExtra(EXTRA_VAST_REQUEST);\n        if (bundle != null && bundle.getBoolean(SAVED_IS_FINISHED_PERFORMED)) {\n            finish();\n            return;\n        }\n        VastRequest vastRequest = this.vastRequest;\n        if (vastRequest == null) {\n            notifyError(null, 405);\n            handleFinish(null, false);\n            return;\n        }\n        if (bundle == null && (preferredVideoOrientation = vastRequest.getPreferredVideoOrientation()) != 0 && preferredVideoOrientation != getResources().getConfiguration().orientation) {\n            setRequestedOrientation(toActivityOrientation(preferredVideoOrientation));\n            try {\n                if ((getPackageManager().getActivityInfo(getComponentName(), 65536).configChanges & 128) == 0) {\n                    return;\n                }\n            } catch (PackageManager.NameNotFoundException unused) {\n            }\n        }\n        this.listener = getListener(this.vastRequest);\n        this.vastView = new VastView(this);\n        this.vastView.setId(1);\n        this.vastView.setListener(this.vastViewListener);\n        if (bundle == null || !bundle.getBoolean(SAVED_IS_LOAD_PERFORMED)) {\n            this.isLoadPerformed = true;\n            if (this.vastView.display(this.vastRequest)) {\n                Utils.applyFullscreenActivityFlags(this);\n                setContentView(this.vastView);\n                return;\n            }\n            return;\n        }\n        Utils.applyFullscreenActivityFlags(this);\n        setContentView(this.vastView);\n    }",
            "children": [
                "<com.explorestack.iab.utils.Utils: void applyFullscreenActivityFlags(android.app.Activity)>"
            ]
        },
        "Entry-point: <com.explorestack.iab.vast.activity.VastActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        super.onDestroy();\n        if (isChangingConfigurations() || this.vastRequest == null) {\n            return;\n        }\n        VastView vastView = this.vastView;\n        if (vastView != null) {\n            vastView.destroy();\n        }\n        removeListener(this.vastRequest);\n    }",
            "children": [
                "<com.explorestack.iab.vast.activity.VastActivity: void removeListener(com.explorestack.iab.vast.VastRequest)>"
            ]
        },
        "Entry-point: <com.explorestack.iab.vast.activity.VastActivity: void onSaveInstanceState(android.os.Bundle)>": {
            "code": "void  onSaveInstanceState(android.os.Bundle)  {\n        super.onSaveInstanceState(bundle);\n        bundle.putBoolean(SAVED_IS_LOAD_PERFORMED, this.isLoadPerformed);\n        bundle.putBoolean(SAVED_IS_FINISHED_PERFORMED, this.isFinishPerformed);\n    }",
            "children": []
        },
        "Entry-point: <com.explorestack.iab.mraid.MraidActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        if (this.canCloseOnBackPressed) {\n            MraidInterstitial mraidInterstitial = this.mraidInterstitial;\n            if (mraidInterstitial != null) {\n                mraidInterstitial.dispatchClose();\n                return;\n            }\n            finish();\n            overridePendingTransition(0, 0);\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.explorestack.iab.mraid.MraidActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        getWindow().setBackgroundDrawable(new ColorDrawable(ViewCompat.MEASURED_STATE_MASK));\n        overridePendingTransition(0, 0);\n        super.onCreate(bundle);\n        if (!getIntent().hasExtra(PARAM_INTERSTITIAL_ID)) {\n            MraidLog.e(\"Mraid display cache id not provided\");\n            finish();\n            return;\n        }\n        this.interstitialId = Integer.valueOf(getIntent().getIntExtra(PARAM_INTERSTITIAL_ID, 0));\n        this.mraidInterstitial = displayCache.get(this.interstitialId.intValue());\n        if (this.mraidInterstitial == null) {\n            MraidLog.e(\"Mraid interstitial not found in display cache, id=\" + this.interstitialId);\n            finish();\n            overridePendingTransition(0, 0);\n            return;\n        }\n        MraidType mraidType = (MraidType) getIntent().getSerializableExtra(PARAM_MRAID_TYPE);\n        if (mraidType == null) {\n            MraidLog.e(\"Mraid type not provided\");\n            finish();\n            overridePendingTransition(0, 0);\n            this.mraidInterstitial.notifyShowFailed();\n            return;\n        }\n        Utils.applyFullscreenActivityFlags(this);\n        int i = AnonymousClass1.$SwitchMap$com$explorestack$iab$mraid$MraidActivity$MraidType[mraidType.ordinal()];\n        if (i == 1) {\n            this.canCloseOnBackPressed = true;\n        } else if (i == 2) {\n            this.canCloseOnBackPressed = true;\n        } else if (i == 3) {\n            this.canCloseOnBackPressed = false;\n        }\n        this.mraidInterstitial.showInActivity(this, false);\n    }",
            "children": [
                "<com.explorestack.iab.utils.Utils: void applyFullscreenActivityFlags(android.app.Activity)>"
            ]
        },
        "Entry-point: <com.explorestack.iab.mraid.MraidActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        super.onDestroy();\n        if (this.mraidInterstitial == null || isChangingConfigurations()) {\n            return;\n        }\n        this.mraidInterstitial.handleClose();\n        this.mraidInterstitial.destroy();\n        removeFromDisplayCache(this.interstitialId);\n    }",
            "children": [
                "<com.explorestack.iab.mraid.MraidActivity: void removeFromDisplayCache(java.lang.Integer)>"
            ]
        },
        "Entry-point: <io.bidmachine.nativead.view.VideoPlayerActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        closeClicked();\n    }",
            "children": []
        },
        "Entry-point: <io.bidmachine.nativead.view.VideoPlayerActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        getWindow().addFlags(128);\n        Intent intent = getIntent();\n        String stringExtra = intent.getStringExtra(FILE_URI);\n        this.seekTo = intent.getIntExtra(SEEK_TO, 0);\n        Logger.log(String.format(\"VideoPlayerActivity started, position: %s\", Integer.valueOf(this.seekTo)));\n        if (stringExtra == null) {\n            return;\n        }\n        this.listener = MediaView.listener;\n        RelativeLayout relativeLayout = new RelativeLayout(this);\n        relativeLayout.setLayoutParams(new RelativeLayout.LayoutParams(-1, -1));\n        this.videoView = new VideoView(this);\n        RelativeLayout.LayoutParams layoutParams = new RelativeLayout.LayoutParams(-1, -1);\n        layoutParams.addRule(13);\n        this.videoView.setLayoutParams(layoutParams);\n        this.videoView.setOnCompletionListener(this);\n        this.videoView.setOnPreparedListener(this);\n        this.videoView.setVideoPath(stringExtra);\n        relativeLayout.addView(this.videoView);\n        int round = Math.round(Utils.getScreenDensity(this) * 24.0f);\n        int round2 = Math.round(Utils.getScreenDensity(this) * 8.0f);\n        CircleCountdownView circleCountdownView = new CircleCountdownView(this);\n        circleCountdownView.setColors(Assets.mainAssetsColor, Assets.backgroundColor);\n        RelativeLayout.LayoutParams layoutParams2 = new RelativeLayout.LayoutParams(round, round);\n        layoutParams2.addRule(11, -1);\n        layoutParams2.addRule(10, -1);\n        layoutParams2.setMargins(round2, round2, round2, round2);\n        circleCountdownView.setImage(Assets.getBitmapFromBase64(Assets.close));\n        circleCountdownView.setLayoutParams(layoutParams2);\n        circleCountdownView.setOnClickListener(new View.OnClickListener() { // from class: io.bidmachine.nativead.view.VideoPlayerActivity.1\n            @Override // android.view.View.OnClickListener\n            public void onClick(View view) {\n                VideoPlayerActivity.this.closeClicked();\n            }\n        });\n        relativeLayout.addView(circleCountdownView);\n        setContentView(relativeLayout);\n    }",
            "children": [
                "<com.explorestack.iab.utils.Assets: android.graphics.Bitmap getBitmapFromBase64(java.lang.String)>"
            ]
        },
        "Entry-point: <com.criteo.publisher.CriteoInterstitialActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        b();\n    }",
            "children": []
        },
        "Entry-point: <com.criteo.publisher.CriteoInterstitialActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        try {\n            super.onCreate(bundle);\n            c();\n        } catch (Throwable th) {\n            this.a.a(u.b(th));\n            finish();\n        }\n    }",
            "children": [
                "<com.criteo.publisher.u: com.criteo.publisher.logging.e b(java.lang.Throwable)>"
            ]
        },
        "Entry-point: <com.criteo.publisher.CriteoInterstitialActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        super.onDestroy();\n        this.d.removeAllViews();\n        this.b.setWebViewClient(null);\n        this.b.destroy();\n        this.b = null;\n    }",
            "children": []
        },
        "Entry-point: <com.explorestack.consent.activity.ConsentFormActivity: void finish()>": {
            "code": "void  finish()  {\n        b();\n        b(this);\n        super.finish();\n    }",
            "children": []
        },
        "Entry-point: <com.explorestack.consent.activity.ConsentFormActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n    }",
            "children": []
        },
        "Entry-point: <com.explorestack.consent.activity.ConsentFormActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        if (a == null) {\n            finish();\n            return;\n        }\n        a(this);\n        setContentView(a, new RelativeLayout.LayoutParams(-1, -1));\n        getWindow().setLayout(-1, -1);\n        a();\n    }",
            "children": [
                "<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>"
            ]
        },
        "Entry-point: <com.explorestack.consent.activity.ConsentFormActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        super.onDestroy();\n        b();\n        b(this);\n    }",
            "children": []
        },
        "Entry-point: <com.google.android.gms.ads.AdActivity: void onActivityResult(int,int,android.content.Intent)>": {
            "code": "void  onActivityResult(int,int,android.content.Intent)  {\n        try {\n            this.zzacn.onActivityResult(i, i2, intent);\n        } catch (Exception e) {\n            zzazk.zze(\"#007 Could not call remote method.\", e);\n        }\n        super.onActivityResult(i, i2, intent);\n    }",
            "children": [
                "<com.google.android.gms.internal.ads.zzazk: void zze(java.lang.String,java.lang.Throwable)>"
            ]
        },
        "Entry-point: <com.google.android.gms.ads.AdActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        boolean z = true;\n        try {\n            if (this.zzacn != null) {\n                z = this.zzacn.zzvw();\n            }\n        } catch (RemoteException e) {\n            zzazk.zze(\"#007 Could not call remote method.\", e);\n        }\n        if (z) {\n            super.onBackPressed();\n            try {\n                this.zzacn.onBackPressed();\n            } catch (RemoteException e2) {\n                zzazk.zze(\"#007 Could not call remote method.\", e2);\n            }\n        }\n    }",
            "children": [
                "<com.google.android.gms.internal.ads.zzazk: void zze(java.lang.String,java.lang.Throwable)>"
            ]
        },
        "Entry-point: <com.google.android.gms.ads.AdActivity: void onConfigurationChanged(android.content.res.Configuration)>": {
            "code": "void  onConfigurationChanged(android.content.res.Configuration)  {\n        super.onConfigurationChanged(configuration);\n        try {\n            this.zzacn.zzad(ObjectWrapper.wrap(configuration));\n        } catch (RemoteException e) {\n            zzazk.zze(\"#007 Could not call remote method.\", e);\n        }\n    }",
            "children": [
                "<com.google.android.gms.internal.ads.zzazk: void zze(java.lang.String,java.lang.Throwable)>"
            ]
        },
        "Entry-point: <com.google.android.gms.ads.AdActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        this.zzacn = zzwr.zzqo().zzb(this);\n        zzaro zzaroVar = this.zzacn;\n        if (zzaroVar == null) {\n            zzazk.zze(\"#007 Could not call remote method.\", null);\n            finish();\n            return;\n        }\n        try {\n            zzaroVar.onCreate(bundle);\n        } catch (RemoteException e) {\n            zzazk.zze(\"#007 Could not call remote method.\", e);\n            finish();\n        }\n    }",
            "children": [
                "<com.google.android.gms.internal.ads.zzazk: void zze(java.lang.String,java.lang.Throwable)>"
            ]
        },
        "Entry-point: <com.google.android.gms.ads.AdActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        try {\n            if (this.zzacn != null) {\n                this.zzacn.onDestroy();\n            }\n        } catch (RemoteException e) {\n            zzazk.zze(\"#007 Could not call remote method.\", e);\n        }\n        super.onDestroy();\n    }",
            "children": [
                "<com.google.android.gms.internal.ads.zzazk: void zze(java.lang.String,java.lang.Throwable)>"
            ]
        },
        "Entry-point: <com.google.android.gms.ads.AdActivity: void onPause()>": {
            "code": "void  onPause()  {\n        try {\n            if (this.zzacn != null) {\n                this.zzacn.onPause();\n            }\n        } catch (RemoteException e) {\n            zzazk.zze(\"#007 Could not call remote method.\", e);\n            finish();\n        }\n        super.onPause();\n    }",
            "children": [
                "<com.google.android.gms.internal.ads.zzazk: void zze(java.lang.String,java.lang.Throwable)>"
            ]
        },
        "Entry-point: <com.google.android.gms.ads.AdActivity: void onRestart()>": {
            "code": "void  onRestart()  {\n        super.onRestart();\n        try {\n            if (this.zzacn != null) {\n                this.zzacn.onRestart();\n            }\n        } catch (RemoteException e) {\n            zzazk.zze(\"#007 Could not call remote method.\", e);\n            finish();\n        }\n    }",
            "children": [
                "<com.google.android.gms.internal.ads.zzazk: void zze(java.lang.String,java.lang.Throwable)>"
            ]
        },
        "Entry-point: <com.google.android.gms.ads.AdActivity: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n        try {\n            if (this.zzacn != null) {\n                this.zzacn.onResume();\n            }\n        } catch (RemoteException e) {\n            zzazk.zze(\"#007 Could not call remote method.\", e);\n            finish();\n        }\n    }",
            "children": [
                "<com.google.android.gms.internal.ads.zzazk: void zze(java.lang.String,java.lang.Throwable)>"
            ]
        },
        "Entry-point: <com.google.android.gms.ads.AdActivity: void onSaveInstanceState(android.os.Bundle)>": {
            "code": "void  onSaveInstanceState(android.os.Bundle)  {\n        try {\n            if (this.zzacn != null) {\n                this.zzacn.onSaveInstanceState(bundle);\n            }\n        } catch (RemoteException e) {\n            zzazk.zze(\"#007 Could not call remote method.\", e);\n            finish();\n        }\n        super.onSaveInstanceState(bundle);\n    }",
            "children": [
                "<com.google.android.gms.internal.ads.zzazk: void zze(java.lang.String,java.lang.Throwable)>"
            ]
        },
        "Entry-point: <com.google.android.gms.ads.AdActivity: void onStart()>": {
            "code": "void  onStart()  {\n        super.onStart();\n        try {\n            if (this.zzacn != null) {\n                this.zzacn.onStart();\n            }\n        } catch (RemoteException e) {\n            zzazk.zze(\"#007 Could not call remote method.\", e);\n            finish();\n        }\n    }",
            "children": [
                "<com.google.android.gms.internal.ads.zzazk: void zze(java.lang.String,java.lang.Throwable)>"
            ]
        },
        "Entry-point: <com.google.android.gms.ads.AdActivity: void onStop()>": {
            "code": "void  onStop()  {\n        try {\n            if (this.zzacn != null) {\n                this.zzacn.onStop();\n            }\n        } catch (RemoteException e) {\n            zzazk.zze(\"#007 Could not call remote method.\", e);\n            finish();\n        }\n        super.onStop();\n    }",
            "children": [
                "<com.google.android.gms.internal.ads.zzazk: void zze(java.lang.String,java.lang.Throwable)>"
            ]
        },
        "Entry-point: <com.google.android.gms.ads.AdActivity: void onUserLeaveHint()>": {
            "code": "void  onUserLeaveHint()  {\n        super.onUserLeaveHint();\n        try {\n            this.zzacn.onUserLeaveHint();\n        } catch (RemoteException e) {\n            zzazk.zze(\"#007 Could not call remote method.\", e);\n        }\n    }",
            "children": [
                "<com.google.android.gms.internal.ads.zzazk: void zze(java.lang.String,java.lang.Throwable)>"
            ]
        },
        "Entry-point: <com.google.android.gms.ads.AdActivity: void setContentView(int)>": {
            "code": "void  setContentView(int)  {\n        super.setContentView(i);\n        zzdp();\n    }",
            "children": []
        },
        "Entry-point: <com.google.android.gms.ads.AdActivity: void setContentView(android.view.View)>": {
            "code": "void  setContentView(android.view.View)  {\n        super.setContentView(i);\n        zzdp();\n    }",
            "children": []
        },
        "Entry-point: <com.google.android.gms.ads.AdActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>": {
            "code": "void  setContentView(android.view.View,android.view.ViewGroup$LayoutParams)  {\n        super.setContentView(i);\n        zzdp();\n    }",
            "children": []
        },
        "Entry-point: <com.google.android.gms.common.api.GoogleApiActivity: void onActivityResult(int,int,android.content.Intent)>": {
            "code": "void  onActivityResult(int,int,android.content.Intent)  {\n        super.onActivityResult(i, i2, intent);\n        if (i == 1) {\n            boolean booleanExtra = getIntent().getBooleanExtra(\"notify_manager\", true);\n            this.zabp = 0;\n            setResult(i2, intent);\n            if (booleanExtra) {\n                GoogleApiManager zab = GoogleApiManager.zab(this);\n                if (i2 == -1) {\n                    zab.zao();\n                } else if (i2 == 0) {\n                    zab.zaa(new ConnectionResult(13, null), getIntent().getIntExtra(\"failing_client_id\", -1));\n                }\n            }\n        } else if (i == 2) {\n            this.zabp = 0;\n            setResult(i2, intent);\n        }\n        finish();\n    }",
            "children": [
                "<com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.api.internal.GoogleApiManager zab(android.content.Context)>"
            ]
        },
        "Entry-point: <com.google.android.gms.common.api.GoogleApiActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        if (bundle != null) {\n            this.zabp = bundle.getInt(\"resolution\");\n        }\n        if (this.zabp != 1) {\n            Bundle extras = getIntent().getExtras();\n            if (extras == null) {\n                Log.e(\"GoogleApiActivity\", \"Activity started without extras\");\n                finish();\n                return;\n            }\n            PendingIntent pendingIntent = (PendingIntent) extras.get(\"pending_intent\");\n            Integer num = (Integer) extras.get(\"error_code\");\n            if (pendingIntent == null && num == null) {\n                Log.e(\"GoogleApiActivity\", \"Activity started without resolution\");\n                finish();\n            } else if (pendingIntent != null) {\n                try {\n                    startIntentSenderForResult(pendingIntent.getIntentSender(), 1, null, 0, 0, 0);\n                    this.zabp = 1;\n                } catch (IntentSender.SendIntentException e) {\n                    Log.e(\"GoogleApiActivity\", \"Failed to launch pendingIntent\", e);\n                    finish();\n                }\n            } else {\n                GoogleApiAvailability.getInstance().showErrorDialogFragment(this, num.intValue(), 2, this);\n                this.zabp = 1;\n            }\n        }\n    }",
            "children": [
                "<com.google.android.gms.common.GoogleApiAvailability: com.google.android.gms.common.GoogleApiAvailability getInstance()>"
            ]
        },
        "Entry-point: <com.google.android.gms.common.api.GoogleApiActivity: void onSaveInstanceState(android.os.Bundle)>": {
            "code": "void  onSaveInstanceState(android.os.Bundle)  {\n        bundle.putInt(\"resolution\", this.zabp);\n        super.onSaveInstanceState(bundle);\n    }",
            "children": []
        },
        "Entry-point: <com.ironsource.sdk.controller.InterstitialActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        Logger.i(TAG, \"onCreate\");\n    }",
            "children": [
                "<com.ironsource.sdk.utils.Logger: void i(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.ironsource.sdk.controller.InterstitialActivity: void onPause()>": {
            "code": "void  onPause()  {\n        super.onPause();\n        Logger.i(TAG, \"onPause\");\n    }",
            "children": [
                "<com.ironsource.sdk.utils.Logger: void i(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.ironsource.sdk.controller.InterstitialActivity: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n        Logger.i(TAG, \"onResume\");\n    }",
            "children": [
                "<com.ironsource.sdk.utils.Logger: void i(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        Logger.i(TAG, \"onBackPressed\");\n        if (BackButtonHandler.getInstance().handleBackButton(this)) {\n            return;\n        }\n        super.onBackPressed();\n    }",
            "children": [
                "<com.ironsource.sdk.handlers.BackButtonHandler: com.ironsource.sdk.handlers.BackButtonHandler getInstance()>"
            ]
        },
        "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        try {\n            Logger.i(TAG, \"onCreate\");\n            hideActivityTitle();\n            hideActivtiyStatusBar();\n            this.mWebViewController = (WebController) IronSourceAdsPublisherAgent.getInstance(this).getControllerManager().getController();\n            this.mWebViewController.getLayout().setId(1);\n            this.mWebViewController.setOnWebViewControllerChangeListener(this);\n            this.mWebViewController.setVideoEventsListener(this);\n            Intent intent = getIntent();\n            this.mProductType = intent.getStringExtra(Constants.ParametersKeys.PRODUCT_TYPE);\n            this.mIsImmersive = intent.getBooleanExtra(Constants.ParametersKeys.IMMERSIVE, false);\n            this.AD_WEB_VIEW_ID = intent.getStringExtra(Constants.ParametersKeys.AD_VIEW_ID);\n            this.mControllerClearedFromOnPause = false;\n            if (this.mIsImmersive) {\n                getWindow().getDecorView().setOnSystemUiVisibilityChangeListener(new View.OnSystemUiVisibilityChangeListener() { // from class: com.ironsource.sdk.controller.ControllerActivity.2\n                    @Override // android.view.View.OnSystemUiVisibilityChangeListener\n                    public void onSystemUiVisibilityChange(int i) {\n                        if ((i & InputDeviceCompat.SOURCE_TOUCHSCREEN) == 0) {\n                            ControllerActivity.this.mUiThreadHandler.removeCallbacks(ControllerActivity.this.decorViewSettings);\n                            ControllerActivity.this.mUiThreadHandler.postDelayed(ControllerActivity.this.decorViewSettings, 500L);\n                        }\n                    }\n                });\n                runOnUiThread(this.decorViewSettings);\n            }\n            if (!TextUtils.isEmpty(this.mProductType) && ISNEnums.ProductType.OfferWall.toString().equalsIgnoreCase(this.mProductType)) {\n                if (bundle != null) {\n                    AdUnitsState adUnitsState = (AdUnitsState) bundle.getParcelable(\"state\");\n                    if (adUnitsState != null) {\n                        this.mState = adUnitsState;\n                        this.mWebViewController.restoreState(adUnitsState);\n                    }\n                    finish();\n                } else {\n                    this.mState = this.mWebViewController.getSavedState();\n                }\n            }\n            this.mContainer = new RelativeLayout(this);\n            setContentView(this.mContainer, this.MATCH_PARENT_LAYOUT_PARAMS);\n            this.mWebViewFrameContainer = createWebViewFrameContainer(this.AD_WEB_VIEW_ID);\n            if (this.mContainer.findViewById(1) == null && this.mWebViewFrameContainer.getParent() != null) {\n                this.calledFromOnCreate = true;\n                finish();\n            }\n            initOrientationState();\n        } catch (Exception e) {\n            e.printStackTrace();\n            finish();\n        }\n    }",
            "children": [
                "<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>"
            ]
        },
        "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        super.onDestroy();\n        Logger.i(TAG, \"onDestroy\");\n        if (this.calledFromOnCreate) {\n            removeWebViewContainerView(true);\n        }\n        if (this.mControllerClearedFromOnPause) {\n            return;\n        }\n        Logger.i(TAG, \"onDestroy | destroyedFromBackground\");\n        clearWebviewController();\n    }",
            "children": [
                "<com.ironsource.sdk.utils.Logger: void i(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: boolean onKeyDown(int,android.view.KeyEvent)>": {
            "code": "boolean  onKeyDown(int,android.view.KeyEvent)  {\n        if (i == 4 && this.mWebViewController.inCustomView()) {\n            this.mWebViewController.hideCustomView();\n            return true;\n        }\n        if (this.mIsImmersive && (i == 25 || i == 24)) {\n            this.mUiThreadHandler.removeCallbacks(this.decorViewSettings);\n            this.mUiThreadHandler.postDelayed(this.decorViewSettings, 500L);\n        }\n        return super.onKeyDown(i, keyEvent);\n    }",
            "children": []
        },
        "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void onPause()>": {
            "code": "void  onPause()  {\n        super.onPause();\n        Logger.i(TAG, \"onPause\");\n        boolean isFinishing = isFinishing();\n        ((AudioManager) getSystemService(MimeTypes.BASE_TYPE_AUDIO)).abandonAudioFocus(null);\n        WebController webController = this.mWebViewController;\n        if (webController != null) {\n            webController.unregisterConnectionReceiver(this);\n            this.mWebViewController.pause();\n            this.mWebViewController.viewableChange(false, Constants.ParametersKeys.MAIN);\n        }\n        removeWebViewContainerView(isFinishing);\n        if (isFinishing) {\n            this.mControllerClearedFromOnPause = true;\n            Logger.i(TAG, \"onPause | isFinishing\");\n            clearWebviewController();\n        }\n    }",
            "children": [
                "<com.ironsource.sdk.utils.Logger: void i(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n        Logger.i(TAG, \"onResume\");\n        this.mContainer.addView(this.mWebViewFrameContainer, this.MATCH_PARENT_LAYOUT_PARAMS);\n        WebController webController = this.mWebViewController;\n        if (webController != null) {\n            webController.registerConnectionReceiver(this);\n            this.mWebViewController.resume();\n            this.mWebViewController.viewableChange(true, Constants.ParametersKeys.MAIN);\n        }\n        ((AudioManager) getSystemService(MimeTypes.BASE_TYPE_AUDIO)).requestAudioFocus(null, 3, 2);\n    }",
            "children": [
                "<com.ironsource.sdk.utils.Logger: void i(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void onSaveInstanceState(android.os.Bundle)>": {
            "code": "void  onSaveInstanceState(android.os.Bundle)  {\n        super.onSaveInstanceState(bundle);\n        if (TextUtils.isEmpty(this.mProductType) || !ISNEnums.ProductType.OfferWall.toString().equalsIgnoreCase(this.mProductType)) {\n            return;\n        }\n        this.mState.setShouldRestore(true);\n        bundle.putParcelable(\"state\", this.mState);\n    }",
            "children": [
                "<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>"
            ]
        },
        "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void onUserLeaveHint()>": {
            "code": "void  onUserLeaveHint()  {\n        super.onUserLeaveHint();\n        Logger.i(TAG, \"onUserLeaveHint\");\n    }",
            "children": [
                "<com.ironsource.sdk.utils.Logger: void i(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void onWindowFocusChanged(boolean)>": {
            "code": "void  onWindowFocusChanged(boolean)  {\n        super.onWindowFocusChanged(z);\n        if (this.mIsImmersive && z) {\n            runOnUiThread(this.decorViewSettings);\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.ironsource.sdk.controller.ControllerActivity: void setRequestedOrientation(int)>": {
            "code": "void  setRequestedOrientation(int)  {\n        if (this.currentRequestedRotation != i) {\n            String str = TAG;\n            Logger.i(str, \"Rotation: Req = \" + i + \" Curr = \" + this.currentRequestedRotation);\n            this.currentRequestedRotation = i;\n            super.setRequestedOrientation(i);\n        }\n    }",
            "children": [
                "<com.ironsource.sdk.utils.Logger: void i(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: void finish()>": {
            "code": "void  finish()  {\n        WebController webController;\n        if (this.isSecondaryWebview && (webController = this.mWebViewController) != null) {\n            webController.engageEnd(Constants.ParametersKeys.SECONDARY_CLOSE);\n        }\n        super.finish();\n    }",
            "children": []
        },
        "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        if (this.webView.canGoBack()) {\n            this.webView.goBack();\n        } else {\n            super.onBackPressed();\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        Logger.i(TAG, \"onCreate()\");\n        try {\n            this.mWebViewController = (WebController) IronSourceAdsPublisherAgent.getInstance(this).getControllerManager().getController();\n            hideActivityTitle();\n            hideActivtiyStatusBar();\n            Bundle extras = getIntent().getExtras();\n            this.mUrl = extras.getString(WebController.EXTERNAL_URL);\n            this.isSecondaryWebview = extras.getBoolean(WebController.SECONDARY_WEB_VIEW);\n            this.mIsImmersive = getIntent().getBooleanExtra(Constants.ParametersKeys.IMMERSIVE, false);\n            if (this.mIsImmersive) {\n                getWindow().getDecorView().setOnSystemUiVisibilityChangeListener(new View.OnSystemUiVisibilityChangeListener() { // from class: com.ironsource.sdk.controller.OpenUrlActivity.1\n                    @Override // android.view.View.OnSystemUiVisibilityChangeListener\n                    public void onSystemUiVisibilityChange(int i) {\n                        if ((i & InputDeviceCompat.SOURCE_TOUCHSCREEN) == 0) {\n                            OpenUrlActivity.this.mUiThreadHandler.removeCallbacks(OpenUrlActivity.this.decorViewSettings);\n                            OpenUrlActivity.this.mUiThreadHandler.postDelayed(OpenUrlActivity.this.decorViewSettings, 500L);\n                        }\n                    }\n                });\n                runOnUiThread(this.decorViewSettings);\n            }\n            this.mainLayout = new RelativeLayout(this);\n            setContentView(this.mainLayout, new ViewGroup.LayoutParams(-1, -1));\n        } catch (Exception e) {\n            e.printStackTrace();\n            finish();\n        }\n    }",
            "children": [
                "<com.ironsource.sdk.agent.IronSourceAdsPublisherAgent: com.ironsource.sdk.agent.IronSourceAdsPublisherAgent getInstance(android.content.Context)>"
            ]
        },
        "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        super.onDestroy();\n        destroyWebView();\n    }",
            "children": []
        },
        "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: boolean onKeyDown(int,android.view.KeyEvent)>": {
            "code": "boolean  onKeyDown(int,android.view.KeyEvent)  {\n        if (this.mIsImmersive && (i == 25 || i == 24)) {\n            this.mUiThreadHandler.postDelayed(this.decorViewSettings, 500L);\n        }\n        return super.onKeyDown(i, keyEvent);\n    }",
            "children": []
        },
        "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: void onPause()>": {
            "code": "void  onPause()  {\n        super.onPause();\n        removeWebViewFromLayout();\n    }",
            "children": []
        },
        "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n        createWebView();\n    }",
            "children": []
        },
        "Entry-point: <com.ironsource.sdk.controller.OpenUrlActivity: void onWindowFocusChanged(boolean)>": {
            "code": "void  onWindowFocusChanged(boolean)  {\n        super.onWindowFocusChanged(z);\n        if (this.mIsImmersive && z) {\n            runOnUiThread(this.decorViewSettings);\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.my.target.common.MyTargetActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        ActivityEngine activityEngine2 = this.engine;\n        if (activityEngine2 == null || activityEngine2.onActivityBackPressed()) {\n            super.onBackPressed();\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.my.target.common.MyTargetActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        Intent intent = getIntent();\n        this.engine = activityEngine;\n        activityEngine = null;\n        if (this.engine == null || intent == null) {\n            finish();\n            return;\n        }\n        this.rootLayout = new FrameLayout(this);\n        this.engine.onActivityCreate(this, intent, this.rootLayout);\n        setContentView(this.rootLayout);\n    }",
            "children": [
                "<android.view.View: void <clinit>()>"
            ]
        },
        "Entry-point: <com.my.target.common.MyTargetActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        super.onDestroy();\n        ActivityEngine activityEngine2 = this.engine;\n        if (activityEngine2 != null) {\n            activityEngine2.onActivityDestroy();\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.my.target.common.MyTargetActivity: boolean onOptionsItemSelected(android.view.MenuItem)>": {
            "code": "boolean  onOptionsItemSelected(android.view.MenuItem)  {\n        ActivityEngine activityEngine2 = this.engine;\n        if (activityEngine2 == null || !activityEngine2.onActivityOptionsItemSelected(menuItem)) {\n            return super.onOptionsItemSelected(menuItem);\n        }\n        return true;\n    }",
            "children": []
        },
        "Entry-point: <com.my.target.common.MyTargetActivity: void onPause()>": {
            "code": "void  onPause()  {\n        super.onPause();\n        ActivityEngine activityEngine2 = this.engine;\n        if (activityEngine2 != null) {\n            activityEngine2.onActivityPause();\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.my.target.common.MyTargetActivity: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n        ActivityEngine activityEngine2 = this.engine;\n        if (activityEngine2 != null) {\n            activityEngine2.onActivityResume();\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.my.target.common.MyTargetActivity: void onStart()>": {
            "code": "void  onStart()  {\n        super.onStart();\n        ActivityEngine activityEngine2 = this.engine;\n        if (activityEngine2 != null) {\n            activityEngine2.onActivityStart();\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.my.target.common.MyTargetActivity: void onStop()>": {
            "code": "void  onStop()  {\n        super.onStop();\n        ActivityEngine activityEngine2 = this.engine;\n        if (activityEngine2 != null) {\n            activityEngine2.onActivityStop();\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.ogury.analytics.activity.SBActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        requestWindowFeature(1);\n        getWindow().setFlags(1024, 1024);\n        super.onCreate(bundle);\n        this.IIIIIIIIIIII = new Handler();\n        LinearLayout linearLayout = new LinearLayout(this);\n        linearLayout.setLayoutParams(new LinearLayout.LayoutParams(-1, -1));\n        linearLayout.setBackgroundColor(0);\n        linearLayout.setClickable(true);\n        linearLayout.setOnClickListener(new com.ogury.analytics.IIIIIIIIIIII(this));\n        setContentView(linearLayout);\n    }",
            "children": [
                "<com.ogury.analytics.IIIIIIIIIIII: void <init>(com.ogury.analytics.activity.SBActivity)>"
            ]
        },
        "Entry-point: <com.ogury.analytics.activity.SBActivity: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n        try {\n            this.IIIIIIIIIIII.postDelayed(new IIIIIIIIIIII(), 100L);\n        } catch (Exception unused) {\n        }\n    }",
            "children": [
                "<com.ogury.analytics.activity.SBActivity$IIIIIIIIIIII: void run()>"
            ]
        },
        "Entry-point: <com.ogury.analytics.activity.SBActivity: void onStart()>": {
            "code": "void  onStart()  {\n        super.onStart();\n    }",
            "children": []
        },
        "Entry-point: <com.ogury.cm.ConsentActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n    }",
            "children": []
        },
        "Entry-point: <com.ogury.cm.ConsentActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        if (bundle != null) {\n            finish();\n            return;\n        }\n        aaacb aaacbVar = aaacb.a;\n        aaacb.a(\"DISPLAYING\");\n        aaaac aaaacVar = aaaac.a;\n        if (aaaac.c() == null) {\n            aaaac aaaacVar2 = aaaac.a;\n            aacac a2 = aaaac.a();\n            if (a2 != null) {\n                a2.a(new OguryError(1003, \"Cached webview has been destroyed\"));\n            }\n            aacba aacbaVar = aacba.a;\n            aacba.b(\"Cached webview has been destroyed\");\n            finish();\n            return;\n        }\n        ConsentActivity consentActivity = this;\n        FrameLayout frameLayout = new FrameLayout(consentActivity, null);\n        frameLayout.setLayoutParams(this.b);\n        aaaac aaaacVar3 = aaaac.a;\n        com.ogury.cm.aaaaa b = aaaac.b();\n        if (b != null) {\n            b.a(consentActivity);\n        }\n        aaaac aaaacVar4 = aaaac.a;\n        WebView c = aaaac.c();\n        if (Build.VERSION.SDK_INT < 16 && c != null) {\n            c.setLayerType(1, null);\n        }\n        aaaac aaaacVar5 = aaaac.a;\n        frameLayout.addView(aaaac.c(), this.b);\n        aaaac aaaacVar6 = aaaac.a;\n        aaaac.a((WebView) null);\n        setContentView(frameLayout);\n    }",
            "children": [
                "<com.ogury.cm.internal.aacba: void b(java.lang.String)>"
            ]
        },
        "Entry-point: <com.ogury.cm.ConsentActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        aaaac aaaacVar = aaaac.a;\n        aaaac.a((WebView) null);\n        aaaac aaaacVar2 = aaaac.a;\n        aaaac.a((com.ogury.cm.aaaaa) null);\n        super.onDestroy();\n    }",
            "children": [
                "<com.ogury.cm.aaaac: void a(com.ogury.cm.aaaaa)>"
            ]
        },
        "Entry-point: <io.presage.mraid.browser.ShortcutActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        Bundle extras;\n        String string;\n        Bundle extras2;\n        super.onCreate(bundle);\n        ShortcutActivity shortcutActivity = this;\n        FrameLayout frameLayout = new FrameLayout(shortcutActivity);\n        Intent intent = getIntent();\n        String str = \"\";\n        String str2 = (intent == null || (extras2 = intent.getExtras()) == null || (str2 = extras2.getString(\"args\", \"\")) == null) ? \"\" : \"\";\n        Intent intent2 = getIntent();\n        if (intent2 != null && (extras = intent2.getExtras()) != null && (string = extras.getString(\"identifier\", \"\")) != null) {\n            str = string;\n        }\n        Context applicationContext = getApplicationContext();\n        mq.a((Object) applicationContext, \"this.applicationContext\");\n        hb a2 = hb.a.a(new he(shortcutActivity), this, new Cif(applicationContext, new hd(this), new b()));\n        this.c = a2;\n        if (!a2.a(str2, str, frameLayout)) {\n            Toast.makeText(shortcutActivity, \"Invalid shortcut\", 0).show();\n            finish();\n            return;\n        }\n        setContentView(frameLayout);\n    }",
            "children": [
                "<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>"
            ]
        },
        "Entry-point: <io.presage.mraid.browser.ShortcutActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        super.onDestroy();\n        hb hbVar = this.c;\n        if (hbVar != null) {\n            hbVar.a();\n        }\n    }",
            "children": []
        },
        "Entry-point: <io.presage.interstitial.ui.InterstitialActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        ae aeVar = this.b;\n        if (aeVar != null ? aeVar.n() : true) {\n            super.onBackPressed();\n        }\n    }",
            "children": []
        },
        "Entry-point: <io.presage.interstitial.ui.InterstitialActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        if (a(bundle)) {\n            finish();\n            return;\n        }\n        c();\n        try {\n            List<dn> b = b();\n            dn a2 = a();\n            if (a2 == null) {\n                throw new IllegalStateException(\"Ad not sent to interstitial activity\");\n            }\n            this.d = dx.a(a2);\n            Intent intent = getIntent();\n            mq.a((Object) intent, \"intent\");\n            gg ggVar = new gg(this, intent, a2, b);\n            g a3 = ggVar.a();\n            a3.setDisplayedInFullScreen(true);\n            this.b = ggVar.b();\n            setContentView(a3);\n        } catch (Throwable th) {\n            cp.a(th);\n            finish();\n        }\n    }",
            "children": [
                "<com.ogury.ed.internal.cp: void a(java.lang.Throwable)>"
            ]
        },
        "Entry-point: <io.presage.interstitial.ui.InterstitialActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        super.onDestroy();\n        ae aeVar = this.b;\n        if (aeVar == null) {\n            d();\n        } else if (aeVar != null) {\n            aeVar.m();\n        }\n    }",
            "children": []
        },
        "Entry-point: <io.presage.interstitial.ui.InterstitialActivity: void onPause()>": {
            "code": "void  onPause()  {\n        super.onPause();\n        if (this.d) {\n            n nVar = n.a;\n            n.b(false);\n        }\n        overridePendingTransition(0, 0);\n    }",
            "children": [
                "<com.ogury.ed.internal.n: void b(boolean)>"
            ]
        },
        "Entry-point: <io.presage.interstitial.ui.InterstitialActivity: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n        if (this.d) {\n            n nVar = n.a;\n            n.b(true);\n        }\n    }",
            "children": [
                "<com.ogury.ed.internal.n: void b(boolean)>"
            ]
        },
        "Entry-point: <io.presage.interstitial.ui.InterstitialActivity: void onStop()>": {
            "code": "void  onStop()  {\n        super.onStop();\n        ae aeVar = this.b;\n        if (aeVar != null) {\n            aeVar.l();\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.smaato.sdk.core.browser.SmaatoSdkBrowserActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        AndroidsInjector.inject(this);\n        if (this.browserPresenter == null) {\n            Log.e(LOG_TAG, \"SmaatoSdk is not initialized.\");\n            finish();\n            return;\n        }\n        setContentView(R.layout.smaato_sdk_core_activity_internal_browser);\n        this.webView = (WebView) findViewById(R.id.webView);\n        this.progressBar = (ProgressBar) findViewById(R.id.progressBar);\n        findViewById(R.id.btnClose).setOnClickListener(new DoubleClickPreventionListener() { // from class: com.smaato.sdk.core.browser.SmaatoSdkBrowserActivity.1\n            @Override // com.smaato.sdk.core.ui.DoubleClickPreventionListener\n            public void processClick() {\n                SmaatoSdkBrowserActivity.this.finish();\n            }\n        });\n        findViewById(R.id.btnRefresh).setOnClickListener(new DoubleClickPreventionListener() { // from class: com.smaato.sdk.core.browser.SmaatoSdkBrowserActivity.2\n            @Override // com.smaato.sdk.core.ui.DoubleClickPreventionListener\n            public void processClick() {\n                Objects.onNotNull(SmaatoSdkBrowserActivity.this.browserPresenter, new Consumer() { // from class: com.smaato.sdk.core.browser.-$$Lambda$OycmKNItiN79aT-Zc0jQ-Av7_zk\n                    @Override // com.smaato.sdk.core.util.fi.Consumer\n                    public final void accept(Object obj) {\n                        ((BrowserPresenter) obj).onReloadClicked();\n                    }\n                });\n            }\n        });\n        this.btnNavigationBackward = findViewById(R.id.btnBackward);\n        this.btnNavigationBackward.setOnClickListener(new DoubleClickPreventionListener() { // from class: com.smaato.sdk.core.browser.SmaatoSdkBrowserActivity.3\n            @Override // com.smaato.sdk.core.ui.DoubleClickPreventionListener\n            public void processClick() {\n                Objects.onNotNull(SmaatoSdkBrowserActivity.this.browserPresenter, new Consumer() { // from class: com.smaato.sdk.core.browser.-$$Lambda$zg6nko2q9HAOFDuGvnWKuuxwxIc\n                    @Override // com.smaato.sdk.core.util.fi.Consumer\n                    public final void accept(Object obj) {\n                        ((BrowserPresenter) obj).onPageNavigationBackClicked();\n                    }\n                });\n            }\n        });\n        this.btnNavigationForward = findViewById(R.id.btnForward);\n        this.btnNavigationForward.setOnClickListener(new DoubleClickPreventionListener() { // from class: com.smaato.sdk.core.browser.SmaatoSdkBrowserActivity.4\n            @Override // com.smaato.sdk.core.ui.DoubleClickPreventionListener\n            public void processClick() {\n                Objects.onNotNull(SmaatoSdkBrowserActivity.this.browserPresenter, new Consumer() { // from class: com.smaato.sdk.core.browser.-$$Lambda$3Who52wYNLeQhFdpTsxGL2qI3mk\n                    @Override // com.smaato.sdk.core.util.fi.Consumer\n                    public final void accept(Object obj) {\n                        ((BrowserPresenter) obj).onPageNavigationForwardClicked();\n                    }\n                });\n            }\n        });\n        findViewById(R.id.btnOpenExternal).setOnClickListener(new DoubleClickPreventionListener() { // from class: com.smaato.sdk.core.browser.SmaatoSdkBrowserActivity.5\n            @Override // com.smaato.sdk.core.ui.DoubleClickPreventionListener\n            public void processClick() {\n                Objects.onNotNull(SmaatoSdkBrowserActivity.this.browserPresenter, new Consumer() { // from class: com.smaato.sdk.core.browser.-$$Lambda$SZ-ooymytBc3co7R0LbcHuAKC8E\n                    @Override // com.smaato.sdk.core.util.fi.Consumer\n                    public final void accept(Object obj) {\n                        ((BrowserPresenter) obj).onOpenExternalBrowserClicked();\n                    }\n                });\n            }\n        });\n        this.tvHostname = (TextView) findViewById(R.id.tvHostname);\n        this.tvHostname.setOnLongClickListener(new View.OnLongClickListener() { // from class: com.smaato.sdk.core.browser.-$$Lambda$SmaatoSdkBrowserActivity$dR75xS_5Xwlo9xu3XFXQX5uJ09U\n            @Override // android.view.View.OnLongClickListener\n            public final boolean onLongClick(View view) {\n                return SmaatoSdkBrowserActivity.this.lambda$initViews$0$SmaatoSdkBrowserActivity(view);\n            }\n        });\n        WebView webView = this.webView;\n        if (webView != null) {\n            WebSettings settings = webView.getSettings();\n            settings.setUseWideViewPort(true);\n            settings.setSupportZoom(true);\n            settings.setBuiltInZoomControls(true);\n            settings.setDisplayZoomControls(false);\n        }\n        if (this.webView != null) {\n            Objects.onNotNull(this.browserPresenter, new Consumer() { // from class: com.smaato.sdk.core.browser.-$$Lambda$SmaatoSdkBrowserActivity$H7XTfpag0CN_zF2eRw6Yw4JK6bw\n                @Override // com.smaato.sdk.core.util.fi.Consumer\n                public final void accept(Object obj) {\n                    SmaatoSdkBrowserActivity.this.lambda$initLogic$1$SmaatoSdkBrowserActivity((BrowserPresenter) obj);\n                }\n            });\n        }\n        final String stringExtra = getIntent().getStringExtra(\"KEY_CTA_URL\");\n        Objects.onNotNull(this.browserPresenter, new Consumer() { // from class: com.smaato.sdk.core.browser.-$$Lambda$SmaatoSdkBrowserActivity$ToIDO8-1A6v2dwlkYcFIfRyCKEU\n            @Override // com.smaato.sdk.core.util.fi.Consumer\n            public final void accept(Object obj) {\n                ((BrowserPresenter) obj).loadUrl(stringExtra);\n            }\n        });\n    }",
            "children": [
                "<com.smaato.sdk.core.util.Objects: void onNotNull(java.lang.Object,com.smaato.sdk.core.util.fi.Consumer)>"
            ]
        },
        "Entry-point: <com.smaato.sdk.core.browser.SmaatoSdkBrowserActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        super.onDestroy();\n        Objects.onNotNull(this.webView, new Consumer() { // from class: com.smaato.sdk.core.browser.-$$Lambda$MnnyuaHVDkjXez9DGXvzyGZK-4c\n            @Override // com.smaato.sdk.core.util.fi.Consumer\n            public final void accept(Object obj) {\n                WebViewHelperUtil.resetAndDestroyWebViewSafely((WebView) obj);\n            }\n        });\n        Objects.onNotNull(this.browserPresenter, new Consumer() { // from class: com.smaato.sdk.core.browser.-$$Lambda$R86vL1LYd4b-fRfllP6LfOcvV7k\n            @Override // com.smaato.sdk.core.util.fi.Consumer\n            public final void accept(Object obj) {\n                ((BrowserPresenter) obj).dropView();\n            }\n        });\n    }",
            "children": [
                "<com.smaato.sdk.core.util.Objects: void onNotNull(java.lang.Object,com.smaato.sdk.core.util.fi.Consumer)>"
            ]
        },
        "Entry-point: <com.smaato.sdk.core.browser.SmaatoSdkBrowserActivity: void onPause()>": {
            "code": "void  onPause()  {\n        super.onPause();\n        Objects.onNotNull(this.browserPresenter, new Consumer() { // from class: com.smaato.sdk.core.browser.-$$Lambda$JO76bjlBJ5VXWw5msPJKAupQnvM\n            @Override // com.smaato.sdk.core.util.fi.Consumer\n            public final void accept(Object obj) {\n                ((BrowserPresenter) obj).onPause();\n            }\n        });\n    }",
            "children": [
                "<com.smaato.sdk.core.util.Objects: void onNotNull(java.lang.Object,com.smaato.sdk.core.util.fi.Consumer)>"
            ]
        },
        "Entry-point: <com.smaato.sdk.core.browser.SmaatoSdkBrowserActivity: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n        Objects.onNotNull(this.browserPresenter, new Consumer() { // from class: com.smaato.sdk.core.browser.-$$Lambda$dWdInfO6XN4ddHAUECmtK31crFc\n            @Override // com.smaato.sdk.core.util.fi.Consumer\n            public final void accept(Object obj) {\n                ((BrowserPresenter) obj).onResume();\n            }\n        });\n    }",
            "children": [
                "<com.smaato.sdk.core.util.Objects: void onNotNull(java.lang.Object,com.smaato.sdk.core.util.fi.Consumer)>"
            ]
        },
        "Entry-point: <com.smaato.sdk.core.browser.SmaatoSdkBrowserActivity: void onStart()>": {
            "code": "void  onStart()  {\n        super.onStart();\n        Objects.onNotNull(this.browserPresenter, new Consumer() { // from class: com.smaato.sdk.core.browser.-$$Lambda$_xH7XsVTZB0hRcN5JSoYlEDrFv4\n            @Override // com.smaato.sdk.core.util.fi.Consumer\n            public final void accept(Object obj) {\n                ((BrowserPresenter) obj).onStart();\n            }\n        });\n    }",
            "children": [
                "<com.smaato.sdk.core.util.Objects: void onNotNull(java.lang.Object,com.smaato.sdk.core.util.fi.Consumer)>"
            ]
        },
        "Entry-point: <com.smaato.sdk.core.browser.SmaatoSdkBrowserActivity: void onStop()>": {
            "code": "void  onStop()  {\n        super.onStop();\n        Objects.onNotNull(this.browserPresenter, new Consumer() { // from class: com.smaato.sdk.core.browser.-$$Lambda$mhUkOmav4YNRhITdGxUXfCL8MfA\n            @Override // com.smaato.sdk.core.util.fi.Consumer\n            public final void accept(Object obj) {\n                ((BrowserPresenter) obj).onStop();\n            }\n        });\n    }",
            "children": [
                "<com.smaato.sdk.core.util.Objects: void onNotNull(java.lang.Object,com.smaato.sdk.core.util.fi.Consumer)>"
            ]
        },
        "Entry-point: <com.smaato.sdk.interstitial.InterstitialAdActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        if (this.isBackButtonEnabled) {\n            super.onBackPressed();\n            onClose();\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.smaato.sdk.interstitial.InterstitialAdActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        AndroidsInjector.inject(this);\n        if (this.interstitialAdPresenterStorage == null || this.interstitialEventsCache == null) {\n            Log.e(LOG_TAG, \"SmaatoSdk is not initialized.\");\n            finish();\n            return;\n        }\n        this.presenterUuid = (UUID) getIntent().getSerializableExtra(KEY_PRESENTER_UUID);\n        this.interstitialKey = getIntent().getStringExtra(KEY_INTERSTITIAL_IDENTIFIER);\n        this.adPresenter = this.interstitialAdPresenterStorage.getAdPresenter(this.presenterUuid);\n        requestWindowFeature(1);\n        getWindow().addFlags(1024);\n        if (this.adPresenter == null) {\n            finish();\n            this.interstitialEventsCache.notifyEvent(this.interstitialKey, new AdEvent(AdEvent.Type.ERROR, InterstitialError.INTERNAL_ERROR));\n            return;\n        }\n        this.listener = setupListener(this.interstitialKey);\n        this.adPresenter.setListener(this.listener);\n        initView(this.adPresenter.getAdContentView(this));\n        this.interstitialEventsCache.notifyEvent(this.interstitialKey, AdEvent.Type.OPEN);\n    }",
            "children": [
                "<android.util.Log: int e(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.smaato.sdk.interstitial.InterstitialAdActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        super.onDestroy();\n        if (isFinishing()) {\n            Objects.onNotNull(this.interstitialAdPresenterStorage, new Consumer() { // from class: com.smaato.sdk.interstitial.-$$Lambda$InterstitialAdActivity$zSskohkCdziNlpfOT_3T5ESKpw0\n                @Override // com.smaato.sdk.core.util.fi.Consumer\n                public final void accept(Object obj) {\n                    InterstitialAdActivity.this.lambda$onDestroy$3$InterstitialAdActivity((InterstitialAdPresenterStorage) obj);\n                }\n            });\n            Objects.onNotNull(this.adPresenter, new Consumer() { // from class: com.smaato.sdk.interstitial.-$$Lambda$BKAgaEbF6EgLc9UoekMxWFH84UY\n                @Override // com.smaato.sdk.core.util.fi.Consumer\n                public final void accept(Object obj) {\n                    ((InterstitialAdPresenter) obj).release();\n                }\n            });\n        }\n    }",
            "children": [
                "<com.smaato.sdk.core.util.Objects: void onNotNull(java.lang.Object,com.smaato.sdk.core.util.fi.Consumer)>"
            ]
        },
        "Entry-point: <com.smaato.sdk.rewarded.widget.RewardedInterstitialAdActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        if (this.enableCloseButton) {\n            onClose();\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.smaato.sdk.rewarded.widget.RewardedInterstitialAdActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        AndroidsInjector.inject(this);\n        if (this.retainedAdPresenterRepository == null) {\n            onError(\"SmaatoSdk is not initialised.\");\n            return;\n        }\n        this.enableCloseButton = getIntent().getBooleanExtra(EXTRA_ENABLE_CLOSE_BUTTON, false);\n        this.rewardedAdPresenter = getAdPresenterFromRepository(this.retainedAdPresenterRepository);\n        RewardedAdPresenter rewardedAdPresenter = this.rewardedAdPresenter;\n        if (rewardedAdPresenter != null) {\n            initWithAdPresenter(rewardedAdPresenter);\n        } else {\n            onError(\"Video Ad is not available for presentation\");\n        }\n    }",
            "children": [
                "<com.smaato.sdk.core.AndroidsInjector: void inject(android.app.Activity)>"
            ]
        },
        "Entry-point: <com.smaato.sdk.rewarded.widget.RewardedInterstitialAdActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        if (isFinishing()) {\n            Objects.onNotNull(this.rewardedAdPresenter, new Consumer() { // from class: com.smaato.sdk.rewarded.widget.-$$Lambda$_BTNuxu0Js4coEMGLUW9uYzPEcM\n                @Override // com.smaato.sdk.core.util.fi.Consumer\n                public final void accept(Object obj) {\n                    ((RewardedAdPresenter) obj).release();\n                }\n            });\n        }\n        super.onDestroy();\n    }",
            "children": [
                "<com.smaato.sdk.core.util.Objects: void onNotNull(java.lang.Object,com.smaato.sdk.core.util.fi.Consumer)>"
            ]
        },
        "Entry-point: <com.startapp.sdk.ads.interstitials.OverlayActivity: void finish()>": {
            "code": "void  finish()  {\n        com.startapp.sdk.ads.a.a aVar = this.a;\n        if (aVar != null) {\n            aVar.p();\n        }\n        super.finish();\n    }",
            "children": []
        },
        "Entry-point: <com.startapp.sdk.ads.interstitials.OverlayActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        if (this.a.q()) {\n            return;\n        }\n        super.onBackPressed();\n    }",
            "children": []
        },
        "Entry-point: <com.startapp.sdk.ads.interstitials.OverlayActivity: void onConfigurationChanged(android.content.res.Configuration)>": {
            "code": "void  onConfigurationChanged(android.content.res.Configuration)  {\n        super.onConfigurationChanged(configuration);\n        if (this.b) {\n            a();\n            this.a.a(this.e);\n            this.a.t();\n            this.b = false;\n        }\n        this.a.u();\n    }",
            "children": []
        },
        "Entry-point: <com.startapp.sdk.ads.interstitials.OverlayActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        overridePendingTransition(0, 0);\n        super.onCreate(bundle);\n        int intExtra = getIntent().getIntExtra(\"placement\", -1);\n        Serializable serializableExtra = getIntent().getSerializableExtra(\"ad\");\n        if (intExtra >= 0 && (serializableExtra instanceof Ad)) {\n            c.a(getApplicationContext()).h().a(AdPreferences.Placement.a(intExtra), ((Ad) serializableExtra).getAdId());\n        }\n        boolean booleanExtra = getIntent().getBooleanExtra(\"videoAd\", false);\n        requestWindowFeature(1);\n        if (getIntent().getBooleanExtra(Tracker.Events.CREATIVE_FULLSCREEN, false) || booleanExtra) {\n            getWindow().setFlags(1024, 1024);\n        }\n        this.d = getIntent().getBooleanExtra(\"activityShouldLockOrientation\", true);\n        if (bundle != null) {\n            this.g = bundle.getInt(\"activityLockedOrientation\", -1);\n            this.d = bundle.getBoolean(\"activityShouldLockOrientation\", true);\n        }\n        this.c = getIntent().getIntExtra(\"orientation\", getResources().getConfiguration().orientation);\n        this.b = getResources().getConfiguration().orientation != this.c;\n        if (!this.b) {\n            a();\n            this.a.a(bundle);\n            return;\n        }\n        this.e = bundle;\n    }",
            "children": [
                "<com.startapp.sdk.adsbase.model.AdPreferences$Placement: com.startapp.sdk.adsbase.model.AdPreferences$Placement a(int)>"
            ]
        },
        "Entry-point: <com.startapp.sdk.ads.interstitials.OverlayActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        if (!this.b) {\n            this.a.v();\n            this.a = null;\n            aa.a((Activity) this, false);\n        }\n        super.onDestroy();\n    }",
            "children": [
                "<com.startapp.sdk.adsbase.l.aa: void a(android.app.Activity,boolean)>"
            ]
        },
        "Entry-point: <com.startapp.sdk.ads.interstitials.OverlayActivity: boolean onKeyDown(int,android.view.KeyEvent)>": {
            "code": "boolean  onKeyDown(int,android.view.KeyEvent)  {\n        com.startapp.sdk.ads.a.a aVar = this.a;\n        if (aVar == null || aVar.a(i, keyEvent)) {\n            return true;\n        }\n        return super.onKeyDown(i, keyEvent);\n    }",
            "children": []
        },
        "Entry-point: <com.startapp.sdk.ads.interstitials.OverlayActivity: void onPause()>": {
            "code": "void  onPause()  {\n        super.onPause();\n        if (!this.b) {\n            this.a.r();\n            com.startapp.sdk.adsbase.a.a((Context) this);\n        }\n        overridePendingTransition(0, 0);\n    }",
            "children": [
                "<com.startapp.sdk.adsbase.a: void a(android.content.Context)>"
            ]
        },
        "Entry-point: <com.startapp.sdk.ads.interstitials.OverlayActivity: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n        int i = this.g;\n        if (i == -1) {\n            this.g = aa.a(this, this.c, this.d);\n        } else {\n            com.startapp.common.b.b.a(this, i);\n        }\n        if (this.b) {\n            return;\n        }\n        this.a.t();\n    }",
            "children": [
                "<com.startapp.common.b.b: void a(android.app.Activity,int)>"
            ]
        },
        "Entry-point: <com.startapp.sdk.ads.interstitials.OverlayActivity: void onSaveInstanceState(android.os.Bundle)>": {
            "code": "void  onSaveInstanceState(android.os.Bundle)  {\n        super.onSaveInstanceState(bundle);\n        if (this.b) {\n            return;\n        }\n        this.a.b(bundle);\n        bundle.putInt(\"activityLockedOrientation\", this.g);\n        bundle.putBoolean(\"activityShouldLockOrientation\", this.d);\n    }",
            "children": []
        },
        "Entry-point: <com.startapp.sdk.ads.interstitials.OverlayActivity: void onStop()>": {
            "code": "void  onStop()  {\n        super.onStop();\n        if (this.b) {\n            return;\n        }\n        this.a.s();\n    }",
            "children": []
        },
        "Entry-point: <com.startapp.sdk.ads.list3d.List3DActivity: void finish()>": {
            "code": "void  finish()  {\n        try {\n            this.l = SystemClock.uptimeMillis();\n            com.startapp.sdk.adsbase.a.b(this, b(), a());\n            StartAppSDKInternal.a().a(false);\n            if (this.g == getResources().getConfiguration().orientation) {\n                com.startapp.common.a.a(this).a(new Intent(\"com.startapp.android.HideDisplayBroadcastListener\"));\n            }\n            synchronized (this) {\n                if (this.n != null) {\n                    com.startapp.common.a.a(this).a(this.n);\n                    this.n = null;\n                }\n            }\n            if (this.a != null) {\n                g.a().a(this.a).d();\n                if (!AdsConstants.d.booleanValue()) {\n                    g.a().b(this.a);\n                }\n            }\n        } catch (Throwable th) {\n            new com.startapp.sdk.adsbase.f.a(th).a((Context) this);\n        }\n        super.finish();\n    }",
            "children": [
                "<com.startapp.sdk.ads.list3d.g: com.startapp.sdk.ads.list3d.g a()>"
            ]
        },
        "Entry-point: <com.startapp.sdk.ads.list3d.List3DActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        g.a().a(this.a).d();\n        super.onBackPressed();\n    }",
            "children": [
                "<com.startapp.sdk.ads.list3d.g: com.startapp.sdk.ads.list3d.g a()>"
            ]
        },
        "Entry-point: <com.startapp.sdk.ads.list3d.List3DActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        View textView;\n        try {\n            overridePendingTransition(0, 0);\n            super.onCreate(bundle);\n            if (getIntent().getBooleanExtra(Tracker.Events.CREATIVE_FULLSCREEN, false)) {\n                requestWindowFeature(1);\n                getWindow().setFlags(1024, 1024);\n            }\n            if (bundle == null) {\n                com.startapp.common.a.a(this).a(new Intent(\"com.startapp.android.ShowDisplayBroadcastListener\"));\n                this.i = (Long) getIntent().getSerializableExtra(\"lastLoadTime\");\n                this.j = (Long) getIntent().getSerializableExtra(\"adCacheTtl\");\n            } else {\n                if (bundle.containsKey(\"lastLoadTime\")) {\n                    this.i = (Long) bundle.getSerializable(\"lastLoadTime\");\n                }\n                if (bundle.containsKey(\"adCacheTtl\")) {\n                    this.j = (Long) bundle.getSerializable(\"adCacheTtl\");\n                }\n            }\n            this.k = getIntent().getStringExtra(Constants.ParametersKeys.POSITION);\n            this.a = getIntent().getStringExtra(\"listModelUuid\");\n            com.startapp.common.a.a(this).a(this.n, new IntentFilter(\"com.startapp.android.CloseAdActivity\"));\n            this.g = getResources().getConfiguration().orientation;\n            aa.a((Activity) this, true);\n            boolean booleanExtra = getIntent().getBooleanExtra(\"overlay\", false);\n            requestWindowFeature(1);\n            this.b = getIntent().getStringExtra(\"adTag\");\n            int e = AdsCommonMetaData.a().e();\n            int f = AdsCommonMetaData.a().f();\n            this.d = new List3DView(this, this.b, this.a);\n            this.d.setBackgroundDrawable(new GradientDrawable(GradientDrawable.Orientation.TOP_BOTTOM, new int[]{e, f}));\n            this.c = g.a().a(this.a).e();\n            if (this.c == null) {\n                finish();\n                return;\n            }\n            if (booleanExtra) {\n                com.startapp.common.a.a(this).a(this.d.p, new IntentFilter(\"com.startapp.android.Activity3DGetValues\"));\n            } else {\n                this.d.setStarted();\n                this.d.setHint(true);\n                this.d.setFade(true);\n            }\n            c cVar = new c(this, this.c, this.b, this.a);\n            g.a().a(this.a).a(this, !booleanExtra);\n            this.d.setAdapter(cVar);\n            this.d.setDynamics(new i());\n            this.d.setOnItemClickListener(new AdapterView.OnItemClickListener() { // from class: com.startapp.sdk.ads.list3d.List3DActivity.2\n                @Override // android.widget.AdapterView.OnItemClickListener\n                public final void onItemClick(AdapterView<?> adapterView, View view, int i, long j) {\n                    String b = List3DActivity.this.c.get(i).b();\n                    String e2 = List3DActivity.this.c.get(i).e();\n                    String f2 = List3DActivity.this.c.get(i).f();\n                    boolean k = List3DActivity.this.c.get(i).k();\n                    boolean l = List3DActivity.this.c.get(i).l();\n                    String o = List3DActivity.this.c.get(i).o();\n                    String n = List3DActivity.this.c.get(i).n();\n                    Boolean r = List3DActivity.this.c.get(i).r();\n                    g.a().a(List3DActivity.this.a).a(List3DActivity.this.c.get(i).c());\n                    if (o == null || TextUtils.isEmpty(o)) {\n                        if (TextUtils.isEmpty(b)) {\n                            return;\n                        }\n                        boolean a = com.startapp.sdk.adsbase.a.a(List3DActivity.this.getApplicationContext(), AdPreferences.Placement.INAPP_OFFER_WALL);\n                        if (!k || a) {\n                            List3DActivity list3DActivity = List3DActivity.this;\n                            com.startapp.sdk.adsbase.a.a(list3DActivity, b, e2, list3DActivity.a(), l && !a, false);\n                            List3DActivity.this.finish();\n                            return;\n                        }\n                        List3DActivity list3DActivity2 = List3DActivity.this;\n                        com.startapp.sdk.adsbase.a.a(list3DActivity2, b, e2, f2, list3DActivity2.a(), AdsCommonMetaData.a().B(), AdsCommonMetaData.a().C(), l, r, false, new Runnable() { // from class: com.startapp.sdk.ads.list3d.List3DActivity.2.1\n                            @Override // java.lang.Runnable\n                            public final void run() {\n                                List3DActivity.this.finish();\n                            }\n                        });\n                        return;\n                    }\n                    List3DActivity list3DActivity3 = List3DActivity.this;\n                    com.startapp.sdk.adsbase.a.a(o, n, b, list3DActivity3, new TrackingParams(list3DActivity3.b));\n                    List3DActivity.this.finish();\n                }\n            });\n            RelativeLayout relativeLayout = new RelativeLayout(this);\n            relativeLayout.setContentDescription(\"StartApp Ad\");\n            relativeLayout.setId(1475346432);\n            ViewGroup.LayoutParams layoutParams = new FrameLayout.LayoutParams(-1, -1);\n            ViewGroup.LayoutParams layoutParams2 = new RelativeLayout.LayoutParams(-1, -1);\n            LinearLayout linearLayout = new LinearLayout(this);\n            linearLayout.setOrientation(1);\n            relativeLayout.addView(linearLayout, layoutParams2);\n            RelativeLayout relativeLayout2 = new RelativeLayout(this);\n            relativeLayout2.setLayoutParams(new RelativeLayout.LayoutParams(-1, -2));\n            relativeLayout2.setBackgroundColor(AdsCommonMetaData.a().i().intValue());\n            linearLayout.addView(relativeLayout2);\n            TextView textView2 = new TextView(this);\n            RelativeLayout.LayoutParams layoutParams3 = new RelativeLayout.LayoutParams(-2, -2);\n            layoutParams3.addRule(13);\n            textView2.setLayoutParams(layoutParams3);\n            textView2.setPadding(0, y.a(this, 2), 0, y.a(this, 5));\n            textView2.setTextColor(AdsCommonMetaData.a().l().intValue());\n            textView2.setTextSize(AdsCommonMetaData.a().k().intValue());\n            textView2.setSingleLine(true);\n            textView2.setEllipsize(TextUtils.TruncateAt.END);\n            textView2.setText(AdsCommonMetaData.a().j());\n            textView2.setShadowLayer(2.5f, -2.0f, 2.0f, -11513776);\n            y.a(textView2, AdsCommonMetaData.a().m());\n            relativeLayout2.addView(textView2);\n            RelativeLayout.LayoutParams layoutParams4 = new RelativeLayout.LayoutParams(-2, -2);\n            layoutParams4.addRule(11);\n            layoutParams4.addRule(15);\n            Bitmap a = com.startapp.sdk.adsbase.l.a.a(this, \"close_button.png\");\n            if (a != null) {\n                textView = new ImageButton(this, null, 16973839);\n                ((ImageButton) textView).setImageBitmap(Bitmap.createScaledBitmap(a, y.a(this, 36), y.a(this, 36), true));\n            } else {\n                textView = new TextView(this);\n                ((TextView) textView).setText(\"   x   \");\n                ((TextView) textView).setTextSize(20.0f);\n            }\n            textView.setLayoutParams(layoutParams4);\n            textView.setOnClickListener(new View.OnClickListener() { // from class: com.startapp.sdk.ads.list3d.List3DActivity.3\n                @Override // android.view.View.OnClickListener\n                public final void onClick(View view) {\n                    List3DActivity list3DActivity = List3DActivity.this;\n                    com.startapp.sdk.adsbase.a.b(list3DActivity, list3DActivity.b(), List3DActivity.this.a());\n                    List3DActivity.this.finish();\n                }\n            });\n            textView.setContentDescription(VastAttributes.HORIZONTAL_POSITION);\n            textView.setId(1475346435);\n            relativeLayout2.addView(textView);\n            View view = new View(this);\n            view.setLayoutParams(new LinearLayout.LayoutParams(-1, y.a(this, 2)));\n            view.setBackgroundColor(AdsCommonMetaData.a().n().intValue());\n            linearLayout.addView(view);\n            LinearLayout.LayoutParams layoutParams5 = new LinearLayout.LayoutParams(-1, 0);\n            layoutParams5.weight = 1.0f;\n            this.d.setLayoutParams(layoutParams5);\n            linearLayout.addView(this.d);\n            LinearLayout linearLayout2 = new LinearLayout(this);\n            LinearLayout.LayoutParams layoutParams6 = new LinearLayout.LayoutParams(-1, -2);\n            layoutParams6.gravity = 80;\n            linearLayout2.setLayoutParams(layoutParams6);\n            linearLayout2.setBackgroundColor(AdsCommonMetaData.a().w().intValue());\n            linearLayout2.setGravity(17);\n            linearLayout.addView(linearLayout2);\n            TextView textView3 = new TextView(this);\n            textView3.setTextColor(AdsCommonMetaData.a().x().intValue());\n            textView3.setPadding(0, y.a(this, 2), 0, y.a(this, 3));\n            textView3.setText(\"Powered By \");\n            textView3.setTextSize(16.0f);\n            linearLayout2.addView(textView3);\n            ImageView imageView = new ImageView(this);\n            imageView.setImageBitmap(Bitmap.createScaledBitmap(com.startapp.sdk.adsbase.l.a.a(this, \"logo.png\"), y.a(this, 56), y.a(this, 12), true));\n            linearLayout2.addView(imageView);\n            this.h = new AdInformationObject(this, AdInformationObject.Size.LARGE, AdPreferences.Placement.INAPP_OFFER_WALL, (AdInformationOverrides) getIntent().getSerializableExtra(\"adInfoOverride\"), null);\n            this.h.a(relativeLayout);\n            setContentView(relativeLayout, layoutParams);\n            new Handler().postDelayed(new Runnable() { // from class: com.startapp.sdk.ads.list3d.List3DActivity.4\n                @Override // java.lang.Runnable\n                public final void run() {\n                    List3DActivity.this.sendBroadcast(new Intent(\"android.intent.action.CLOSE_SYSTEM_DIALOGS\"));\n                }\n            }, 500L);\n        } catch (Throwable th) {\n            new com.startapp.sdk.adsbase.f.a(th).a((Context) this);\n            finish();\n        }\n    }",
            "children": [
                "<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>"
            ]
        },
        "Entry-point: <com.startapp.sdk.ads.list3d.List3DActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        aa.a((Activity) this, false);\n        super.onDestroy();\n    }",
            "children": [
                "<com.startapp.sdk.adsbase.l.aa: void a(android.app.Activity,boolean)>"
            ]
        },
        "Entry-point: <com.startapp.sdk.ads.list3d.List3DActivity: void onPause()>": {
            "code": "void  onPause()  {\n        super.onPause();\n        g.a().a(this.a).b();\n        overridePendingTransition(0, 0);\n    }",
            "children": [
                "<com.startapp.sdk.ads.list3d.g: com.startapp.sdk.ads.list3d.g a()>"
            ]
        },
        "Entry-point: <com.startapp.sdk.ads.list3d.List3DActivity: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n        boolean z = false;\n        if (this.i != null && this.j != null && System.currentTimeMillis() - this.i.longValue() > this.j.longValue()) {\n            z = true;\n        }\n        if (z) {\n            finish();\n            return;\n        }\n        StartAppSDKInternal.a().a(true);\n        this.m = SystemClock.uptimeMillis();\n        g.a().a(this.a).c();\n    }",
            "children": [
                "<com.startapp.sdk.ads.list3d.g: com.startapp.sdk.ads.list3d.g a()>"
            ]
        },
        "Entry-point: <com.startapp.sdk.ads.list3d.List3DActivity: void onSaveInstanceState(android.os.Bundle)>": {
            "code": "void  onSaveInstanceState(android.os.Bundle)  {\n        super.onSaveInstanceState(bundle);\n        Long l = this.i;\n        if (l != null) {\n            bundle.putSerializable(\"lastLoadTime\", l);\n        }\n        Long l2 = this.j;\n        if (l2 != null) {\n            bundle.putSerializable(\"adCacheTtl\", l2);\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.startapp.sdk.adsbase.consent.ConsentActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        WebView webView = this.a;\n        if (webView == null) {\n            this.c = true;\n            super.onBackPressed();\n            return;\n        }\n        String url = webView.getUrl();\n        String str = this.b;\n        if (str != null && url != null && url.contains(str)) {\n            this.a.loadUrl(\"javascript:startappBackPressed();\");\n        } else if (this.a.canGoBack()) {\n            this.a.goBack();\n        } else {\n            this.c = true;\n            super.onBackPressed();\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.startapp.sdk.adsbase.consent.ConsentActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        requestWindowFeature(1);\n        RelativeLayout relativeLayout = new RelativeLayout(this);\n        ViewGroup.LayoutParams layoutParams = new RelativeLayout.LayoutParams(-1, -1);\n        String dataString = getIntent().getDataString();\n        if (!TextUtils.isEmpty(dataString)) {\n            try {\n                URI uri = new URI(dataString);\n                this.b = new URI(uri.getScheme(), uri.getAuthority(), uri.getPath(), null, null).toString();\n                this.a = new WebView(this);\n                this.a.setWebViewClient(new a());\n                this.a.getSettings().setJavaScriptEnabled(true);\n                this.a.setHorizontalScrollBarEnabled(false);\n                this.a.setVerticalScrollBarEnabled(false);\n                if (Build.VERSION.SDK_INT >= 15) {\n                    this.a.getSettings().setTextZoom(100);\n                } else {\n                    this.a.getSettings().setTextSize(WebSettings.TextSize.NORMAL);\n                }\n                this.a.loadUrl(dataString);\n                this.a.setBackgroundColor(0);\n                b.d(this.a);\n                RelativeLayout.LayoutParams layoutParams2 = new RelativeLayout.LayoutParams(-1, -1);\n                layoutParams2.addRule(13);\n                relativeLayout.addView(this.a, layoutParams2);\n            } catch (Throwable th) {\n                new com.startapp.sdk.adsbase.f.a(th).a((Context) this);\n            }\n        }\n        setContentView(relativeLayout, layoutParams);\n    }",
            "children": [
                "<com.startapp.common.b.b: void d(android.webkit.WebView)>"
            ]
        },
        "Entry-point: <com.startapp.sdk.adsbase.consent.ConsentActivity: void onStop()>": {
            "code": "void  onStop()  {\n        super.onStop();\n        ConsentConfig i = MetaData.I().i();\n        if (!this.c && i != null && i.b() && aa.c(this) && aa.f(this)) {\n            new com.startapp.sdk.adsbase.f.a(com.startapp.sdk.adsbase.f.b.a).a(\"ConsentActivityHasBeenCovered\").a((Context) this);\n            finish();\n            try {\n                startActivity(getIntent());\n            } catch (Throwable th) {\n                new com.startapp.sdk.adsbase.f.a(th).a(getApplicationContext());\n            }\n        }\n        c.a(this).f().c();\n    }",
            "children": [
                "<com.startapp.sdk.components.c: com.startapp.sdk.components.c a(android.content.Context)>"
            ]
        },
        "Entry-point: <com.unity3d.player.UnityPlayerActivity: boolean dispatchKeyEvent(android.view.KeyEvent)>": {
            "code": "boolean  dispatchKeyEvent(android.view.KeyEvent)  {\n        return keyEvent.getAction() == 2 ? this.mUnityPlayer.injectEvent(keyEvent) : super.dispatchKeyEvent(keyEvent);\n    }",
            "children": []
        },
        "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onConfigurationChanged(android.content.res.Configuration)>": {
            "code": "void  onConfigurationChanged(android.content.res.Configuration)  {\n        super.onConfigurationChanged(configuration);\n        this.mUnityPlayer.configurationChanged(configuration);\n    }",
            "children": []
        },
        "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        requestWindowFeature(1);\n        super.onCreate(bundle);\n        getIntent().putExtra(Framework.UNITY, updateUnityCommandLineArguments(getIntent().getStringExtra(Framework.UNITY)));\n        this.mUnityPlayer = new UnityPlayer(this);\n        setContentView(this.mUnityPlayer);\n        this.mUnityPlayer.requestFocus();\n    }",
            "children": [
                "<android.view.View: void <clinit>()>"
            ]
        },
        "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        this.mUnityPlayer.destroy();\n        super.onDestroy();\n    }",
            "children": []
        },
        "Entry-point: <com.unity3d.player.UnityPlayerActivity: boolean onGenericMotionEvent(android.view.MotionEvent)>": {
            "code": "boolean  onGenericMotionEvent(android.view.MotionEvent)  {\n        return this.mUnityPlayer.injectEvent(motionEvent);\n    }",
            "children": []
        },
        "Entry-point: <com.unity3d.player.UnityPlayerActivity: boolean onKeyDown(int,android.view.KeyEvent)>": {
            "code": "boolean  onKeyDown(int,android.view.KeyEvent)  {\n        return this.mUnityPlayer.injectEvent(keyEvent);\n    }",
            "children": []
        },
        "Entry-point: <com.unity3d.player.UnityPlayerActivity: boolean onKeyUp(int,android.view.KeyEvent)>": {
            "code": "boolean  onKeyUp(int,android.view.KeyEvent)  {\n        return this.mUnityPlayer.injectEvent(keyEvent);\n    }",
            "children": []
        },
        "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onLowMemory()>": {
            "code": "void  onLowMemory()  {\n        super.onLowMemory();\n        this.mUnityPlayer.lowMemory();\n    }",
            "children": []
        },
        "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onNewIntent(android.content.Intent)>": {
            "code": "void  onNewIntent(android.content.Intent)  {\n        setIntent(intent);\n    }",
            "children": []
        },
        "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onPause()>": {
            "code": "void  onPause()  {\n        super.onPause();\n        this.mUnityPlayer.pause();\n    }",
            "children": []
        },
        "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n        this.mUnityPlayer.resume();\n    }",
            "children": []
        },
        "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onStart()>": {
            "code": "void  onStart()  {\n        super.onStart();\n        this.mUnityPlayer.start();\n    }",
            "children": []
        },
        "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onStop()>": {
            "code": "void  onStop()  {\n        super.onStop();\n        this.mUnityPlayer.stop();\n    }",
            "children": []
        },
        "Entry-point: <com.unity3d.player.UnityPlayerActivity: boolean onTouchEvent(android.view.MotionEvent)>": {
            "code": "boolean  onTouchEvent(android.view.MotionEvent)  {\n        return this.mUnityPlayer.injectEvent(motionEvent);\n    }",
            "children": []
        },
        "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onTrimMemory(int)>": {
            "code": "void  onTrimMemory(int)  {\n        super.onTrimMemory(i);\n        if (i == 15) {\n            this.mUnityPlayer.lowMemory();\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.unity3d.player.UnityPlayerActivity: void onWindowFocusChanged(boolean)>": {
            "code": "void  onWindowFocusChanged(boolean)  {\n        super.onWindowFocusChanged(z);\n        this.mUnityPlayer.windowFocusChanged(z);\n    }",
            "children": []
        },
        "Entry-point: <com.unity3d.services.ads.adunit.AdUnitTransparentActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        ViewUtilities.setBackground(this._layout, new ColorDrawable(0));\n    }",
            "children": [
                "<android.graphics.drawable.ColorDrawable: void <init>(int)>"
            ]
        },
        "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        AdUnitEvent adUnitEvent;\n        super.onCreate(bundle);\n        if (WebViewApp.getCurrentApp() == null) {\n            DeviceLog.error(\"Unity Ads web app is null, closing Unity Ads activity from onCreate\");\n            finish();\n            return;\n        }\n        AdUnit.setAdUnitActivity(this);\n        Intent.setActiveActivity(this);\n        createLayout();\n        ViewUtilities.removeViewFromParent(this._layout);\n        AdUnitRelativeLayout adUnitRelativeLayout = this._layout;\n        addContentView(adUnitRelativeLayout, adUnitRelativeLayout.getLayoutParams());\n        if (bundle == null) {\n            this._views = getIntent().getStringArrayExtra(EXTRA_VIEWS);\n            this._keyEventList = getIntent().getIntegerArrayListExtra(EXTRA_KEY_EVENT_LIST);\n            if (getIntent().hasExtra(\"orientation\")) {\n                this._orientation = getIntent().getIntExtra(\"orientation\", -1);\n            }\n            if (getIntent().hasExtra(EXTRA_SYSTEM_UI_VISIBILITY)) {\n                this._systemUiVisibility = getIntent().getIntExtra(EXTRA_SYSTEM_UI_VISIBILITY, 0);\n            }\n            if (getIntent().hasExtra(EXTRA_ACTIVITY_ID)) {\n                this._activityId = getIntent().getIntExtra(EXTRA_ACTIVITY_ID, -1);\n            }\n            if (getIntent().hasExtra(EXTRA_DISPLAY_CUTOUT_MODE)) {\n                this._displayCutoutMode = getIntent().getIntExtra(EXTRA_DISPLAY_CUTOUT_MODE, 0);\n            }\n            adUnitEvent = AdUnitEvent.ON_CREATE;\n        } else {\n            this._views = bundle.getStringArray(EXTRA_VIEWS);\n            this._orientation = bundle.getInt(\"orientation\", -1);\n            this._systemUiVisibility = bundle.getInt(EXTRA_SYSTEM_UI_VISIBILITY, 0);\n            this._keyEventList = bundle.getIntegerArrayList(EXTRA_KEY_EVENT_LIST);\n            this._keepScreenOn = bundle.getBoolean(EXTRA_KEEP_SCREEN_ON);\n            this._activityId = bundle.getInt(EXTRA_ACTIVITY_ID, -1);\n            this._displayCutoutMode = bundle.getInt(EXTRA_DISPLAY_CUTOUT_MODE, 0);\n            setKeepScreenOn(this._keepScreenOn);\n            adUnitEvent = AdUnitEvent.ON_RESTORE;\n        }\n        setOrientation(this._orientation);\n        setSystemUiVisibility(this._systemUiVisibility);\n        setLayoutInDisplayCutoutMode(this._displayCutoutMode);\n        String[] strArr = this._views;\n        if (strArr != null) {\n            for (String str : strArr) {\n                IAdUnitViewHandler viewHandler = getViewHandler(str);\n                if (viewHandler != null) {\n                    viewHandler.onCreate(this, bundle);\n                }\n            }\n        }\n        WebViewApp.getCurrentApp().sendEvent(WebViewEventCategory.ADUNIT, adUnitEvent, Integer.valueOf(this._activityId));\n    }",
            "children": [
                "<java.lang.Integer: java.lang.Integer valueOf(int)>"
            ]
        },
        "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        super.onDestroy();\n        if (WebViewApp.getCurrentApp() == null) {\n            if (isFinishing()) {\n                return;\n            }\n            DeviceLog.error(\"Unity Ads web app is null, closing Unity Ads activity from onDestroy\");\n            finish();\n            return;\n        }\n        WebViewApp.getCurrentApp().sendEvent(WebViewEventCategory.ADUNIT, AdUnitEvent.ON_DESTROY, Boolean.valueOf(isFinishing()), Integer.valueOf(this._activityId));\n        Map<String, IAdUnitViewHandler> map = this._viewHandlers;\n        if (map != null) {\n            for (Map.Entry<String, IAdUnitViewHandler> entry : map.entrySet()) {\n                if (entry.getValue() != null) {\n                    entry.getValue().onDestroy(this);\n                }\n            }\n        }\n        if (AdUnit.getCurrentAdUnitActivityId() == this._activityId) {\n            AdUnit.setAdUnitActivity(null);\n        }\n        Intent.removeActiveActivity(this);\n    }",
            "children": [
                "<com.unity3d.services.core.api.Intent: void removeActiveActivity(android.app.Activity)>"
            ]
        },
        "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: boolean onKeyDown(int,android.view.KeyEvent)>": {
            "code": "boolean  onKeyDown(int,android.view.KeyEvent)  {\n        ArrayList<Integer> arrayList = this._keyEventList;\n        if (arrayList == null || !arrayList.contains(Integer.valueOf(i))) {\n            return false;\n        }\n        WebViewApp.getCurrentApp().sendEvent(WebViewEventCategory.ADUNIT, AdUnitEvent.KEY_DOWN, Integer.valueOf(i), Long.valueOf(keyEvent.getEventTime()), Long.valueOf(keyEvent.getDownTime()), Integer.valueOf(keyEvent.getRepeatCount()), Integer.valueOf(this._activityId));\n        return true;\n    }",
            "children": [
                "<java.lang.Integer: java.lang.Integer valueOf(int)>"
            ]
        },
        "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onPause()>": {
            "code": "void  onPause()  {\n        super.onPause();\n        if (WebViewApp.getCurrentApp() == null) {\n            if (isFinishing()) {\n                return;\n            }\n            DeviceLog.error(\"Unity Ads web app is null, closing Unity Ads activity from onPause\");\n            finish();\n            return;\n        }\n        if (WebViewApp.getCurrentApp().getWebView() == null) {\n            DeviceLog.warning(\"Unity Ads web view is null, from onPause\");\n        } else if (isFinishing()) {\n            ViewUtilities.removeViewFromParent(WebViewApp.getCurrentApp().getWebView());\n        }\n        Map<String, IAdUnitViewHandler> map = this._viewHandlers;\n        if (map != null) {\n            for (Map.Entry<String, IAdUnitViewHandler> entry : map.entrySet()) {\n                if (entry.getValue() != null) {\n                    entry.getValue().onPause(this);\n                }\n            }\n        }\n        WebViewApp.getCurrentApp().sendEvent(WebViewEventCategory.ADUNIT, AdUnitEvent.ON_PAUSE, Boolean.valueOf(isFinishing()), Integer.valueOf(this._activityId));\n    }",
            "children": [
                "<java.lang.Integer: java.lang.Integer valueOf(int)>"
            ]
        },
        "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>": {
            "code": "void  onRequestPermissionsResult(int,java.lang.String[],int[])  {\n        try {\n            JSONArray jSONArray = new JSONArray();\n            JSONArray jSONArray2 = new JSONArray();\n            for (String str : strArr) {\n                jSONArray.put(str);\n            }\n            for (int i2 : iArr) {\n                jSONArray2.put(i2);\n            }\n            WebViewApp.getCurrentApp().sendEvent(WebViewEventCategory.PERMISSIONS, PermissionsEvent.PERMISSIONS_RESULT, Integer.valueOf(i), jSONArray, jSONArray2);\n        } catch (Exception e) {\n            WebViewApp.getCurrentApp().sendEvent(WebViewEventCategory.PERMISSIONS, PermissionsEvent.PERMISSIONS_ERROR, e.getMessage());\n        }\n    }",
            "children": [
                "<com.unity3d.services.core.webview.WebViewApp: com.unity3d.services.core.webview.WebViewApp getCurrentApp()>"
            ]
        },
        "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n        if (WebViewApp.getCurrentApp() == null) {\n            if (isFinishing()) {\n                return;\n            }\n            DeviceLog.error(\"Unity Ads web app is null, closing Unity Ads activity from onResume\");\n            finish();\n            return;\n        }\n        setViews(this._views);\n        Map<String, IAdUnitViewHandler> map = this._viewHandlers;\n        if (map != null) {\n            for (Map.Entry<String, IAdUnitViewHandler> entry : map.entrySet()) {\n                if (entry.getValue() != null) {\n                    entry.getValue().onResume(this);\n                }\n            }\n        }\n        WebViewApp.getCurrentApp().sendEvent(WebViewEventCategory.ADUNIT, AdUnitEvent.ON_RESUME, Integer.valueOf(this._activityId));\n    }",
            "children": [
                "<java.lang.Integer: java.lang.Integer valueOf(int)>"
            ]
        },
        "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onSaveInstanceState(android.os.Bundle)>": {
            "code": "void  onSaveInstanceState(android.os.Bundle)  {\n        super.onSaveInstanceState(bundle);\n        bundle.putInt(\"orientation\", this._orientation);\n        bundle.putInt(EXTRA_SYSTEM_UI_VISIBILITY, this._systemUiVisibility);\n        bundle.putIntegerArrayList(EXTRA_KEY_EVENT_LIST, this._keyEventList);\n        bundle.putBoolean(EXTRA_KEEP_SCREEN_ON, this._keepScreenOn);\n        bundle.putStringArray(EXTRA_VIEWS, this._views);\n        bundle.putInt(EXTRA_ACTIVITY_ID, this._activityId);\n    }",
            "children": []
        },
        "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onStart()>": {
            "code": "void  onStart()  {\n        super.onStart();\n        if (WebViewApp.getCurrentApp() == null) {\n            if (isFinishing()) {\n                return;\n            }\n            DeviceLog.error(\"Unity Ads web app is null, closing Unity Ads activity from onStart\");\n            finish();\n            return;\n        }\n        Map<String, IAdUnitViewHandler> map = this._viewHandlers;\n        if (map != null) {\n            for (Map.Entry<String, IAdUnitViewHandler> entry : map.entrySet()) {\n                if (entry.getValue() != null) {\n                    entry.getValue().onStart(this);\n                }\n            }\n        }\n        WebViewApp.getCurrentApp().sendEvent(WebViewEventCategory.ADUNIT, AdUnitEvent.ON_START, Integer.valueOf(this._activityId));\n    }",
            "children": [
                "<java.lang.Integer: java.lang.Integer valueOf(int)>"
            ]
        },
        "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onStop()>": {
            "code": "void  onStop()  {\n        super.onStop();\n        if (WebViewApp.getCurrentApp() == null) {\n            if (isFinishing()) {\n                return;\n            }\n            DeviceLog.error(\"Unity Ads web app is null, closing Unity Ads activity from onStop\");\n            finish();\n            return;\n        }\n        Map<String, IAdUnitViewHandler> map = this._viewHandlers;\n        if (map != null) {\n            for (Map.Entry<String, IAdUnitViewHandler> entry : map.entrySet()) {\n                if (entry.getValue() != null) {\n                    entry.getValue().onStop(this);\n                }\n            }\n        }\n        WebViewApp.getCurrentApp().sendEvent(WebViewEventCategory.ADUNIT, AdUnitEvent.ON_STOP, Integer.valueOf(this._activityId));\n    }",
            "children": [
                "<java.lang.Integer: java.lang.Integer valueOf(int)>"
            ]
        },
        "Entry-point: <com.unity3d.services.ads.adunit.AdUnitActivity: void onWindowFocusChanged(boolean)>": {
            "code": "void  onWindowFocusChanged(boolean)  {\n        if (z) {\n            WebViewApp.getCurrentApp().sendEvent(WebViewEventCategory.ADUNIT, AdUnitEvent.ON_FOCUS_GAINED, Integer.valueOf(this._activityId));\n        } else {\n            WebViewApp.getCurrentApp().sendEvent(WebViewEventCategory.ADUNIT, AdUnitEvent.ON_FOCUS_LOST, Integer.valueOf(this._activityId));\n        }\n        super.onWindowFocusChanged(z);\n    }",
            "children": [
                "<java.lang.Integer: java.lang.Integer valueOf(int)>"
            ]
        },
        "Entry-point: <com.vungle.warren.AdActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        AdContract.AdvertisementPresenter advertisementPresenter = this.presenter;\n        if (advertisementPresenter != null) {\n            advertisementPresenter.handleExit();\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.vungle.warren.AdActivity: void onConfigurationChanged(android.content.res.Configuration)>": {
            "code": "void  onConfigurationChanged(android.content.res.Configuration)  {\n        super.onConfigurationChanged(configuration);\n        if (configuration.orientation == 2) {\n            Log.d(TAG, \"landscape\");\n        } else if (configuration.orientation == 1) {\n            Log.d(TAG, \"portrait\");\n        }\n        AdContract.AdvertisementPresenter advertisementPresenter = this.presenter;\n        if (advertisementPresenter != null) {\n            advertisementPresenter.onViewConfigurationChanged();\n        }\n    }",
            "children": [
                "<android.util.Log: int d(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.vungle.warren.AdActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        super.onCreate(bundle);\n        requestWindowFeature(1);\n        getWindow().setFlags(16777216, 16777216);\n        this.placementId = getIntent().getStringExtra(\"placement\");\n        ServiceLocator serviceLocator = ServiceLocator.getInstance(this);\n        if (!((VungleStaticApi) serviceLocator.getService(VungleStaticApi.class)).isInitialized() || bus == null || TextUtils.isEmpty(this.placementId)) {\n            finish();\n            return;\n        }\n        try {\n            FullAdWidget fullAdWidget = new FullAdWidget(this, getWindow());\n            this.presenterFactory = (PresentationFactory) serviceLocator.getService(PresentationFactory.class);\n            this.state = bundle == null ? null : (OptionsState) bundle.getParcelable(PRESENTER_STATE);\n            this.presenterFactory.getFullScreenPresentation(this, this.placementId, fullAdWidget, this.state, new CloseDelegate() { // from class: com.vungle.warren.AdActivity.1\n                @Override // com.vungle.warren.ui.CloseDelegate\n                public void close() {\n                    AdActivity.this.finish();\n                }\n            }, new OrientationDelegate() { // from class: com.vungle.warren.AdActivity.2\n                @Override // com.vungle.warren.ui.OrientationDelegate\n                public void setOrientation(int i) {\n                    AdActivity.this.setRequestedOrientation(i);\n                }\n            }, bundle, this.fullscreenCallback);\n            setContentView(fullAdWidget, fullAdWidget.getLayoutParams());\n            connectBroadcastReceiver();\n        } catch (InstantiationException unused) {\n            deliverError(10, this.placementId);\n            finish();\n        }\n    }",
            "children": [
                "<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>"
            ]
        },
        "Entry-point: <com.vungle.warren.AdActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        LocalBroadcastManager.getInstance(getApplicationContext()).unregisterReceiver(this.broadcastReceiver);\n        AdContract.AdvertisementPresenter advertisementPresenter = this.presenter;\n        if (advertisementPresenter != null) {\n            advertisementPresenter.detach(isChangingConfigurations());\n        } else {\n            PresentationFactory presentationFactory = this.presenterFactory;\n            if (presentationFactory != null) {\n                presentationFactory.destroy();\n                this.presenterFactory = null;\n                AdContract.AdvertisementPresenter.EventListener eventListener = bus;\n                if (eventListener != null) {\n                    eventListener.onError(new VungleException(25), this.placementId);\n                }\n            }\n        }\n        super.onDestroy();\n    }",
            "children": [
                "<androidx.localbroadcastmanager.content.LocalBroadcastManager: androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context)>"
            ]
        },
        "Entry-point: <com.vungle.warren.AdActivity: void onNewIntent(android.content.Intent)>": {
            "code": "void  onNewIntent(android.content.Intent)  {\n        super.onNewIntent(intent);\n        String stringExtra = getIntent().getStringExtra(\"placement\");\n        String stringExtra2 = intent.getStringExtra(\"placement\");\n        if (stringExtra == null || stringExtra2 == null || stringExtra.equals(stringExtra2)) {\n            return;\n        }\n        Log.d(TAG, \"Tried to play another placement \" + stringExtra2 + \" while playing \" + stringExtra);\n        deliverError(15, stringExtra2);\n        StringBuilder sb = new StringBuilder();\n        sb.append(AdActivity.class.getSimpleName());\n        sb.append(\"#onNewIntent\");\n        VungleLogger.warn(sb.toString(), String.format(\"Tried to play another placement %1$s while playing %2$s\", stringExtra2, stringExtra));\n    }",
            "children": [
                "<com.vungle.warren.VungleLogger: void warn(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.vungle.warren.AdActivity: void onPause()>": {
            "code": "void  onPause()  {\n        super.onPause();\n        this.resumed = false;\n        stop();\n    }",
            "children": []
        },
        "Entry-point: <com.vungle.warren.AdActivity: void onRestoreInstanceState(android.os.Bundle)>": {
            "code": "void  onRestoreInstanceState(android.os.Bundle)  {\n        AdContract.AdvertisementPresenter advertisementPresenter;\n        super.onRestoreInstanceState(bundle);\n        Log.d(TAG, \"onRestoreInstanceState(\" + bundle + \")\");\n        if (bundle == null || (advertisementPresenter = this.presenter) == null) {\n            return;\n        }\n        advertisementPresenter.restoreFromSave((OptionsState) bundle.getParcelable(PRESENTER_STATE));\n    }",
            "children": [
                "<java.lang.StringBuilder: void <init>()>"
            ]
        },
        "Entry-point: <com.vungle.warren.AdActivity: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n        this.resumed = true;\n        start();\n    }",
            "children": []
        },
        "Entry-point: <com.vungle.warren.AdActivity: void onSaveInstanceState(android.os.Bundle)>": {
            "code": "void  onSaveInstanceState(android.os.Bundle)  {\n        Log.d(TAG, \"onSaveInstanceState\");\n        BundleOptionsState bundleOptionsState = new BundleOptionsState();\n        AdContract.AdvertisementPresenter advertisementPresenter = this.presenter;\n        if (advertisementPresenter != null) {\n            advertisementPresenter.generateSaveState(bundleOptionsState);\n            bundle.putParcelable(PRESENTER_STATE, bundleOptionsState);\n        }\n        PresentationFactory presentationFactory = this.presenterFactory;\n        if (presentationFactory != null) {\n            presentationFactory.saveState(bundle);\n        }\n        super.onSaveInstanceState(bundle);\n    }",
            "children": [
                "<android.util.Log: int d(java.lang.String,java.lang.String)>"
            ]
        },
        "Entry-point: <com.vungle.warren.AdActivity: void onWindowFocusChanged(boolean)>": {
            "code": "void  onWindowFocusChanged(boolean)  {\n        super.onWindowFocusChanged(z);\n        if (z) {\n            start();\n        } else {\n            stop();\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.vungle.warren.AdActivity: void setRequestedOrientation(int)>": {
            "code": "void  setRequestedOrientation(int)  {\n        if (canRotate()) {\n            super.setRequestedOrientation(i);\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.yandex.mobile.ads.AdActivity: void onBackPressed()>": {
            "code": "void  onBackPressed()  {\n        k kVar = this.c;\n        if (kVar == null || kVar.c()) {\n            super.onBackPressed();\n        }\n    }",
            "children": []
        },
        "Entry-point: <com.yandex.mobile.ads.AdActivity: void onCreate(android.os.Bundle)>": {
            "code": "void  onCreate(android.os.Bundle)  {\n        k kVar;\n        super.onCreate(bundle);\n        this.b = new RelativeLayout(this);\n        RelativeLayout relativeLayout = this.b;\n        Intent intent = getIntent();\n        if (intent != null) {\n            Window window = getWindow();\n            kVar = m.a().a(this, relativeLayout, new p(this, a(intent)), intent, window);\n        } else {\n            kVar = null;\n        }\n        this.c = kVar;\n        k kVar2 = this.c;\n        if (kVar2 != null) {\n            kVar2.a();\n            this.c.b();\n            setContentView(this.b);\n            return;\n        }\n        finish();\n    }",
            "children": [
                "<com.yandex.mobile.ads.impl.m: com.yandex.mobile.ads.impl.m a()>"
            ]
        },
        "Entry-point: <com.yandex.mobile.ads.AdActivity: void onDestroy()>": {
            "code": "void  onDestroy()  {\n        k kVar = this.c;\n        if (kVar != null) {\n            kVar.d();\n            this.c.g();\n        }\n        RelativeLayout relativeLayout = this.b;\n        if (relativeLayout != null) {\n            relativeLayout.removeAllViews();\n        }\n        super.onDestroy();\n    }",
            "children": []
        },
        "Entry-point: <com.yandex.mobile.ads.AdActivity: void onPause()>": {
            "code": "void  onPause()  {\n        k kVar = this.c;\n        if (kVar != null) {\n            kVar.f();\n        }\n        super.onPause();\n    }",
            "children": []
        },
        "Entry-point: <com.yandex.mobile.ads.AdActivity: void onResume()>": {
            "code": "void  onResume()  {\n        super.onResume();\n        k kVar = this.c;\n        if (kVar != null) {\n            kVar.e();\n        }\n    }",
            "children": []
        }
    }
}