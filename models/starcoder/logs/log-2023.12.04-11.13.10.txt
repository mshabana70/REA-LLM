Processing APK: com.cuteandtinybabygames.littlefarmlife.free.json
Processing function 1, which looks like this: protected String updateUnityCommandLineArguments(String str) {
        return str;
    }
Processing function 2, which looks like this: public void onCreate(Bundle bundle) {
        requestWindowFeature(1);
        super.onCreate(bundle);
        getIntent().putExtra("unity", updateUnityCommandLineArguments(getIntent().getStringExtra("unity")));
        this.mUnityPlayer = new UnityPlayer(this, this);
        setContentView(this.mUnityPlayer);
        this.mUnityPlayer.requestFocus();
    }
Processing function 3, which looks like this: public void onUnityPlayerUnloaded() {
        moveTaskToBack(true);
    }
Processing function 4, which looks like this: public void onUnityPlayerQuitted() {
        Process.killProcess(Process.myPid());
    }
Processing function 5, which looks like this: public void onNewIntent(Intent intent) {
        setIntent(intent);
        this.mUnityPlayer.newIntent(intent);
    }
Processing function 6, which looks like this: protected void onDestroy() {
        this.mUnityPlayer.destroy();
        super.onDestroy();
    }
Processing function 7, which looks like this: protected void onPause() {
        super.onPause();
        this.mUnityPlayer.pause();
    }
Processing function 8, which looks like this: protected void onResume() {
        super.onResume();
        this.mUnityPlayer.resume();
    }
Processing function 9, which looks like this: public void onLowMemory() {
        super.onLowMemory();
        this.mUnityPlayer.lowMemory();
    }
Processing function 10, which looks like this: public void onTrimMemory(int i) {
        super.onTrimMemory(i);
        if (i == 15) {
            this.mUnityPlayer.lowMemory();
        }
    }
Processing function 11, which looks like this: public void onConfigurationChanged(Configuration configuration) {
        super.onConfigurationChanged(configuration);
        this.mUnityPlayer.configurationChanged(configuration);
    }
Processing function 12, which looks like this: public void onWindowFocusChanged(boolean z) {
        super.onWindowFocusChanged(z);
        this.mUnityPlayer.windowFocusChanged(z);
    }
Processing function 13, which looks like this: public boolean dispatchKeyEvent(KeyEvent keyEvent) {
        if (keyEvent.getAction() == 2) {
            return this.mUnityPlayer.injectEvent(keyEvent);
        }
        return super.dispatchKeyEvent(keyEvent);
    }
Processing function 14, which looks like this: public boolean onKeyUp(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 15, which looks like this: public boolean onKeyDown(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 16, which looks like this: public boolean onTouchEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Processing function 17, which looks like this: public boolean onGenericMotionEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Saving output...
Output saved at /scratch/ms9761/rea-llm/starcoder/outputs/com.cuteandtinybabygames.littlefarmlife.free.json!
Processing APK: com.elvira.ZombieApartment.json
Processing function 1, which looks like this: public boolean dispatchKeyEvent(KeyEvent keyEvent) {
        if (keyEvent.getAction() == 2) {
            return this.mUnityPlayer.injectEvent(keyEvent);
        }
        return super.dispatchKeyEvent(keyEvent);
    }
Processing function 2, which looks like this: public void onConfigurationChanged(Configuration configuration) {
        super.onConfigurationChanged(configuration);
        this.mUnityPlayer.configurationChanged(configuration);
    }
Processing function 3, which looks like this: protected void onCreate(Bundle bundle) {
        requestWindowFeature(1);
        super.onCreate(bundle);
        getIntent().putExtra("unity", updateUnityCommandLineArguments(getIntent().getStringExtra("unity")));
        this.mUnityPlayer = new UnityPlayer(this, this);
        setContentView(this.mUnityPlayer);
        this.mUnityPlayer.requestFocus();
    }
Processing function 4, which looks like this: protected void onDestroy() {
        this.mUnityPlayer.destroy();
        super.onDestroy();
    }
Processing function 5, which looks like this: public boolean onGenericMotionEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Processing function 6, which looks like this: public boolean onKeyDown(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 7, which looks like this: public boolean onKeyUp(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 8, which looks like this: public void onLowMemory() {
        super.onLowMemory();
        this.mUnityPlayer.lowMemory();
    }
Processing function 9, which looks like this: protected void onNewIntent(Intent intent) {
        setIntent(intent);
        this.mUnityPlayer.newIntent(intent);
    }
Processing function 10, which looks like this: protected void onPause() {
        super.onPause();
        this.mUnityPlayer.pause();
    }
Processing function 11, which looks like this: protected void onResume() {
        super.onResume();
        this.mUnityPlayer.resume();
    }
Processing function 12, which looks like this: public boolean onTouchEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Processing function 13, which looks like this: public void onTrimMemory(int i) {
        super.onTrimMemory(i);
        if (i == 15) {
            this.mUnityPlayer.lowMemory();
        }
    }
Processing function 14, which looks like this: public void onUnityPlayerQuitted() {
        Process.killProcess(Process.myPid());
    }
Processing function 15, which looks like this: public void onUnityPlayerUnloaded() {
        moveTaskToBack(true);
    }
Processing function 16, which looks like this: public void onWindowFocusChanged(boolean z) {
        super.onWindowFocusChanged(z);
        this.mUnityPlayer.windowFocusChanged(z);
    }
Processing function 17, which looks like this: protected String updateUnityCommandLineArguments(String str) {
        return str;
    }
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Saving output...
Output saved at /scratch/ms9761/rea-llm/starcoder/outputs/com.elvira.ZombieApartment.json!
Processing APK: com.deskos.ibot.json
Saving output...
Output saved at /scratch/ms9761/rea-llm/starcoder/outputs/com.deskos.ibot.json!
Processing APK: com.erikgilburgapps.subway.princess.endless.running.json
Processing function 1, which looks like this: public boolean dispatchKeyEvent(KeyEvent keyEvent) {
        return keyEvent.getAction() == 2 ? this.mUnityPlayer.injectEvent(keyEvent) : super.dispatchKeyEvent(keyEvent);
    }
Processing function 2, which looks like this: public void onConfigurationChanged(Configuration configuration) {
        super.onConfigurationChanged(configuration);
        this.mUnityPlayer.configurationChanged(configuration);
    }
Processing function 3, which looks like this: protected void onCreate(Bundle bundle) {
        requestWindowFeature(1);
        super.onCreate(bundle);
        this.mUnityPlayer = new UnityPlayer(this);
        setContentView(this.mUnityPlayer);
        this.mUnityPlayer.requestFocus();
    }
Processing function 4, which looks like this: protected void onDestroy() {
        this.mUnityPlayer.destroy();
        super.onDestroy();
    }
Processing function 5, which looks like this: public boolean onGenericMotionEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Processing function 6, which looks like this: public boolean onKeyDown(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 7, which looks like this: public boolean onKeyUp(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 8, which looks like this: public void onLowMemory() {
        super.onLowMemory();
        this.mUnityPlayer.lowMemory();
    }
Processing function 9, which looks like this: protected void onNewIntent(Intent intent) {
        setIntent(intent);
    }
Processing function 10, which looks like this: protected void onPause() {
        super.onPause();
        this.mUnityPlayer.pause();
    }
Processing function 11, which looks like this: protected void onResume() {
        super.onResume();
        this.mUnityPlayer.resume();
    }
Processing function 12, which looks like this: protected void onStart() {
        super.onStart();
        this.mUnityPlayer.start();
    }
Processing function 13, which looks like this: protected void onStop() {
        super.onStop();
        this.mUnityPlayer.stop();
    }
Processing function 14, which looks like this: public boolean onTouchEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Processing function 15, which looks like this: public void onTrimMemory(int i) {
        super.onTrimMemory(i);
        if (i == 15) {
            this.mUnityPlayer.lowMemory();
        }
    }
Processing function 16, which looks like this: public void onWindowFocusChanged(boolean z) {
        super.onWindowFocusChanged(z);
        this.mUnityPlayer.windowFocusChanged(z);
    }
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Saving output...
Output saved at /scratch/ms9761/rea-llm/starcoder/outputs/com.erikgilburgapps.subway.princess.endless.running.json!
Processing APK: com.yoo.twand.wdxm.json
Processing function 1, which looks like this: public void SubmitRoleCreate(String str, int i, String str2, String str3, int i2, String str4, String str5, int i3, int i4, String str6) {
    }
Processing function 2, which looks like this: public void SubmitRoleLevel(String str, int i, String str2, String str3, int i2, String str4, String str5, int i3, int i4, String str6, int i5, int i6, String str7) {
    }
Processing function 3, which looks like this: public void SubmitRoleLogin(String str, int i, String str2, String str3, int i2, String str4, String str5, int i3, int i4, String str6, String str7) {
    }
Processing function 4, which looks like this: public void SubmitRoleLogout(String str, int i, String str2, String str3, int i2, String str4, String str5, int i3, int i4, String str6, String str7) {
    }
Processing function 5, which looks like this: public void SubmitRoleYuanbao(String str, int i, String str2, String str3, int i2, String str4, String str5, int i3, int i4, String str6, int i5, int i6, int i7, String str7, String str8) {
    }
Processing function 6, which looks like this: protected void onCreate(Bundle bundle) {
        requestWindowFeature(1);
        super.onCreate(bundle);
        getWindow().setFormat(2);
        if (this.mUnityPlayer == null) {
            this.mUnityPlayer = new UnityPlayer(this);
        }
        setContentView(this.mUnityPlayer);
        this.mUnityPlayer.requestFocus();
        Arrays.asList(Permission.READ_PHONE_STATE);
        HuChiPlatform.getInstance().init(this, false, null, new HuChiAuthorizeCallback() { // from class: com.youda.xianxia.MainActivity.1
            @Override // huchi.jedigames.platform.HuChiAuthorizeCallback
            public void authorize(boolean z) {
                Log.d(MainActivity.TAG, "authorizeresult =" + z);
                JSONObject jSONObject = new JSONObject();
                if (z) {
                    MainActivity.this.CallBackResults("AUTHORIZATION_SUCCESS", jSONObject);
                } else {
                    MainActivity.this.CallBackResults("AUTHORIZATION_FAIL", jSONObject);
                }
            }
Processing function 7, which looks like this: public void callback(int i, HuChiUserInfo huChiUserInfo, Map<String, Object> map) {
                JSONObject jSONObject = new JSONObject();
                if (i == 0) {
                    try {
                        jSONObject.put("user_id", huChiUserInfo.getUserId());
                        jSONObject.put(HuChiConst.TOKEN, huChiUserInfo.getUserToken());
                        jSONObject.put("nickname", huChiUserInfo.getUserNickName());
                        jSONObject.put("headurl", huChiUserInfo.getHeadurl());
                        jSONObject.put(HuChiConst.TIMESTAMP, huChiUserInfo.getTime());
                        jSONObject.put(HuChiConst.SIGN, huChiUserInfo.getSign());
                        jSONObject.put("is_bind_fb", huChiUserInfo.getIsBindFB());
                        jSONObject.put("is_bind_google", huChiUserInfo.getIsBindGoogle());
                        if (map != null) {
                            for (String str : map.keySet()) {
                                if (jSONObject.get(str) == null) {
                                    jSONObject.put(str, map.get(str));
                                }
                            }
Processing function 8, which looks like this: public void CallBackResults(String str, JSONObject jSONObject) {
        if (jSONObject == null) {
            return;
        }
        String jSONObject2 = jSONObject.toString();
        Log.d(TAG, "HuichiSDKCallback" + str + jSONObject2);
        UnityPlayer.UnitySendMessage("CabbageSdkMgr", "_CabbageSDKCallback", str + "#" + jSONObject2);
    }
Processing function 9, which looks like this: protected void onStart() {
        super.onStart();
        this.mUnityPlayer.resume();
        onWindowFocusChanged(true);
    }
Processing function 10, which looks like this: protected void onRestart() {
        super.onRestart();
    }
Processing function 11, which looks like this: protected void onResume() {
        super.onResume();
        this.mUnityPlayer.resume();
        HuChiPlatform.getInstance().onResume();
        Adjust.onResume();
    }
Processing function 12, which looks like this: protected void onPause() {
        super.onPause();
        this.mUnityPlayer.pause();
        HuChiPlatform.getInstance().onPause();
        Adjust.onPause();
    }
Processing function 13, which looks like this: protected void onStop() {
        super.onStop();
        this.mUnityPlayer.stop();
    }
Processing function 14, which looks like this: protected void onDestroy() {
        this.mUnityPlayer.quit();
        super.onDestroy();
        HuChiPlatform.getInstance().onDestroy();
    }
Processing function 15, which looks like this: protected void onNewIntent(Intent intent) {
        super.onNewIntent(intent);
    }
Processing function 16, which looks like this: protected void onActivityResult(int i, int i2, Intent intent) {
        super.onActivityResult(i, i2, intent);
        HuChiPlatform.getInstance().onActivityResult(i, i2, intent);
    }
Processing function 17, which looks like this: public void onLowMemory() {
        super.onLowMemory();
        this.mUnityPlayer.lowMemory();
    }
Processing function 18, which looks like this: public void onTrimMemory(int i) {
        super.onTrimMemory(i);
        if (i == 15) {
            this.mUnityPlayer.lowMemory();
        }
    }
Processing function 19, which looks like this: public void onConfigurationChanged(Configuration configuration) {
        super.onConfigurationChanged(configuration);
        this.mUnityPlayer.configurationChanged(configuration);
    }
Processing function 20, which looks like this: public void onWindowFocusChanged(boolean z) {
        if (z) {
            NotchTools.getFullScreenTools().fullScreenUseStatusForOnWindowFocusChanged(this);
        }
        super.onWindowFocusChanged(z);
        this.mUnityPlayer.windowFocusChanged(z);
    }
Processing function 21, which looks like this: public boolean dispatchKeyEvent(KeyEvent keyEvent) {
        if (keyEvent.getAction() == 2) {
            return this.mUnityPlayer.injectEvent(keyEvent);
        }
        return super.dispatchKeyEvent(keyEvent);
    }
Processing function 22, which looks like this: public boolean onKeyUp(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 23, which looks like this: public boolean onKeyDown(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 24, which looks like this: public boolean onTouchEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Processing function 25, which looks like this: public boolean onGenericMotionEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Processing function 26, which looks like this: public String GetSdkParam(String str) {
        char c;
        switch (str.hashCode()) {
            case -1613589672:
                if (str.equals(HuChiConst.LANGUAGE)) {
                    c = '\f';
                    break;
                }
                c = 65535;
                break;
            case -1253236595:
                if (str.equals("gameID")) {
                    c = 7;
                    break;
                }
                c = 65535;
                break;
            case -982388107:
                if (str.equals(HuChiConst.DEVICE_SCREEN)) {
                    c = 5;
                    break;
                }
                c = 65535;
                break;
            case -962026440:
                if (str.equals(HuChiConst.DEVICE_SYSTEM)) {
                    c = 3;
                    break;
                }
                c = 65535;
                break;
            case -430672561:
                if (str.equals("loginFacebook")) {
                    c = 15;
                    break;
                }
                c = 65535;
                break;
            case -290385993:
                if (str.equals("thirdChannelID")) {
                    c = '\b';
                    break;
                }
                c = 65535;
                break;
            case 3236040:
                if (str.equals(HuChiConst.IMEI)) {
                    c = 0;
                    break;
                }
                c = 65535;
                break;
            case 25209965:
                if (str.equals(HuChiConst.DEVICE_OS)) {
                    c = 2;
                    break;
                }
                c = 65535;
                break;
            case 111887144:
                if (str.equals("thirdChannelFlag")) {
                    c = '\t';
                    break;
                }
                c = 65535;
                break;
            case 127178275:
                if (str.equals("bindFacebook")) {
                    c = 14;
                    break;
                }
                c = 65535;
                break;
            case 312707936:
                if (str.equals("loginPreFacebook")) {
                    c = 16;
                    break;
                }
                c = 65535;
                break;
            case 781508125:
                if (str.equals(HuChiConst.DEVICE_NUM)) {
                    c = 1;
                    break;
                }
                c = 65535;
                break;
            case 887439393:
                if (str.equals(HuChiConst.DEVICE_FACTORY)) {
                    c = 4;
                    break;
                }
                c = 65535;
                break;
            case 908759025:
                if (str.equals("packageName")) {
                    c = 11;
                    break;
                }
                c = 65535;
                break;
            case 1291538547:
                if (str.equals(HuChiConst.NET_WORK)) {
                    c = 6;
                    break;
                }
                c = 65535;
                break;
            case 1311299344:
                if (str.equals("isFirstOpen")) {
                    c = TokenParser.CR;
                    break;
                }
                c = 65535;
                break;
            case 1802060801:
                if (str.equals("packageId")) {
                    c = '\n';
                    break;
                }
                c = 65535;
                break;
            default:
                c = 65535;
                break;
        }
Processing function 27, which looks like this: public void Login() {
        Log.d(TAG, "HuichiSDK Login()");
        runOnUiThread(new Runnable() { // from class: com.youda.xianxia.MainActivity.3
            @Override // java.lang.Runnable
            public void run() {
                HuChiPlatform.getInstance().doLogin();
            }
        }
Processing function 28, which looks like this: public void GuestLogin() {
        Log.d(TAG, "HuichiSDK GuestLogin()");
        runOnUiThread(new Runnable() { // from class: com.youda.xianxia.MainActivity.4
            @Override // java.lang.Runnable
            public void run() {
                HuChiPlatform.getInstance().doGuestLogin();
            }
        }
Processing function 29, which looks like this: public void Logout() {
        Log.d(TAG, "HuichiSDK Logout()");
        runOnUiThread(new Runnable() { // from class: com.youda.xianxia.MainActivity.5
            @Override // java.lang.Runnable
            public void run() {
                HuChiPlatform.getInstance().doLogout();
            }
        }
Processing function 30, which looks like this: public void ExitApp() {
        Log.d(TAG, "CabbageSDK ExitApp()");
        runOnUiThread(new Runnable() { // from class: com.youda.xianxia.MainActivity.6
            @Override // java.lang.Runnable
            public void run() {
                HuChiPlatform.getInstance().doExit(new HuChiExitCallback() { // from class: com.youda.xianxia.MainActivity.6.1
                    @Override // huchi.jedigames.platform.HuChiExitCallback
                    public void onExit(int i, String str) {
                        JSONObject jSONObject = new JSONObject();
                        try {
                            jSONObject.put("code", i);
                            jSONObject.put(NotificationCompat.CATEGORY_MESSAGE, str);
                        } catch (JSONException e) {
                            e.printStackTrace();
                        }
                        if (i == 0) {
                            MainActivity.this.CallBackResults("EXIT_SUCCESS", jSONObject);
                        } else if (i == 2) {
                            MainActivity.this.CallBackResults("EXIT_SELF", jSONObject);
                        } else {
                            MainActivity.this.CallBackResults("EXIT_FAIL", jSONObject);
                        }
                    }
Processing function 31, which looks like this: public void Pay(String str, String str2, String str3, String str4, String str5, String str6, String str7, String str8, String str9, int i, boolean z, int i2) {
        Log.d(TAG, "HuichiSDK Pay()");
        HuChipayInfo huChipayInfo = new HuChipayInfo();
        huChipayInfo.user_id = str;
        huChipayInfo.goods_id = str3;
        huChipayInfo.goods_name = str2;
        huChipayInfo.amount = Float.parseFloat(str4);
        huChipayInfo.game_trade_no = str5;
        huChipayInfo.server_id = str6;
        huChipayInfo.server_name = str7;
        huChipayInfo.role_id = str8;
        huChipayInfo.role_name = str9;
        huChipayInfo.role_level = i;
        huChipayInfo.is_first_charge = z;
        huChipayInfo.exchange_rate = i2;
        HuChiPlatform.getInstance().doPay(huChipayInfo, new HuChiPayCallback() { // from class: com.youda.xianxia.MainActivity.7
            @Override // huchi.jedigames.platform.HuChiPayCallback
            public void callback(int i3, String str10) {
                JSONObject jSONObject = new JSONObject();
                try {
                    jSONObject.put("code", i3);
                    jSONObject.put(NotificationCompat.CATEGORY_MESSAGE, str10);
                } catch (JSONException e) {
                    e.printStackTrace();
                }
                if (i3 == 0) {
                    MainActivity.this.CallBackResults("PAY_SUCCESS", jSONObject);
                } else {
                    MainActivity.this.CallBackResults("PAY_FAIL", jSONObject);
                }
            }
Processing function 32, which looks like this: public void Authorize(String str, boolean z) {
        if (Build.VERSION.SDK_INT < 23) {
            return;
        }
        runOnUiThread(new Runnable() { // from class: com.youda.xianxia.MainActivity.8
            @Override // java.lang.Runnable
            public void run() {
            }
        }
Processing function 33, which looks like this: public void QuitApp() {
        Log.d(TAG, "HuichiSDK QuitApp()");
        runOnUiThread(new Runnable() { // from class: com.youda.xianxia.MainActivity.9
            @Override // java.lang.Runnable
            public void run() {
                MainActivity.this.finish();
                Process.killProcess(Process.myPid());
                System.exit(0);
            }
        }
Processing function 34, which looks like this: public void ApkReinstallActive(String str) {
        File file = new File(str);
        if (file.exists()) {
            Intent intent = new Intent("android.intent.action.VIEW");
            intent.setDataAndType(Uri.parse("file://" + file.toString()), "application/vnd.android.package-archive");
            intent.setFlags(268435456);
            startActivity(intent);
            finish();
            Process.killProcess(Process.myPid());
            System.exit(0);
        }
    }
Processing function 35, which looks like this: public boolean IsInstalled(String str) {
        boolean z;
        Iterator<ApplicationInfo> it = getPackageManager().getInstalledApplications(0).iterator();
        while (true) {
            if (it.hasNext()) {
                if (str.equals(it.next().packageName)) {
                    z = true;
                    break;
                }
            }
Processing function 36, which looks like this: public String ReadMetaDataFromApplication(String str) {
        try {
            String string = getPackageManager().getApplicationInfo(getPackageName(), 128).metaData.getString(str);
            Log.d(TAG, "readMetaDataFromApplication" + str + string);
            return string;
        } catch (PackageManager.NameNotFoundException e) {
            e.printStackTrace();
            return "";
        }
    }
Processing function 37, which looks like this: public void CallPhone(String str) {
        Intent intent = new Intent();
        intent.setAction("android.intent.action.CALL");
        intent.setData(Uri.parse(str));
        startActivity(intent);
    }
Processing function 38, which looks like this: public void OpenQQ(String str) {
        if (IsInstalled("com.tencent.qqlite") || IsInstalled("com.tencent.mobileqq")) {
            try {
                startActivity(new Intent("android.intent.action.VIEW", Uri.parse(str)));
                return;
            } catch (Exception unused) {
                return;
            }
        }
Processing function 39, which looks like this: public void FaceBookShare(String str, String str2) {
        HuChiPlatform.getInstance().fbShare(Uri.parse(str), str2, new HuChiShareCallback() { // from class: com.youda.xianxia.MainActivity.10
            @Override // huchi.jedigames.platform.HuChiShareCallback
            public void callback(int i) {
                JSONObject jSONObject = new JSONObject();
                try {
                    jSONObject.put("code", i);
                } catch (JSONException e) {
                    e.printStackTrace();
                }
                if (i == 0) {
                    MainActivity.this.CallBackResults("SHARE_SUCCESS", jSONObject);
                } else {
                    MainActivity.this.CallBackResults("SHARE_FAIL", jSONObject);
                }
            }
Processing function 40, which looks like this: public void FaceBookBind() {
        Log.d(TAG, "FaceBookBind()");
        runOnUiThread(new Runnable() { // from class: com.youda.xianxia.MainActivity.11
            @Override // java.lang.Runnable
            public void run() {
                HuChiPlatform.getInstance().showBindOrSwitch();
            }
        }
Processing function 41, which looks like this: public void GoogleBind() {
        Log.d(TAG, "GoogleBind()");
        runOnUiThread(new Runnable() { // from class: com.youda.xianxia.MainActivity.12
            @Override // java.lang.Runnable
            public void run() {
                HuChiPlatform.getInstance().showBindOrSwitch();
            }
        }
Processing function 42, which looks like this: public void AccountSetting() {
        Log.d(TAG, "AccountSetting()");
        runOnUiThread(new Runnable() { // from class: com.youda.xianxia.MainActivity.13
            @Override // java.lang.Runnable
            public void run() {
                HuChiPlatform.getInstance().showBindOrSwitch();
            }
        }
Processing function 43, which looks like this: public String NotchScreen() {
        int i;
        int i2;
        int i3;
        boolean isNotchEnable = NotchTools.getFullScreenTools().isNotchEnable(this);
        int i4 = 0;
        if (isNotchEnable) {
            Rect safeArea = NotchTools.getFullScreenTools().getSafeArea(this);
            int i5 = safeArea.left;
            i2 = safeArea.top;
            i3 = safeArea.right;
            i = safeArea.bottom;
            i4 = i5;
        } else {
            i = 0;
            i2 = 0;
            i3 = 0;
        }
        String str = isNotchEnable + "#" + i4 + "#" + i2 + "#" + i3 + "#" + i;
        Log.d(TAG, str);
        return str;
    }
Processing function 44, which looks like this: public void AdjustTrackNormalEvent(String str) {
        Adjust.trackEvent(new AdjustEvent(str));
    }
Processing function 45, which looks like this: public void AdjustTrackPayEvent(String str, float f, String str2) {
        AdjustEvent adjustEvent = new AdjustEvent(str);
        adjustEvent.setRevenue(f, str2);
        Adjust.trackEvent(adjustEvent);
    }
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Saving output...
Output saved at /scratch/ms9761/rea-llm/starcoder/outputs/com.yoo.twand.wdxm.json!
Processing APK: com.ESV_GameStudio.CrazyKnifeHit2.json
Processing function 1, which looks like this: public void onUnityPlayerQuitted() {
    }
Processing function 2, which looks like this: protected String updateUnityCommandLineArguments(String str) {
        return str;
    }
Processing function 3, which looks like this: public void onCreate(Bundle bundle) {
        requestWindowFeature(1);
        super.onCreate(bundle);
        getIntent().putExtra("unity", updateUnityCommandLineArguments(getIntent().getStringExtra("unity")));
        UnityPlayer unityPlayer = new UnityPlayer(this, this);
        this.mUnityPlayer = unityPlayer;
        setContentView(unityPlayer);
        this.mUnityPlayer.requestFocus();
    }
Processing function 4, which looks like this: public void onUnityPlayerUnloaded() {
        moveTaskToBack(true);
    }
Processing function 5, which looks like this: protected void onNewIntent(Intent intent) {
        setIntent(intent);
        this.mUnityPlayer.newIntent(intent);
    }
Processing function 6, which looks like this: protected void onDestroy() {
        this.mUnityPlayer.destroy();
        super.onDestroy();
    }
Processing function 7, which looks like this: protected void onPause() {
        super.onPause();
        this.mUnityPlayer.pause();
    }
Processing function 8, which looks like this: protected void onResume() {
        super.onResume();
        this.mUnityPlayer.resume();
    }
Processing function 9, which looks like this: public void onLowMemory() {
        super.onLowMemory();
        this.mUnityPlayer.lowMemory();
    }
Processing function 10, which looks like this: public void onTrimMemory(int i) {
        super.onTrimMemory(i);
        if (i == 15) {
            this.mUnityPlayer.lowMemory();
        }
    }
Processing function 11, which looks like this: public void onConfigurationChanged(Configuration configuration) {
        super.onConfigurationChanged(configuration);
        this.mUnityPlayer.configurationChanged(configuration);
    }
Processing function 12, which looks like this: public void onWindowFocusChanged(boolean z) {
        super.onWindowFocusChanged(z);
        this.mUnityPlayer.windowFocusChanged(z);
    }
Processing function 13, which looks like this: public boolean dispatchKeyEvent(KeyEvent keyEvent) {
        if (keyEvent.getAction() == 2) {
            return this.mUnityPlayer.injectEvent(keyEvent);
        }
        return super.dispatchKeyEvent(keyEvent);
    }
Processing function 14, which looks like this: public boolean onKeyUp(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 15, which looks like this: public boolean onKeyDown(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 16, which looks like this: public boolean onTouchEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Processing function 17, which looks like this: public boolean onGenericMotionEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Saving output...
Output saved at /scratch/ms9761/rea-llm/starcoder/outputs/com.ESV_GameStudio.CrazyKnifeHit2.json!
Processing APK: com.DungeonCrawler.DungeonKingDos.json
Processing function 1, which looks like this: public void onUnityPlayerQuitted() {
    }
Processing function 2, which looks like this: protected String updateUnityCommandLineArguments(String str) {
        return str;
    }
Processing function 3, which looks like this: protected void onCreate(Bundle bundle) {
        requestWindowFeature(1);
        super.onCreate(bundle);
        getIntent().putExtra("unity", updateUnityCommandLineArguments(getIntent().getStringExtra("unity")));
        UnityPlayer unityPlayer = new UnityPlayer(this, this);
        this.mUnityPlayer = unityPlayer;
        setContentView(unityPlayer);
        this.mUnityPlayer.requestFocus();
    }
Processing function 4, which looks like this: public void onUnityPlayerUnloaded() {
        moveTaskToBack(true);
    }
Processing function 5, which looks like this: protected void onNewIntent(Intent intent) {
        setIntent(intent);
        this.mUnityPlayer.newIntent(intent);
    }
Processing function 6, which looks like this: protected void onDestroy() {
        this.mUnityPlayer.destroy();
        super.onDestroy();
    }
Processing function 7, which looks like this: protected void onPause() {
        super.onPause();
        this.mUnityPlayer.pause();
    }
Processing function 8, which looks like this: protected void onResume() {
        super.onResume();
        this.mUnityPlayer.resume();
    }
Processing function 9, which looks like this: public void onLowMemory() {
        super.onLowMemory();
        this.mUnityPlayer.lowMemory();
    }
Processing function 10, which looks like this: public void onTrimMemory(int i) {
        super.onTrimMemory(i);
        if (i == 15) {
            this.mUnityPlayer.lowMemory();
        }
    }
Processing function 11, which looks like this: public void onConfigurationChanged(Configuration configuration) {
        super.onConfigurationChanged(configuration);
        this.mUnityPlayer.configurationChanged(configuration);
    }
Processing function 12, which looks like this: public void onWindowFocusChanged(boolean z) {
        super.onWindowFocusChanged(z);
        this.mUnityPlayer.windowFocusChanged(z);
    }
Processing function 13, which looks like this: public boolean dispatchKeyEvent(KeyEvent keyEvent) {
        if (keyEvent.getAction() == 2) {
            return this.mUnityPlayer.injectEvent(keyEvent);
        }
        return super.dispatchKeyEvent(keyEvent);
    }
Processing function 14, which looks like this: public boolean onKeyUp(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 15, which looks like this: public boolean onKeyDown(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 16, which looks like this: public boolean onTouchEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Processing function 17, which looks like this: public boolean onGenericMotionEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Saving output...
Output saved at /scratch/ms9761/rea-llm/starcoder/outputs/com.DungeonCrawler.DungeonKingDos.json!
Processing APK: com.burgerizzr.app.json
Processing function 1, which looks like this: public void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        setContentView(R.layout.splash_screen);
        this.splash_logo = (GifImageView) findViewById(R.id.splash_logo);
        startService(new Intent(this, FirebaseService.class));
        boolean equals = "en".equals(LocaleUtil.getLanguage());
        Log.e("isenglish", String.valueOf(equals));
        TextView textView = (TextView) findViewById(R.id.tv_text);
        if (equals) {
            textView.setText(getResources().getString(R.string.very_fresh_en));
            textView.setTypeface(FontUtil.getInstance().getRomanDefault(true));
        } else {
            textView.setText(getResources().getString(R.string.very_fresh_ar));
        }
        if (Build.VERSION.SDK_INT >= 23) {
            if (ContextCompat.checkSelfPermission(this, "android.permission.READ_PHONE_STATE") == 0) {
                this.finishing = true;
                init();
                return;
            }
            requestPermissions(new String[]{"android.permission.READ_PHONE_STATE"}, 100);
            return;
        }
Processing function 2, which looks like this: public void onResume() {
        super.onResume();
    }
Processing function 3, which looks like this: public void onRequestPermissionsResult(int i, String[] strArr, int[] iArr) {
        super.onRequestPermissionsResult(i, strArr, iArr);
        if (i != 100) {
            return;
        }
        this.finishing = true;
        init();
    }
Processing function 4, which looks like this: private void init() {
        McxLogin with = McxLogin.with(this);
        if (Auth.getInstance().isLoggedIn()) {
            with.login();
        } else {
            with.register();
        }
        this.utilApi = UtilitiesApi.call(this, false);
        this.menuApi = MenuApi.call(this, false);
        Auth.getInstance().getMenuId();
        Auth.getInstance().getConcept();
        callApi();
    }
Processing function 5, which looks like this: public void onPause() {
        super.onPause();
        CustomDialog customDialog = this.dialog;
        if (customDialog != null && customDialog.isShowing()) {
            this.dialog.dismiss();
        }
        if (this.finishing) {
            finish();
        }
    }
Processing function 6, which looks like this: public void onStop() {
        super.onStop();
        CustomDialog customDialog = this.dialog;
        if (customDialog != null && customDialog.isShowing()) {
            this.dialog.dismiss();
        }
        UtilitiesApi utilitiesApi = this.utilApi;
        if (utilitiesApi != null) {
            utilitiesApi.forceStop();
        }
        MenuApi menuApi = this.menuApi;
        if (menuApi != null) {
            menuApi.forceStop();
        }
    }
Processing function 7, which looks like this: public void onBackPressed() {
        super.onBackPressed();
        Process.killProcess(Process.myPid());
    }
Processing function 8, which looks like this: public void callApi() {
        this.utilApi.getTranslations(new ApiInterface.TranslationsListener() { // from class: com.burgerizzr.app.SplashScreen.1
            @Override // com.burgerizzr.app.api.ApiInterface.TranslationsListener
            public void onException() {
            }

            @Override // com.burgerizzr.app.api.ApiInterface.TranslationsListener
            public void onSuccess() {
                SplashScreen.this.callMenu();
            }

            @Override // com.burgerizzr.app.api.ApiInterface.TranslationsListener
            public void onError() {
                if (SplashScreen.this.doneInForegroung) {
                    SplashScreen.this.showErrorDialog();
                }
            }
Processing function 9, which looks like this: public void callMenu() {
        ApplicationsApiCall.getInstance().getApplication(new ApiInterface.ApplicationRequestListener() { // from class: com.burgerizzr.app.SplashScreen.2
            @Override // com.burgerizzr.app.api.ApiInterface.ApplicationRequestListener
            public void onSuccess(Object obj) {
                try {
                    JSONObject jSONObject = new JSONObject(obj.toString());
                    JSONObject jSONObject2 = jSONObject.getJSONObject("data");
                    AppLogger.printJSONObject("app ", jSONObject2);
                    Auth.getInstance().setApplication((Application) new Gson().fromJson(jSONObject2.toString(), new TypeToken<Application>() { // from class: com.burgerizzr.app.SplashScreen.2.1
                    }.getType()));
                    if (jSONObject.has("included") && !jSONObject.isNull("included")) {
                        JSONArray jSONArray = jSONObject.getJSONArray("included");
                        if (jSONArray.length() > 0) {
                            Auth.getInstance().setConcept(Concept.parse(jSONArray.getJSONObject(0)));
                            SplashScreen.this.menuApi.splashCalls(new ApiInterface.ApiRequestListener() { // from class: com.burgerizzr.app.SplashScreen.2.2
                                @Override // com.burgerizzr.app.api.ApiInterface.ApiRequestListener
                                public void onSuccess() {
                                    if (SplashScreen.this.doneInForegroung) {
                                        SplashScreen.this.startActivity(new Intent(SplashScreen.this, MainActivity.class));
                                    }
                                }
Processing function 10, which looks like this: public void onError() {
                                    if (SplashScreen.this.doneInForegroung) {
                                        SplashScreen.this.showErrorDialog();
                                    }
                                }
Processing function 11, which looks like this: public void onError(Object obj) {
                AppLogger.printRetrofitError(obj);
                if (SplashScreen.this.doneInForegroung) {
                    SplashScreen.this.showErrorDialog();
                }
            }
Processing function 12, which looks like this: public void showErrorDialog() {
        String string;
        try {
            if (!DevUtils.isNetworkAvailable(this)) {
                string = getString(R.string.no_network_connection);
            } else {
                string = getString(R.string.unexpected_error);
            }
            CustomDialogObject customDialogObject = new CustomDialogObject(false, getString(17039380), string, "", DBHandler.getInstance().getTranslation(TEXT.OK), true, false);
            CustomDialog.OnActionSelectedListener onActionSelectedListener = new CustomDialog.OnActionSelectedListener() { // from class: com.burgerizzr.app.SplashScreen.3
                @Override // com.burgerizzr.app.dialog.CustomDialog.OnActionSelectedListener
                public void onClickButtonOne(Dialog dialog) {
                    SplashScreen.this.callApi();
                    dialog.dismiss();
                }

                @Override // com.burgerizzr.app.dialog.CustomDialog.OnActionSelectedListener
                public void onClickButtonTwo(Dialog dialog) {
                    SplashScreen.this.callApi();
                    dialog.dismiss();
                }
            }
Processing function 13, which looks like this: private void showPermissionDialog() {
        CustomDialogObject customDialogObject = new CustomDialogObject(false, getString(17039380), "A message asking to allow this app to make and manage calls will appear after this one. That is only so the app can obtain this device's id and will not make any calls without you knowing it.", "", DBHandler.getInstance().getTranslation(TEXT.OK), true, false);
        CustomDialog.OnActionSelectedListener onActionSelectedListener = new CustomDialog.OnActionSelectedListener() { // from class: com.burgerizzr.app.SplashScreen.4
            @Override // com.burgerizzr.app.dialog.CustomDialog.OnActionSelectedListener
            public void onClickButtonOne(Dialog dialog) {
                dialog.dismiss();
            }

            @Override // com.burgerizzr.app.dialog.CustomDialog.OnActionSelectedListener
            public void onClickButtonTwo(Dialog dialog) {
                if (Build.VERSION.SDK_INT >= 23) {
                    SplashScreen.this.requestPermissions(new String[]{"android.permission.READ_PHONE_STATE"}, 100);
                }
Processing function 14, which looks like this: public void attachBaseContext(Context context) {
        if (context != null) {
            Locale locale = new Locale(LocaleUtil.getLanguage());
            Locale.setDefault(locale);
            context = LocaleUtil.getInstance().wrap(context, locale);
        }
        super.attachBaseContext(context);
    }
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Saving output...
Output saved at /scratch/ms9761/rea-llm/starcoder/outputs/com.burgerizzr.app.json!
Processing APK: com.DefaultCompany.FlyFlytillYouScore.json
Processing function 1, which looks like this: public void onUnityPlayerQuitted() {
    }
Processing function 2, which looks like this: protected String updateUnityCommandLineArguments(String str) {
        return str;
    }
Processing function 3, which looks like this: protected void onCreate(Bundle bundle) {
        requestWindowFeature(1);
        super.onCreate(bundle);
        getIntent().putExtra("unity", updateUnityCommandLineArguments(getIntent().getStringExtra("unity")));
        UnityPlayer unityPlayer = new UnityPlayer(this, this);
        this.mUnityPlayer = unityPlayer;
        setContentView(unityPlayer);
        this.mUnityPlayer.requestFocus();
    }
Processing function 4, which looks like this: public void onUnityPlayerUnloaded() {
        moveTaskToBack(true);
    }
Processing function 5, which looks like this: protected void onNewIntent(Intent intent) {
        setIntent(intent);
        this.mUnityPlayer.newIntent(intent);
    }
Processing function 6, which looks like this: protected void onDestroy() {
        this.mUnityPlayer.destroy();
        super.onDestroy();
    }
Processing function 7, which looks like this: protected void onPause() {
        super.onPause();
        this.mUnityPlayer.pause();
    }
Processing function 8, which looks like this: protected void onResume() {
        super.onResume();
        this.mUnityPlayer.resume();
    }
Processing function 9, which looks like this: public void onLowMemory() {
        super.onLowMemory();
        this.mUnityPlayer.lowMemory();
    }
Processing function 10, which looks like this: public void onTrimMemory(int i) {
        super.onTrimMemory(i);
        if (i == 15) {
            this.mUnityPlayer.lowMemory();
        }
    }
Processing function 11, which looks like this: public void onConfigurationChanged(Configuration configuration) {
        super.onConfigurationChanged(configuration);
        this.mUnityPlayer.configurationChanged(configuration);
    }
Processing function 12, which looks like this: public void onWindowFocusChanged(boolean z) {
        super.onWindowFocusChanged(z);
        this.mUnityPlayer.windowFocusChanged(z);
    }
Processing function 13, which looks like this: public boolean dispatchKeyEvent(KeyEvent keyEvent) {
        if (keyEvent.getAction() == 2) {
            return this.mUnityPlayer.injectEvent(keyEvent);
        }
        return super.dispatchKeyEvent(keyEvent);
    }
Processing function 14, which looks like this: public boolean onKeyUp(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 15, which looks like this: public boolean onKeyDown(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 16, which looks like this: public boolean onTouchEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Processing function 17, which looks like this: public boolean onGenericMotionEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Saving output...
Output saved at /scratch/ms9761/rea-llm/starcoder/outputs/com.DefaultCompany.FlyFlytillYouScore.json!
Processing APK: com.aqi.data.json
Processing function 1, which looks like this: public void onPageScrollStateChanged(int i) {
        }
Processing function 2, which looks like this: public void onPageScrolled(int i, float f, int i2) {
        }
Processing function 3, which looks like this: public void onPageSelected(int i) {
            WelcomeActivity.this.addBottomDots(i);
            if (i == WelcomeActivity.this.layouts.length - 1) {
                WelcomeActivity.this.btnNext.setText("GOT IT");
                WelcomeActivity.this.btnGetStarted.setVisibility(0);
                WelcomeActivity.this.btnNext.setVisibility(4);
                return;
            }
            WelcomeActivity.this.btnNext.setText("Next");
            WelcomeActivity.this.btnGetStarted.setVisibility(8);
            WelcomeActivity.this.btnNext.setVisibility(0);
        }
Processing function 4, which looks like this: protected int setLayout() {
        return com.aqi.data.R.layout.activity_welcome;
    }
Processing function 5, which looks like this: public void attachBaseContext(Context context) {
        super.attachBaseContext(ViewPumpContextWrapper.wrap(context));
    }
Processing function 6, which looks like this: public void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        Fabric.with(this, new Crashlytics());
        ButterKnife.bind(this);
    }
Processing function 7, which looks like this: protected void inItViews() {
        activity = this;
        this.ll_view_progress = (LinearLayout) findViewById(com.aqi.data.R.id.ll_view_progress);
        this.viewPager = (ViewPager) findViewById(com.aqi.data.R.id.view_pager);
        this.dotsLayout = (LinearLayout) findViewById(com.aqi.data.R.id.layoutDots);
        this.btnSkip = (TextView) findViewById(com.aqi.data.R.id.btn_skip);
        this.btnNext = (TextView) findViewById(com.aqi.data.R.id.btn_next);
        this.btnGetStarted = (TextView) findViewById(com.aqi.data.R.id.btnGetStarted);
        if (Global.isNetworkConnected(activity)) {
            callApiCheckVersionsNew();
        } else {
            Global.showOkAlertWithFinishMessage(activity, getString(com.aqi.data.R.string.app_name), "No Internet Connection");
        }
    }
Processing function 8, which looks like this: private void callApiCheckVersionsNew() {
        Global.showProgressDialog(this);
        ApiClient.getClient().callApiCheckVersionNew("1", BuildConfig.VERSION_NAME, "application/json").enqueue(new Callback<JsonObject>() { // from class: com.app.aqi.WelcomeActivity.1
            @Override // retrofit2.Callback
            public void onResponse(Call<JsonObject> call, Response<JsonObject> response) {
                Global.dismisLoderDialog();
                if (response.isSuccessful()) {
                    String jsonObject = response.body().toString();
                    try {
                        JSONObject jSONObject = new JSONObject(jsonObject);
                        Global.printLog("VersionRes>>", jsonObject);
                        if (jSONObject.getInt("status") != 0) {
                            WelcomeActivity.this.loadContinueData();
                        } else {
                            Global.showOkAlertWithFinishRedirectPlayStoreMessage(WelcomeActivity.activity, WelcomeActivity.this.getString(com.aqi.data.R.string.app_name), jSONObject.getString("message"));
                        }
                        return;
                    }
Processing function 9, which looks like this: public void onFailure(Call<JsonObject> call, Throwable th) {
                Global.dismisLoderDialog();
                Global.showOkAlertWithMessage(WelcomeActivity.activity, WelcomeActivity.this.getString(com.aqi.data.R.string.network_failed), "");
                call.cancel();
                th.printStackTrace();
            }
Processing function 10, which looks like this: private void callApiCheckVersions() {
        Global.showProgressDialog(activity);
        ApiClient.getClient().callApiCheckVersion("1", BuildConfig.VERSION_NAME, "application/json").enqueue(new Callback<JsonObject>() { // from class: com.app.aqi.WelcomeActivity.2
            @Override // retrofit2.Callback
            public void onResponse(Call<JsonObject> call, Response<JsonObject> response) {
                Global.dismisLoderDialog();
                if (response.isSuccessful()) {
                    String jsonObject = response.body().toString();
                    try {
                        JSONObject jSONObject = new JSONObject(jsonObject);
                        Global.printLog("VersionRes>>", jsonObject);
                        if (jSONObject.getInt("status") != 0) {
                            WelcomeActivity.this.loadContinueData();
                        } else {
                            Global.showOkAlertWithFinishRedirectPlayStoreMessage(WelcomeActivity.activity, WelcomeActivity.this.getString(com.aqi.data.R.string.app_name), jSONObject.getString("message"));
                        }
                        return;
                    }
Processing function 11, which looks like this: public void onFailure(Call<JsonObject> call, Throwable th) {
                Global.dismisLoderDialog();
                Global.showOkAlertWithMessage(WelcomeActivity.activity, WelcomeActivity.this.getString(com.aqi.data.R.string.network_failed), "");
                call.cancel();
                th.printStackTrace();
            }
Processing function 12, which looks like this: public void loadContinueData() {
        if (PreferenceManager.getBooleanPref(this, PreferenceManager.IS_BOARDING_VIEW).booleanValue()) {
            this.ll_view_progress.setVisibility(0);
            runOnUiThread(new Runnable() { // from class: com.app.aqi.WelcomeActivity.3
                @Override // java.lang.Runnable
                public void run() {
                    WelcomeActivity welcomeActivity = WelcomeActivity.this;
                    welcomeActivity.startActivity(new Intent(welcomeActivity, SlidingDrawerActivity.class));
                }
            }
Processing function 13, which looks like this: public void onClick(View view) {
                WelcomeActivity.this.launchHomeScreen();
            }
Processing function 14, which looks like this: public void onClick(View view) {
                int item = WelcomeActivity.this.getItem(1);
                if (item < WelcomeActivity.this.layouts.length) {
                    WelcomeActivity.this.viewPager.setCurrentItem(item);
                } else {
                    WelcomeActivity.this.launchHomeScreen();
                }
            }
Processing function 15, which looks like this: public void onClick(View view) {
                WelcomeActivity.this.launchHomeScreen();
            }
Processing function 16, which looks like this: public void addBottomDots(int i) {
        TextView[] textViewArr;
        this.dots = new TextView[this.layouts.length];
        int[] intArray = getResources().getIntArray(com.aqi.data.R.array.array_dot_active_new);
        int[] intArray2 = getResources().getIntArray(com.aqi.data.R.array.array_dot_inactive);
        this.dotsLayout.removeAllViews();
        int i2 = 0;
        while (true) {
            textViewArr = this.dots;
            if (i2 >= textViewArr.length) {
                break;
            }
            textViewArr[i2] = new TextView(this);
            this.dots[i2].setText(Html.fromHtml("&#8226;"));
            this.dots[i2].setTextSize(40.0f);
            this.dots[i2].setTextColor(intArray2[i]);
            this.dotsLayout.addView(this.dots[i2]);
            i2++;
        }
Processing function 17, which looks like this: public int getItem(int i) {
        return this.viewPager.getCurrentItem() + i;
    }
Processing function 18, which looks like this: public void launchHomeScreen() {
        this.ll_view_progress.setVisibility(0);
        runOnUiThread(new Runnable() { // from class: com.app.aqi.WelcomeActivity.7
            @Override // java.lang.Runnable
            public void run() {
                WelcomeActivity welcomeActivity = WelcomeActivity.this;
                welcomeActivity.startActivity(new Intent(welcomeActivity, SlidingDrawerActivity.class));
            }
        }
Processing function 19, which looks like this: private void changeStatusBarColor() {
        if (Build.VERSION.SDK_INT >= 21) {
            Window window = getWindow();
            window.addFlags(Integer.MIN_VALUE);
            window.setStatusBarColor(0);
        }
    }
Processing function 20, which looks like this: public boolean isViewFromObject(View view, Object obj) {
            return view == obj;
        }
Processing function 21, which looks like this: public Object instantiateItem(ViewGroup viewGroup, int i) {
            this.layoutInflater = (LayoutInflater) WelcomeActivity.this.getSystemService("layout_inflater");
            View inflate = this.layoutInflater.inflate(WelcomeActivity.this.layouts[i], viewGroup, false);
            viewGroup.addView(inflate);
            return inflate;
        }
Processing function 22, which looks like this: public int getCount() {
            return WelcomeActivity.this.layouts.length;
        }
Processing function 23, which looks like this: public void destroyItem(ViewGroup viewGroup, int i, Object obj) {
            viewGroup.removeView((View) obj);
        }
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Saving output...
Output saved at /scratch/ms9761/rea-llm/starcoder/outputs/com.aqi.data.json!
Processing APK: com.esp.offroad.tractor.driving.simulator.json
Processing function 1, which looks like this: public boolean dispatchKeyEvent(KeyEvent keyEvent) {
        return keyEvent.getAction() == 2 ? this.mUnityPlayer.injectEvent(keyEvent) : super.dispatchKeyEvent(keyEvent);
    }
Processing function 2, which looks like this: public void onConfigurationChanged(Configuration configuration) {
        super.onConfigurationChanged(configuration);
        this.mUnityPlayer.configurationChanged(configuration);
    }
Processing function 3, which looks like this: protected void onCreate(Bundle bundle) {
        requestWindowFeature(1);
        super.onCreate(bundle);
        this.mUnityPlayer = new UnityPlayer(this);
        setContentView(this.mUnityPlayer);
        this.mUnityPlayer.requestFocus();
    }
Processing function 4, which looks like this: protected void onDestroy() {
        this.mUnityPlayer.destroy();
        super.onDestroy();
    }
Processing function 5, which looks like this: public boolean onGenericMotionEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Processing function 6, which looks like this: public boolean onKeyDown(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 7, which looks like this: public boolean onKeyUp(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 8, which looks like this: public void onLowMemory() {
        super.onLowMemory();
        this.mUnityPlayer.lowMemory();
    }
Processing function 9, which looks like this: protected void onNewIntent(Intent intent) {
        setIntent(intent);
    }
Processing function 10, which looks like this: protected void onPause() {
        super.onPause();
        this.mUnityPlayer.pause();
    }
Processing function 11, which looks like this: protected void onResume() {
        super.onResume();
        this.mUnityPlayer.resume();
    }
Processing function 12, which looks like this: protected void onStart() {
        super.onStart();
        this.mUnityPlayer.start();
    }
Processing function 13, which looks like this: protected void onStop() {
        super.onStop();
        this.mUnityPlayer.stop();
    }
Processing function 14, which looks like this: public boolean onTouchEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Processing function 15, which looks like this: public void onTrimMemory(int i) {
        super.onTrimMemory(i);
        if (i == 15) {
            this.mUnityPlayer.lowMemory();
        }
    }
Processing function 16, which looks like this: public void onWindowFocusChanged(boolean z) {
        super.onWindowFocusChanged(z);
        this.mUnityPlayer.windowFocusChanged(z);
    }
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Saving output...
Output saved at /scratch/ms9761/rea-llm/starcoder/outputs/com.esp.offroad.tractor.driving.simulator.json!
Processing APK: com.dayna.yoursnorwaystock.json
Processing function 1, which looks like this: public void onCheckedChanged(RadioGroup radioGroup, int i3) {
            StockMainActivity stockMainActivity;
            int i4;
            switch (i3) {
                case R.id.rbDataSource1 /* 2131296488 */:
                    stockMainActivity = StockMainActivity.this;
                    i4 = 0;
                    break;
                case R.id.rbDataSource2 /* 2131296489 */:
                    stockMainActivity = StockMainActivity.this;
                    i4 = 1;
                    break;
                default:
                    return;
            }
            stockMainActivity.V = i4;
        }
Processing function 2, which looks like this: public boolean onMenuItemClick(MenuItem menuItem) {
            switch (menuItem.getItemId()) {
                case R.id.menu_blog /* 2131296460 */:
                    StockMainActivity.this.c1();
                    return true;
                case R.id.menu_bloomberg_finance /* 2131296461 */:
                case R.id.menu_stock_cnn_business /* 2131296464 */:
                case R.id.menu_stock_google_finance /* 2131296465 */:
                default:
                    return true;
                case R.id.menu_exchange_rate /* 2131296462 */:
                    StockMainActivity.this.b1();
                    return true;
                case R.id.menu_revision_settings /* 2131296463 */:
                    StockMainActivity.this.Y0();
                    return true;
                case R.id.menu_stock_indices /* 2131296466 */:
                    StockMainActivity.this.d1();
                    return true;
                case R.id.menu_theme_settings /* 2131296467 */:
                    StockMainActivity.this.Z0();
                    return true;
            }
        }
Processing function 3, which looks like this: public void onCheckedChanged(RadioGroup radioGroup, int i3) {
            StockMainActivity stockMainActivity;
            int i4;
            switch (i3) {
                case R.id.rbSysLanguage /* 2131296491 */:
                    stockMainActivity = StockMainActivity.this;
                    i4 = 0;
                    break;
                case R.id.rbUsEnglish /* 2131296492 */:
                    stockMainActivity = StockMainActivity.this;
                    i4 = 1;
                    break;
                default:
                    return;
            }
            stockMainActivity.Y = i4;
        }
Processing function 4, which looks like this: public void onClick(View view) {
            if (StockMainActivity.this.Q != StockMainActivity.this.O.t()) {
                StockMainActivity.this.O.O(StockMainActivity.this.Q);
                StockMainActivity stockMainActivity = StockMainActivity.this;
                stockMainActivity.U0(stockMainActivity.Q);
                if (StockMainActivity.this.E != null) {
                    StockMainActivity.this.E.b(StockMainActivity.this.Q);
                    StockMainActivity.this.E.notifyDataSetChanged();
                }
            }
Processing function 5, which looks like this: public void onClick(View view) {
            StockMainActivity stockMainActivity = StockMainActivity.this;
            stockMainActivity.Q = stockMainActivity.O.t();
            StockMainActivity.this.U.dismiss();
            StockMainActivity.this.U = null;
        }
Processing function 6, which looks like this: public void a(h2.b bVar) {
        }
Processing function 7, which looks like this: public void onItemClick(AdapterView<?> adapterView, View view, int i3, long j3) {
            if (StockMainActivity.this.K || i3 >= StockMainActivity.this.I) {
                return;
            }
            StockMainActivity.this.K0();
            StockMainActivity.this.V(i3);
        }
Processing function 8, which looks like this: public void onCheckedChanged(RadioGroup radioGroup, int i3) {
            StockMainActivity stockMainActivity;
            int i4;
            switch (i3) {
                case R.id.rbWhiteBlack /* 2131296493 */:
                    stockMainActivity = StockMainActivity.this;
                    i4 = m1.d.X;
                    break;
                case R.id.rbWhiteTheme /* 2131296494 */:
                    stockMainActivity = StockMainActivity.this;
                    i4 = m1.d.W;
                    break;
                default:
                    return;
            }
            stockMainActivity.Q = i4;
        }
Processing function 9, which looks like this: public void handleMessage(Message message) {
            StockMainActivity stockMainActivity;
            String F0;
            int i3 = message.what;
            if (i3 == 1) {
                Bundle data = message.getData();
                int i4 = data.getInt("QueryType");
                if (i4 == m1.d.S) {
                    StockMainActivity.this.L0(data, true, true);
                    return;
                } else if (i4 == m1.d.Q) {
                    StockMainActivity.this.Q0(data);
                    return;
                } else if (i4 == m1.d.R) {
                    StockMainActivity.this.P0(data);
                    return;
                } else {
                    return;
                }
            }
Processing function 10, which looks like this: public void A0() {
        try {
            ProgressDialog progressDialog = this.H;
            if (progressDialog != null && progressDialog.isShowing()) {
                this.H.dismiss();
            }
            this.H = null;
        }
Processing function 11, which looks like this: private void B0() {
        this.f2019s.setEnabled(true);
        this.f2019s.setBackgroundResource(R.drawable.img_refresh_selector);
        this.f2020t.setEnabled(true);
        this.f2020t.setBackgroundResource(R.drawable.img_editor_selector);
        this.f2021u.setEnabled(true);
        this.f2021u.setBackgroundResource(R.drawable.img_portfolio_selector);
        this.f2023w.setEnabled(true);
        this.f2023w.setBackgroundResource(R.drawable.ic_page_1_up);
        this.f2024x.setEnabled(true);
        this.f2024x.setBackgroundResource(R.drawable.ic_page_2_up);
        this.f2025y.setEnabled(true);
        this.f2025y.setBackgroundResource(R.drawable.ic_page_3_up);
    }
Processing function 12, which looks like this: private void C0() {
        Long valueOf = Long.valueOf(System.currentTimeMillis());
        if (valueOf.longValue() - this.R <= 2500) {
            Toast toast = this.S;
            if (toast != null) {
                toast.cancel();
            }
            super.onBackPressed();
            return;
        }
Processing function 13, which looks like this: public void D0(Bundle bundle) {
        if (bundle == null) {
            f1();
            A0();
            return;
        }
        int i3 = bundle.getInt("CidSize");
        if (i3 <= 0) {
            f1();
            A0();
            return;
        }
        String str = "";
        for (int i4 = 0; i4 < i3; i4++) {
            str = str + bundle.getString(String.valueOf(i4)) + ",";
        }
        new h1.b(this.B, F0(R.string.str_new_google_stock_quote_head) + str, bundle.getBoolean("ending")).start();
    }
Processing function 14, which looks like this: private int E0(Bundle bundle, String str, String str2) {
        int i3 = bundle.getInt("StockSize");
        int i4 = m1.d.M;
        for (int i5 = 0; i5 < i3; i5++) {
            if (bundle.getString((i5 + "_") + m1.d.f15258b[m1.d.F][i4]).equals(str)) {
                return i5;
            }
        }
Processing function 15, which looks like this: private void G0() {
        char c4;
        int i3;
        int d4 = this.O.d(this.M);
        char c5 = 0;
        int i4 = 0;
        while (true) {
            c4 = 1;
            if (i4 >= m1.d.T) {
                break;
            }
            String[][] strArr = this.F;
            strArr[i4][0] = "";
            strArr[i4][1] = "";
            this.G[i4] = "";
            i4++;
        }
Processing function 16, which looks like this: private void I0() {
        this.K = true;
        z0();
        for (int i3 = 0; i3 < m1.d.T && i3 < this.A.size(); i3++) {
            this.A.get(i3).put("uiChange", "1");
        }
        j1.a aVar = this.E;
        if (aVar != null) {
            aVar.notifyDataSetChanged();
        }
    }
Processing function 17, which looks like this: private void J0() {
        I0();
        G0();
        h1();
    }
Processing function 18, which looks like this: public void K0() {
        int size = this.A.size();
        if (size == 0) {
            return;
        }
        String str = "";
        for (int i3 = 0; i3 < size; i3++) {
            Map<String, Object> map = this.A.get(i3);
            String str2 = this.F[i3][0];
            String str3 = (String) map.get("tvStockName");
            String str4 = (String) map.get("tvStrikePrice");
            String str5 = (String) map.get("tvChange");
            String str6 = this.G[i3];
            if (!str2.equals("")) {
                if (str4.equals("")) {
                    str4 = "-";
                }
                if (str5.equals("")) {
                    str5 = "-";
                }
                str = str + str6 + ";" + str2 + ";" + str3 + ";" + str4 + ";" + str5 + "@@";
            }
Processing function 19, which looks like this: public void L0(Bundle bundle, boolean z3, boolean z4) {
        char c4 = 0;
        try {
            int length = m1.d.f15256a.length;
            int i3 = m1.d.M;
            NumberFormat.getInstance().setMinimumFractionDigits(2);
            bundle.getInt("StockSize");
            int size = this.A.size();
            int i4 = 0;
            while (i4 < size) {
                int E0 = E0(bundle, this.F[i4][c4], this.G[i4]);
                Map<String, Object> map = this.A.get(i4);
                map.put("tvStockNumber", m1.e.a(this.F[i4][c4], this.G[i4]));
                map.put("tvStockName", this.F[i4][1]);
                if (E0 != 100) {
                    String str = E0 + "_";
                    map = this.A.get(i4);
                    map.put("uiChange", "2");
                    String[][] strArr = m1.d.f15258b;
                    String str2 = strArr[m1.d.J][i3];
                    if (!bundle.getString(str + str2).equals("")) {
                        map.put("tvTime", bundle.getString(str + str2));
                    } else if (m1.d.f15287t) {
                        map.put("tvTime", "");
                    } else {
                        map.put("tvTime", "-");
                    }
                    String str3 = strArr[m1.d.G][i3];
                    if (bundle.getString(str + str3).equals("")) {
                        map.put("tvStrikePrice", "-");
                    } else {
                        map.put("tvStrikePrice", bundle.getString(str + str3));
                    }
                    bundle.getString(str + strArr[m1.d.K][i3]);
                    String str4 = strArr[m1.d.I][i3];
                    if (bundle.getString(str + str4).equals("")) {
                        map.put("tvChangePercent", "-");
                    } else {
                        map.put("tvChangePercent", bundle.getString(str + str4));
                    }
                    String str5 = strArr[m1.d.H][i3];
                    if (bundle.getString(str + str5).equals("")) {
                        map.put("tvChange", "-");
                        i4++;
                        c4 = 0;
                    } else {
                        map.put("tvChange", bundle.getString(str + str5));
                        i4++;
                        c4 = 0;
                    }
                }
Processing function 20, which looks like this: private void M0() {
        e1.a aVar = new e1.a(this, this.B, this.J);
        this.D = aVar;
        aVar.start();
    }
Processing function 21, which looks like this: public void N0() {
        int length = m1.d.f15256a.length;
        int i3 = m1.d.M;
        NumberFormat.getInstance().setMinimumFractionDigits(2);
        int size = this.A.size();
        for (int i4 = 0; i4 < size; i4++) {
            Map<String, Object> map = this.A.get(i4);
            if (!this.F[i4][0].equals("")) {
                map.put("tvStockNumber", m1.e.a(this.F[i4][0], this.G[i4]));
                map.put("tvStockName", this.F[i4][1]);
                map.put("uiChange", "2");
                map.put("tvStrikePrice", "-");
                map.put("tvChange", "-");
            }
        }
Processing function 22, which looks like this: private void O0(String str, int i3) {
        Thread thread;
        if (str.length() > 0) {
            if (m1.d.f15287t) {
                String str2 = F0(R.string.str_new_google_get_cid) + str + "&output=json";
                a1(F0(R.string.str_us_stock_info), F0(R.string.str_read_stock_quote));
                new h1.a(this.B, str2, i3, i3 <= m1.d.V).start();
                return;
            }
            if (m1.d.f15286s) {
                a1(F0(R.string.str_us_stock_info), F0(R.string.str_read_stock_quote));
                thread = new n1.a(this.B, m1.d.f15288u + str, m1.d.O, m1.d.S);
            } else {
                a1(F0(R.string.str_us_stock_info), F0(R.string.str_read_stock_quote));
                e1.b bVar = new e1.b(this.B, F0(R.string.str_google_stock_quote_head) + "&q=" + str, m1.d.O, m1.d.S);
                this.C = bVar;
                thread = bVar;
            }
            thread.start();
        }
Processing function 23, which looks like this: public void P0(Bundle bundle) {
        String[] strArr = m1.d.L;
        float parseFloat = Float.parseFloat(bundle.getString(strArr[1]));
        bundle.getString(strArr[2]);
        String string = bundle.getString(strArr[3]);
        String string2 = bundle.getString(strArr[4]);
        NumberFormat numberFormat = NumberFormat.getInstance();
        numberFormat.setMinimumFractionDigits(2);
        if (!string2.equals("-")) {
            float parseFloat2 = Float.parseFloat(bundle.getString(strArr[0]));
            numberFormat.format(parseFloat2 > parseFloat ? parseFloat2 - parseFloat : parseFloat2 < parseFloat ? parseFloat - parseFloat2 : 0.0f);
        }
        String j3 = this.O.j();
        this.J = string;
        if (string.equals(j3)) {
            if (this.O.d(this.M) > 0) {
                h1();
                return;
            }
            A0();
            f1();
            return;
        }
Processing function 24, which looks like this: public void Q0(Bundle bundle) {
        String[] strArr = m1.d.L;
        float parseFloat = Float.parseFloat(bundle.getString(strArr[1]));
        bundle.getString(strArr[2]);
        bundle.getString(strArr[3]);
        String string = bundle.getString(strArr[4]);
        NumberFormat numberFormat = NumberFormat.getInstance();
        numberFormat.setMinimumFractionDigits(2);
        if (!"-".equals(string)) {
            float parseFloat2 = Float.parseFloat(bundle.getString(strArr[0]));
            numberFormat.format(parseFloat2 > parseFloat ? parseFloat2 - parseFloat : parseFloat2 < parseFloat ? parseFloat - parseFloat2 : 0.0f);
        }
        if (this.O.d(this.M) > 0 && !this.L) {
            h1();
            return;
        }
        f1();
        A0();
    }
Processing function 25, which looks like this: private void R0() {
        char c4;
        String[] strArr;
        int d4 = this.O.d(this.M);
        this.A = new ArrayList();
        char c5 = 0;
        int i3 = 0;
        while (true) {
            c4 = 1;
            if (i3 >= m1.d.T) {
                break;
            }
            String[][] strArr2 = this.F;
            strArr2[i3][0] = "";
            strArr2[i3][1] = "";
            this.G[i3] = "";
            i3++;
        }
Processing function 26, which looks like this: private void S0() {
        this.f2026z.setOnItemClickListener(new g());
    }
Processing function 27, which looks like this: private void T0() {
        if (this.M.equals("1")) {
            this.f2023w.setBackgroundResource(R.drawable.ic_page_1_down);
            this.f2023w.setEnabled(false);
        } else {
            this.f2023w.setBackgroundResource(R.drawable.ic_page_1_up);
            this.f2023w.setEnabled(true);
        }
        if (this.M.equals("2")) {
            this.f2024x.setBackgroundResource(R.drawable.ic_page_2_down);
            this.f2024x.setEnabled(false);
        } else {
            this.f2024x.setBackgroundResource(R.drawable.ic_page_2_up);
            this.f2024x.setEnabled(true);
        }
        if (this.M.equals("3")) {
            this.f2025y.setBackgroundResource(R.drawable.ic_page_3_down);
            this.f2025y.setEnabled(false);
            return;
        }
        this.f2025y.setBackgroundResource(R.drawable.ic_page_3_up);
        this.f2025y.setEnabled(true);
    }
Processing function 28, which looks like this: public void V(int i3) {
        Intent intent = new Intent();
        Bundle bundle = new Bundle();
        bundle.putString("stockNumber", this.F[i3][m1.d.M]);
        bundle.putString("stockName", this.F[i3][m1.d.N]);
        bundle.putString("stockType", this.G[i3]);
        bundle.putString("page", this.M);
        intent.putExtras(bundle);
        intent.setClass(this, SingleStockActivity.class);
        startActivity(intent);
    }
Processing function 29, which looks like this: public void V0(String str) {
        if (this.T == null) {
            this.T = Toast.makeText(this, str, 0);
        }
        this.T.setText(str);
        this.T.show();
    }
Processing function 30, which looks like this: private void W() {
        Intent intent = new Intent();
        Bundle bundle = new Bundle();
        bundle.putString("page", this.M);
        intent.putExtras(bundle);
        intent.setClass(this, StockEditActivity.class);
        this.f2017a0.a(intent);
    }
Processing function 31, which looks like this: private void W0(View view) {
        PopupMenu popupMenu = new PopupMenu(this, view);
        popupMenu.getMenuInflater().inflate(R.menu.menu_settings, popupMenu.getMenu());
        popupMenu.setOnMenuItemClickListener(new b());
        popupMenu.show();
    }
Processing function 32, which looks like this: private void X() {
        Intent intent = new Intent();
        intent.setClass(this, StockPortfoliosActivity.class);
        startActivity(intent);
    }
Processing function 33, which looks like this: public void Z0() {
        LayoutInflater layoutInflater;
        int i3;
        PopupWindow popupWindow = this.U;
        if (popupWindow == null || !popupWindow.isShowing()) {
            int t3 = this.O.t();
            if (t3 == m1.d.W) {
                layoutInflater = getLayoutInflater();
                i3 = R.layout.theme_settings_dialog;
            } else {
                layoutInflater = getLayoutInflater();
                i3 = R.layout.theme_settings_dialog_black;
            }
            View inflate = layoutInflater.inflate(i3, (ViewGroup) null);
            Button button = (Button) inflate.findViewById(R.id.btnOK);
            Button button2 = (Button) inflate.findViewById(R.id.btnCancel);
            ((RadioGroup) inflate.findViewById(R.id.rgroup)).setOnCheckedChangeListener(this.f2018b0);
            RadioButton radioButton = (RadioButton) inflate.findViewById(R.id.rbWhiteTheme);
            RadioButton radioButton2 = (RadioButton) inflate.findViewById(R.id.rbWhiteBlack);
            if (t3 == m1.d.W) {
                radioButton.setChecked(true);
            } else {
                radioButton2.setChecked(true);
            }
            button.setOnClickListener(new d());
            button2.setOnClickListener(new e());
            PopupWindow popupWindow2 = new PopupWindow(inflate, -2, -2, false);
            this.U = popupWindow2;
            popupWindow2.showAtLocation(inflate, 17, 0, 0);
            this.U.setFocusable(true);
            this.U.setOutsideTouchable(false);
            this.U.update();
        }
Processing function 34, which looks like this: private void a1(String str, String str2) {
        ProgressDialog progressDialog = this.H;
        if (progressDialog != null) {
            progressDialog.setMessage(str2);
            return;
        }
        ProgressDialog progressDialog2 = new ProgressDialog(this, 1);
        this.H = progressDialog2;
        progressDialog2.setMessage(str2);
        this.H.setCanceledOnTouchOutside(false);
        this.H.setCancelable(false);
        this.H.show();
    }
Processing function 35, which looks like this: public void b1() {
        Intent intent = new Intent();
        intent.setClass(this, ExchangeRateActivity.class);
        startActivity(intent);
    }
Processing function 36, which looks like this: public void c1() {
        Intent intent = new Intent();
        intent.setClass(this, BlogActivity.class);
        startActivity(intent);
    }
Processing function 37, which looks like this: public void d1() {
        Intent intent = new Intent();
        intent.setClass(this, StockIndicesMainActivity.class);
        startActivity(intent);
    }
Processing function 38, which looks like this: private void e1(String str) {
        int d4 = this.O.d(str);
        this.O.F(str);
        this.M = str;
        if (d4 > 0) {
            J0();
            return;
        }
        G0();
        T0();
    }
Processing function 39, which looks like this: public void f1() {
        this.K = false;
        B0();
        T0();
        for (int i3 = 0; i3 < m1.d.T && i3 < this.A.size(); i3++) {
            this.A.get(i3).put("uiChange", "0");
        }
        j1.a aVar = this.E;
        if (aVar != null) {
            aVar.notifyDataSetChanged();
        }
    }
Processing function 40, which looks like this: public void g1() {
        int d4 = this.O.d(this.M);
        int i3 = m1.d.V;
        if (d4 - i3 <= 0) {
            A0();
            f1();
            return;
        }
        String str = "";
        while (i3 < d4 && i3 < m1.d.T) {
            String str2 = this.F[i3][0];
            String str3 = this.G[i3];
            int indexOf = str2.indexOf("/WS");
            if (indexOf > 0) {
                str2 = str2.substring(0, indexOf);
            }
            int indexOf2 = str2.indexOf("~");
            if (indexOf2 > 0) {
                str2 = str2.substring(0, indexOf2);
            }
            str = str + str3 + ":" + str2.replace("^", "-").replace("/", ".");
            if (i3 < d4 - 1) {
                str = str + ",";
            }
            i3++;
        }
Processing function 41, which looks like this: private void h1() {
        StringBuilder sb;
        int d4 = this.O.d(this.M);
        G0();
        if (d4 <= 0) {
            f1();
            return;
        }
        I0();
        String str = "";
        for (int i3 = 0; i3 < d4 && ((!m1.d.f15287t || i3 < m1.d.V) && i3 < m1.d.T); i3++) {
            String str2 = this.F[i3][0];
            String str3 = this.G[i3];
            if (m1.d.f15286s) {
                str = str + str2;
                if (i3 < d4 - 1) {
                    sb = new StringBuilder();
                    sb.append(str);
                    sb.append(",");
                    str = sb.toString();
                }
            }
Processing function 42, which looks like this: private void z0() {
        this.f2019s.setEnabled(false);
        this.f2019s.setBackgroundResource(R.drawable.img_refresh_down);
        this.f2020t.setEnabled(false);
        this.f2020t.setBackgroundResource(R.drawable.img_editor_down);
        this.f2021u.setEnabled(false);
        this.f2021u.setBackgroundResource(R.drawable.img_portfolio_down);
        this.f2023w.setEnabled(false);
        this.f2023w.setBackgroundResource(R.drawable.ic_page_1_down);
        this.f2024x.setEnabled(false);
        this.f2024x.setBackgroundResource(R.drawable.ic_page_2_down);
        this.f2025y.setEnabled(false);
        this.f2025y.setBackgroundResource(R.drawable.ic_page_3_down);
    }
Processing function 43, which looks like this: public String F0(int i3) {
        return getString(i3);
    }
Processing function 44, which looks like this: public void U0(int i3) {
        int i4;
        LinearLayout linearLayout = (LinearLayout) findViewById(R.id.llMain);
        LinearLayout linearLayout2 = (LinearLayout) findViewById(R.id.llHeadTitle);
        LinearLayout linearLayout3 = (LinearLayout) findViewById(R.id.llButton);
        LinearLayout linearLayout4 = (LinearLayout) findViewById(R.id.llAdView);
        TextView textView = (TextView) findViewById(R.id.tvT00Title);
        if (i3 == m1.d.W) {
            linearLayout.setBackgroundColor(-1);
            linearLayout2.setBackgroundColor(-14774017);
            linearLayout3.setBackgroundResource(R.color.button_bar_background);
            textView.setTextColor(-1);
            this.f2026z.setDivider(new ColorDrawable(Color.parseColor("#FFFFCC00")));
            this.f2026z.setDividerHeight(2);
            this.f2026z.setSelector(R.drawable.listview_highlight_white_theme);
            i4 = R.color.white_theme_ad_background;
        } else {
            linearLayout.setBackgroundColor(-16777216);
            linearLayout2.setBackgroundResource(R.color.black_theme_title_background);
            textView.setTextColor(-1);
            linearLayout3.setBackgroundResource(R.color.black_theme_bar_background);
            this.f2026z.setDivider(new ColorDrawable(Color.parseColor("#FFBDBDBD")));
            this.f2026z.setDividerHeight(2);
            this.f2026z.setSelector(R.drawable.listview_highlight_balck_theme);
            i4 = R.color.black_theme_ad_background;
        }
        linearLayout4.setBackgroundResource(i4);
    }
Processing function 45, which looks like this: public void X0() {
        m1.a aVar = this.O;
        if (aVar == null || !aVar.a()) {
            return;
        }
        Intent intent = new Intent();
        intent.setClass(this, RateActivity.class);
        startActivity(intent);
    }
Processing function 46, which looks like this: public void Y0() {
        this.W = 93;
        m1.a aVar = this.O;
        if (aVar != null) {
            aVar.E(93);
            Intent intent = new Intent();
            intent.setClass(this, RemindingActivity.class);
            startActivity(intent);
        }
    }
Processing function 47, which looks like this: public void onBackPressed() {
        C0();
    }
Processing function 48, which looks like this: public void onClick(View view) {
        String str;
        if (view.getId() == R.id.btnGetStockInfo) {
            I0();
            h1();
        } else if (view.getId() == R.id.btnPortfolios) {
            X();
        } else if (view.getId() == R.id.btnEditStock) {
            K0();
            W();
        } else {
            if (view.getId() == R.id.btnPage1) {
                K0();
                str = "1";
            } else if (view.getId() == R.id.btnPage2) {
                K0();
                str = "2";
            } else if (view.getId() != R.id.btnPage3) {
                if (view.getId() == R.id.btnMainSetting) {
                    W0(view);
                    return;
                }
                return;
            }
Processing function 49, which looks like this: public void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        setContentView(R.layout.activity_main);
        m.a(this, new f(this));
        this.X = true;
        this.L = false;
        this.B = new i();
        Button button = (Button) findViewById(R.id.btnGetStockInfo);
        this.f2019s = button;
        button.setOnClickListener(this);
        Button button2 = (Button) findViewById(R.id.btnEditStock);
        this.f2020t = button2;
        button2.setOnClickListener(this);
        Button button3 = (Button) findViewById(R.id.btnPortfolios);
        this.f2021u = button3;
        button3.setOnClickListener(this);
        Button button4 = (Button) findViewById(R.id.btnMainSetting);
        this.f2022v = button4;
        button4.setOnClickListener(this);
        Button button5 = (Button) findViewById(R.id.btnPage1);
        this.f2023w = button5;
        button5.setOnClickListener(this);
        Button button6 = (Button) findViewById(R.id.btnPage2);
        this.f2024x = button6;
        button6.setOnClickListener(this);
        Button button7 = (Button) findViewById(R.id.btnPage3);
        this.f2025y = button7;
        button7.setOnClickListener(this);
        m1.a aVar = new m1.a(this);
        this.O = aVar;
        this.W = aVar.l();
        this.Q = this.O.t();
        this.M = this.O.n();
        this.f2026z = (ListView) findViewById(R.id.stockList);
        this.O.m();
        this.O.g();
        ((TextView) findViewById(R.id.tvT00Title)).setText(R.string.app_name);
        U0(this.Q);
        R0();
        S0();
        h1();
        if (this.P) {
            b1.a aVar2 = new b1.a(this);
            this.Z = aVar2;
            aVar2.i();
        }
    }
Processing function 50, which looks like this: public void onDestroy() {
        if (this.P) {
            this.Z.f();
        }
        super.onDestroy();
        A0();
        e1.a aVar = this.D;
        if (aVar != null) {
            aVar.e();
            boolean z3 = true;
            while (z3) {
                try {
                    this.D.join();
                    z3 = false;
                } catch (InterruptedException unused) {
                }
            }
Processing function 51, which looks like this: public void onPause() {
        if (this.P) {
            this.Z.g();
        }
        super.onPause();
        this.L = true;
    }
Processing function 52, which looks like this: public void onResume() {
        super.onResume();
        if (this.P) {
            this.Z.h();
        }
        if (this.K) {
            return;
        }
        this.L = false;
    }
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Saving output...
Output saved at /scratch/ms9761/rea-llm/starcoder/outputs/com.dayna.yoursnorwaystock.json!
Processing APK: com.emregns.dockingtomarina.json
Processing function 1, which looks like this: public boolean dispatchKeyEvent(KeyEvent keyEvent) {
        return keyEvent.getAction() == 2 ? this.mUnityPlayer.injectEvent(keyEvent) : super.dispatchKeyEvent(keyEvent);
    }
Processing function 2, which looks like this: public void onConfigurationChanged(Configuration configuration) {
        super.onConfigurationChanged(configuration);
        this.mUnityPlayer.configurationChanged(configuration);
    }
Processing function 3, which looks like this: protected void onCreate(Bundle bundle) {
        requestWindowFeature(1);
        super.onCreate(bundle);
        getIntent().putExtra("unity", updateUnityCommandLineArguments(getIntent().getStringExtra("unity")));
        UnityPlayer unityPlayer = new UnityPlayer(this, this);
        this.mUnityPlayer = unityPlayer;
        setContentView(unityPlayer);
        this.mUnityPlayer.requestFocus();
    }
Processing function 4, which looks like this: protected void onDestroy() {
        this.mUnityPlayer.destroy();
        super.onDestroy();
    }
Processing function 5, which looks like this: public boolean onGenericMotionEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Processing function 6, which looks like this: public boolean onKeyDown(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 7, which looks like this: public boolean onKeyUp(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 8, which looks like this: public void onLowMemory() {
        super.onLowMemory();
        this.mUnityPlayer.lowMemory();
    }
Processing function 9, which looks like this: protected void onNewIntent(Intent intent) {
        setIntent(intent);
        this.mUnityPlayer.newIntent(intent);
    }
Processing function 10, which looks like this: protected void onPause() {
        super.onPause();
        this.mUnityPlayer.pause();
    }
Processing function 11, which looks like this: protected void onResume() {
        super.onResume();
        this.mUnityPlayer.resume();
    }
Processing function 12, which looks like this: public boolean onTouchEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Processing function 13, which looks like this: public void onTrimMemory(int i) {
        super.onTrimMemory(i);
        if (i == 15) {
            this.mUnityPlayer.lowMemory();
        }
    }
Processing function 14, which looks like this: public void onUnityPlayerQuitted() {
    }
Processing function 15, which looks like this: public void onUnityPlayerUnloaded() {
        moveTaskToBack(true);
    }
Processing function 16, which looks like this: public void onWindowFocusChanged(boolean z) {
        super.onWindowFocusChanged(z);
        this.mUnityPlayer.windowFocusChanged(z);
    }
Processing function 17, which looks like this: protected String updateUnityCommandLineArguments(String str) {
        return str;
    }
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Saving output...
Output saved at /scratch/ms9761/rea-llm/starcoder/outputs/com.emregns.dockingtomarina.json!
Processing APK: com.wab.shakeit3d.json
Processing function 1, which looks like this: protected String updateUnityCommandLineArguments(String str) {
        return str;
    }
Processing function 2, which looks like this: protected void onCreate(Bundle bundle) {
        requestWindowFeature(1);
        super.onCreate(bundle);
        getIntent().putExtra("unity", updateUnityCommandLineArguments(getIntent().getStringExtra("unity")));
        this.mUnityPlayer = new UnityPlayer(this, this);
        setContentView(this.mUnityPlayer);
        this.mUnityPlayer.requestFocus();
    }
Processing function 3, which looks like this: public void onUnityPlayerUnloaded() {
        moveTaskToBack(true);
    }
Processing function 4, which looks like this: public void onUnityPlayerQuitted() {
        Process.killProcess(Process.myPid());
    }
Processing function 5, which looks like this: protected void onNewIntent(Intent intent) {
        setIntent(intent);
        this.mUnityPlayer.newIntent(intent);
    }
Processing function 6, which looks like this: protected void onDestroy() {
        this.mUnityPlayer.destroy();
        super.onDestroy();
    }
Processing function 7, which looks like this: protected void onPause() {
        super.onPause();
        this.mUnityPlayer.pause();
    }
Processing function 8, which looks like this: protected void onResume() {
        super.onResume();
        this.mUnityPlayer.resume();
    }
Processing function 9, which looks like this: public void onLowMemory() {
        super.onLowMemory();
        this.mUnityPlayer.lowMemory();
    }
Processing function 10, which looks like this: public void onTrimMemory(int i) {
        super.onTrimMemory(i);
        if (i == 15) {
            this.mUnityPlayer.lowMemory();
        }
    }
Processing function 11, which looks like this: public void onConfigurationChanged(Configuration configuration) {
        super.onConfigurationChanged(configuration);
        this.mUnityPlayer.configurationChanged(configuration);
    }
Processing function 12, which looks like this: public void onWindowFocusChanged(boolean z) {
        super.onWindowFocusChanged(z);
        this.mUnityPlayer.windowFocusChanged(z);
    }
Processing function 13, which looks like this: public boolean dispatchKeyEvent(KeyEvent keyEvent) {
        if (keyEvent.getAction() == 2) {
            return this.mUnityPlayer.injectEvent(keyEvent);
        }
        return super.dispatchKeyEvent(keyEvent);
    }
Processing function 14, which looks like this: public boolean onKeyUp(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 15, which looks like this: public boolean onKeyDown(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 16, which looks like this: public boolean onTouchEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Processing function 17, which looks like this: public boolean onGenericMotionEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Saving output...
Output saved at /scratch/ms9761/rea-llm/starcoder/outputs/com.wab.shakeit3d.json!
Processing APK: com.DefaultCompany.Empty2D.json
Processing function 1, which looks like this: protected String updateUnityCommandLineArguments(String str) {
        return str;
    }
Processing function 2, which looks like this: protected void onCreate(Bundle bundle) {
        requestWindowFeature(1);
        super.onCreate(bundle);
        getIntent().putExtra("unity", updateUnityCommandLineArguments(getIntent().getStringExtra("unity")));
        this.mUnityPlayer = new UnityPlayer(this, this);
        setContentView(this.mUnityPlayer);
        this.mUnityPlayer.requestFocus();
    }
Processing function 3, which looks like this: public void onUnityPlayerUnloaded() {
        moveTaskToBack(true);
    }
Processing function 4, which looks like this: public void onUnityPlayerQuitted() {
        Process.killProcess(Process.myPid());
    }
Processing function 5, which looks like this: protected void onNewIntent(Intent intent) {
        setIntent(intent);
        this.mUnityPlayer.newIntent(intent);
    }
Processing function 6, which looks like this: protected void onDestroy() {
        this.mUnityPlayer.destroy();
        super.onDestroy();
    }
Processing function 7, which looks like this: protected void onPause() {
        super.onPause();
        this.mUnityPlayer.pause();
    }
Processing function 8, which looks like this: protected void onResume() {
        super.onResume();
        this.mUnityPlayer.resume();
    }
Processing function 9, which looks like this: public void onLowMemory() {
        super.onLowMemory();
        this.mUnityPlayer.lowMemory();
    }
Processing function 10, which looks like this: public void onTrimMemory(int i) {
        super.onTrimMemory(i);
        if (i == 15) {
            this.mUnityPlayer.lowMemory();
        }
    }
Processing function 11, which looks like this: public void onConfigurationChanged(Configuration configuration) {
        super.onConfigurationChanged(configuration);
        this.mUnityPlayer.configurationChanged(configuration);
    }
Processing function 12, which looks like this: public void onWindowFocusChanged(boolean z) {
        super.onWindowFocusChanged(z);
        this.mUnityPlayer.windowFocusChanged(z);
    }
Processing function 13, which looks like this: public boolean dispatchKeyEvent(KeyEvent keyEvent) {
        if (keyEvent.getAction() == 2) {
            return this.mUnityPlayer.injectEvent(keyEvent);
        }
        return super.dispatchKeyEvent(keyEvent);
    }
Processing function 14, which looks like this: public boolean onKeyUp(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 15, which looks like this: public boolean onKeyDown(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 16, which looks like this: public boolean onTouchEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Processing function 17, which looks like this: public boolean onGenericMotionEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Saving output...
Output saved at /scratch/ms9761/rea-llm/starcoder/outputs/com.DefaultCompany.Empty2D.json!
Processing APK: com.zombiecommando.fpshsootinggame.deadzobieshoot.rfpsshooting.json
Processing function 1, which looks like this: protected String updateUnityCommandLineArguments(String str) {
        return str;
    }
Processing function 2, which looks like this: public void onCreate(Bundle bundle) {
        requestWindowFeature(1);
        super.onCreate(bundle);
        getIntent().putExtra("unity", updateUnityCommandLineArguments(getIntent().getStringExtra("unity")));
        this.mUnityPlayer = new UnityPlayer(this, this);
        setContentView(this.mUnityPlayer);
        this.mUnityPlayer.requestFocus();
    }
Processing function 3, which looks like this: public void onUnityPlayerUnloaded() {
        moveTaskToBack(true);
    }
Processing function 4, which looks like this: public void onUnityPlayerQuitted() {
        Process.killProcess(Process.myPid());
    }
Processing function 5, which looks like this: protected void onNewIntent(Intent intent) {
        setIntent(intent);
        this.mUnityPlayer.newIntent(intent);
    }
Processing function 6, which looks like this: protected void onDestroy() {
        this.mUnityPlayer.destroy();
        super.onDestroy();
    }
Processing function 7, which looks like this: protected void onPause() {
        super.onPause();
        this.mUnityPlayer.pause();
    }
Processing function 8, which looks like this: protected void onResume() {
        super.onResume();
        this.mUnityPlayer.resume();
    }
Processing function 9, which looks like this: public void onLowMemory() {
        super.onLowMemory();
        this.mUnityPlayer.lowMemory();
    }
Processing function 10, which looks like this: public void onTrimMemory(int i) {
        super.onTrimMemory(i);
        if (i == 15) {
            this.mUnityPlayer.lowMemory();
        }
    }
Processing function 11, which looks like this: public void onConfigurationChanged(Configuration configuration) {
        super.onConfigurationChanged(configuration);
        this.mUnityPlayer.configurationChanged(configuration);
    }
Processing function 12, which looks like this: public void onWindowFocusChanged(boolean z) {
        super.onWindowFocusChanged(z);
        this.mUnityPlayer.windowFocusChanged(z);
    }
Processing function 13, which looks like this: public boolean dispatchKeyEvent(KeyEvent keyEvent) {
        if (keyEvent.getAction() == 2) {
            return this.mUnityPlayer.injectEvent(keyEvent);
        }
        return super.dispatchKeyEvent(keyEvent);
    }
Processing function 14, which looks like this: public boolean onKeyUp(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 15, which looks like this: public boolean onKeyDown(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 16, which looks like this: public boolean onTouchEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Processing function 17, which looks like this: public boolean onGenericMotionEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Saving output...
Output saved at /scratch/ms9761/rea-llm/starcoder/outputs/com.zombiecommando.fpshsootinggame.deadzobieshoot.rfpsshooting.json!
Processing APK: com.darktide.swingjumpers.json
Processing function 1, which looks like this: protected String updateUnityCommandLineArguments(String str) {
        return str;
    }
Processing function 2, which looks like this: protected void onCreate(Bundle bundle) {
        requestWindowFeature(1);
        super.onCreate(bundle);
        getIntent().putExtra("unity", updateUnityCommandLineArguments(getIntent().getStringExtra("unity")));
        this.mUnityPlayer = new UnityPlayer(this, this);
        setContentView(this.mUnityPlayer);
        this.mUnityPlayer.requestFocus();
    }
Processing function 3, which looks like this: public void onUnityPlayerUnloaded() {
        moveTaskToBack(true);
    }
Processing function 4, which looks like this: public void onUnityPlayerQuitted() {
        Process.killProcess(Process.myPid());
    }
Processing function 5, which looks like this: protected void onNewIntent(Intent intent) {
        setIntent(intent);
        this.mUnityPlayer.newIntent(intent);
    }
Processing function 6, which looks like this: protected void onDestroy() {
        this.mUnityPlayer.destroy();
        super.onDestroy();
    }
Processing function 7, which looks like this: protected void onPause() {
        super.onPause();
        this.mUnityPlayer.pause();
    }
Processing function 8, which looks like this: protected void onResume() {
        super.onResume();
        this.mUnityPlayer.resume();
    }
Processing function 9, which looks like this: public void onLowMemory() {
        super.onLowMemory();
        this.mUnityPlayer.lowMemory();
    }
Processing function 10, which looks like this: public void onTrimMemory(int i) {
        super.onTrimMemory(i);
        if (i == 15) {
            this.mUnityPlayer.lowMemory();
        }
    }
Processing function 11, which looks like this: public void onConfigurationChanged(Configuration configuration) {
        super.onConfigurationChanged(configuration);
        this.mUnityPlayer.configurationChanged(configuration);
    }
Processing function 12, which looks like this: public void onWindowFocusChanged(boolean z) {
        super.onWindowFocusChanged(z);
        this.mUnityPlayer.windowFocusChanged(z);
    }
Processing function 13, which looks like this: public boolean dispatchKeyEvent(KeyEvent keyEvent) {
        if (keyEvent.getAction() == 2) {
            return this.mUnityPlayer.injectEvent(keyEvent);
        }
        return super.dispatchKeyEvent(keyEvent);
    }
Processing function 14, which looks like this: public boolean onKeyUp(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 15, which looks like this: public boolean onKeyDown(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 16, which looks like this: public boolean onTouchEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Processing function 17, which looks like this: public boolean onGenericMotionEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Saving output...
Output saved at /scratch/ms9761/rea-llm/starcoder/outputs/com.darktide.swingjumpers.json!
Processing APK: com.wb.parking.prado.driver.json
Processing function 1, which looks like this: public boolean dispatchKeyEvent(KeyEvent keyEvent) {
        return keyEvent.getAction() == 2 ? this.mUnityPlayer.injectEvent(keyEvent) : super.dispatchKeyEvent(keyEvent);
    }
Processing function 2, which looks like this: public void onConfigurationChanged(Configuration configuration) {
        super.onConfigurationChanged(configuration);
        this.mUnityPlayer.configurationChanged(configuration);
    }
Processing function 3, which looks like this: protected void onCreate(Bundle bundle) {
        requestWindowFeature(1);
        super.onCreate(bundle);
        getIntent().putExtra("unity", updateUnityCommandLineArguments(getIntent().getStringExtra("unity")));
        this.mUnityPlayer = new UnityPlayer(this);
        setContentView(this.mUnityPlayer);
        this.mUnityPlayer.requestFocus();
    }
Processing function 4, which looks like this: protected void onDestroy() {
        this.mUnityPlayer.destroy();
        super.onDestroy();
    }
Processing function 5, which looks like this: public boolean onGenericMotionEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Processing function 6, which looks like this: public boolean onKeyDown(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 7, which looks like this: public boolean onKeyUp(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 8, which looks like this: public void onLowMemory() {
        super.onLowMemory();
        this.mUnityPlayer.lowMemory();
    }
Processing function 9, which looks like this: protected void onNewIntent(Intent intent) {
        setIntent(intent);
    }
Processing function 10, which looks like this: protected void onPause() {
        super.onPause();
        this.mUnityPlayer.pause();
    }
Processing function 11, which looks like this: protected void onResume() {
        super.onResume();
        this.mUnityPlayer.resume();
    }
Processing function 12, which looks like this: protected void onStart() {
        super.onStart();
        this.mUnityPlayer.start();
    }
Processing function 13, which looks like this: protected void onStop() {
        super.onStop();
        this.mUnityPlayer.stop();
    }
Processing function 14, which looks like this: public boolean onTouchEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Processing function 15, which looks like this: public void onTrimMemory(int i) {
        super.onTrimMemory(i);
        if (i == 15) {
            this.mUnityPlayer.lowMemory();
        }
    }
Processing function 16, which looks like this: public void onWindowFocusChanged(boolean z) {
        super.onWindowFocusChanged(z);
        this.mUnityPlayer.windowFocusChanged(z);
    }
Processing function 17, which looks like this: protected String updateUnityCommandLineArguments(String str) {
        return str;
    }
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Saving output...
Output saved at /scratch/ms9761/rea-llm/starcoder/outputs/com.wb.parking.prado.driver.json!
Processing APK: com.ehtwo.oos.ordering.hospital.json
Processing function 1, which looks like this: protected void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        startActivity(new Intent(this, ChoosePatientActivity.class));
        finish();
    }
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Saving output...
Output saved at /scratch/ms9761/rea-llm/starcoder/outputs/com.ehtwo.oos.ordering.hospital.json!
Processing APK: com.dysgd.teenpattiace.json
Processing function 1, which looks like this: public void onNewIntent(Intent intent) {
        super.onNewIntent(intent);
        Bundle extras = intent.getExtras();
        if (extras == null) {
            return;
        }
        String string = extras.getString(Constants.MessagePayloadKeys.MSGID);
        String string2 = extras.getString(Constants.MessagePayloadKeys.MSGID);
        if (string2 == null) {
            string2 = extras.getString("message_id");
        }
        if (string != null && string2 != null) {
            Intent intent2 = new Intent(this, MessageForwardingService.class);
            intent2.setAction(MessageForwardingService.ACTION_REMOTE_INTENT);
            intent2.putExtras(intent);
            intent2.setData(intent.getData());
            startService(intent2);
        }
        setIntent(intent);
    }
Processing function 2, which looks like this: public void onCreate(Bundle bundle) {
        if (this.mUnityPlayer != null) {
            this.mUnityPlayer.quit();
            this.mUnityPlayer = null;
        }
        super.onCreate(bundle);
    }
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Saving output...
Output saved at /scratch/ms9761/rea-llm/starcoder/outputs/com.dysgd.teenpattiace.json!
Processing APK: com.enpgames.enpacpuzzle06.json
Processing function 1, which looks like this: protected String updateUnityCommandLineArguments(String str) {
        return str;
    }
Processing function 2, which looks like this: public void onCreate(Bundle bundle) {
        requestWindowFeature(1);
        super.onCreate(bundle);
        getIntent().putExtra("unity", updateUnityCommandLineArguments(getIntent().getStringExtra("unity")));
        this.mUnityPlayer = new UnityPlayer(this, this);
        setContentView(this.mUnityPlayer);
        this.mUnityPlayer.requestFocus();
    }
Processing function 3, which looks like this: public void onUnityPlayerUnloaded() {
        moveTaskToBack(true);
    }
Processing function 4, which looks like this: public void onUnityPlayerQuitted() {
        Process.killProcess(Process.myPid());
    }
Processing function 5, which looks like this: public void onNewIntent(Intent intent) {
        setIntent(intent);
        this.mUnityPlayer.newIntent(intent);
    }
Processing function 6, which looks like this: protected void onDestroy() {
        this.mUnityPlayer.destroy();
        super.onDestroy();
    }
Processing function 7, which looks like this: protected void onPause() {
        super.onPause();
        this.mUnityPlayer.pause();
    }
Processing function 8, which looks like this: protected void onResume() {
        super.onResume();
        this.mUnityPlayer.resume();
    }
Processing function 9, which looks like this: public void onLowMemory() {
        super.onLowMemory();
        this.mUnityPlayer.lowMemory();
    }
Processing function 10, which looks like this: public void onTrimMemory(int i) {
        super.onTrimMemory(i);
        if (i == 15) {
            this.mUnityPlayer.lowMemory();
        }
    }
Processing function 11, which looks like this: public void onConfigurationChanged(Configuration configuration) {
        super.onConfigurationChanged(configuration);
        this.mUnityPlayer.configurationChanged(configuration);
    }
Processing function 12, which looks like this: public void onWindowFocusChanged(boolean z) {
        super.onWindowFocusChanged(z);
        this.mUnityPlayer.windowFocusChanged(z);
    }
Processing function 13, which looks like this: public boolean dispatchKeyEvent(KeyEvent keyEvent) {
        if (keyEvent.getAction() == 2) {
            return this.mUnityPlayer.injectEvent(keyEvent);
        }
        return super.dispatchKeyEvent(keyEvent);
    }
Processing function 14, which looks like this: public boolean onKeyUp(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 15, which looks like this: public boolean onKeyDown(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 16, which looks like this: public boolean onTouchEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Processing function 17, which looks like this: public boolean onGenericMotionEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Saving output...
Output saved at /scratch/ms9761/rea-llm/starcoder/outputs/com.enpgames.enpacpuzzle06.json!
Processing APK: com.deirvlon.wordus.json
Processing function 1, which looks like this: public boolean dispatchKeyEvent(KeyEvent keyEvent) {
        return keyEvent.getAction() == 2 ? this.mUnityPlayer.injectEvent(keyEvent) : super.dispatchKeyEvent(keyEvent);
    }
Processing function 2, which looks like this: public void onConfigurationChanged(Configuration configuration) {
        super.onConfigurationChanged(configuration);
        this.mUnityPlayer.configurationChanged(configuration);
    }
Processing function 3, which looks like this: protected void onCreate(Bundle bundle) {
        requestWindowFeature(1);
        super.onCreate(bundle);
        getIntent().putExtra("unity", updateUnityCommandLineArguments(getIntent().getStringExtra("unity")));
        this.mUnityPlayer = new UnityPlayer(this);
        setContentView(this.mUnityPlayer);
        this.mUnityPlayer.requestFocus();
    }
Processing function 4, which looks like this: protected void onDestroy() {
        this.mUnityPlayer.destroy();
        super.onDestroy();
    }
Processing function 5, which looks like this: public boolean onGenericMotionEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Processing function 6, which looks like this: public boolean onKeyDown(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 7, which looks like this: public boolean onKeyUp(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 8, which looks like this: public void onLowMemory() {
        super.onLowMemory();
        this.mUnityPlayer.lowMemory();
    }
Processing function 9, which looks like this: protected void onNewIntent(Intent intent) {
        setIntent(intent);
        this.mUnityPlayer.newIntent(intent);
    }
Processing function 10, which looks like this: protected void onPause() {
        super.onPause();
        this.mUnityPlayer.pause();
    }
Processing function 11, which looks like this: protected void onResume() {
        super.onResume();
        this.mUnityPlayer.resume();
    }
Processing function 12, which looks like this: protected void onStart() {
        super.onStart();
        this.mUnityPlayer.start();
    }
Processing function 13, which looks like this: protected void onStop() {
        super.onStop();
        this.mUnityPlayer.stop();
    }
Processing function 14, which looks like this: public boolean onTouchEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Processing function 15, which looks like this: public void onTrimMemory(int i) {
        super.onTrimMemory(i);
        if (i == 15) {
            this.mUnityPlayer.lowMemory();
        }
    }
Processing function 16, which looks like this: public void onWindowFocusChanged(boolean z) {
        super.onWindowFocusChanged(z);
        this.mUnityPlayer.windowFocusChanged(z);
    }
Processing function 17, which looks like this: protected String updateUnityCommandLineArguments(String str) {
        return str;
    }
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Saving output...
Output saved at /scratch/ms9761/rea-llm/starcoder/outputs/com.deirvlon.wordus.json!
Processing APK: com.DSSoft.EverydaySudoku.json
Processing function 1, which looks like this: protected String updateUnityCommandLineArguments(String str) {
        return str;
    }
Processing function 2, which looks like this: protected void onCreate(Bundle bundle) {
        requestWindowFeature(1);
        super.onCreate(bundle);
        getIntent().putExtra("unity", updateUnityCommandLineArguments(getIntent().getStringExtra("unity")));
        this.mUnityPlayer = new UnityPlayer(this, this);
        setContentView(this.mUnityPlayer);
        this.mUnityPlayer.requestFocus();
    }
Processing function 3, which looks like this: public void onUnityPlayerUnloaded() {
        moveTaskToBack(true);
    }
Processing function 4, which looks like this: public void onUnityPlayerQuitted() {
        Process.killProcess(Process.myPid());
    }
Processing function 5, which looks like this: protected void onNewIntent(Intent intent) {
        setIntent(intent);
        this.mUnityPlayer.newIntent(intent);
    }
Processing function 6, which looks like this: protected void onDestroy() {
        this.mUnityPlayer.destroy();
        super.onDestroy();
    }
Processing function 7, which looks like this: protected void onPause() {
        super.onPause();
        this.mUnityPlayer.pause();
    }
Processing function 8, which looks like this: protected void onResume() {
        super.onResume();
        this.mUnityPlayer.resume();
    }
Processing function 9, which looks like this: public void onLowMemory() {
        super.onLowMemory();
        this.mUnityPlayer.lowMemory();
    }
Processing function 10, which looks like this: public void onTrimMemory(int i) {
        super.onTrimMemory(i);
        if (i == 15) {
            this.mUnityPlayer.lowMemory();
        }
    }
Processing function 11, which looks like this: public void onConfigurationChanged(Configuration configuration) {
        super.onConfigurationChanged(configuration);
        this.mUnityPlayer.configurationChanged(configuration);
    }
Processing function 12, which looks like this: public void onWindowFocusChanged(boolean z) {
        super.onWindowFocusChanged(z);
        this.mUnityPlayer.windowFocusChanged(z);
    }
Processing function 13, which looks like this: public boolean dispatchKeyEvent(KeyEvent keyEvent) {
        if (keyEvent.getAction() == 2) {
            return this.mUnityPlayer.injectEvent(keyEvent);
        }
        return super.dispatchKeyEvent(keyEvent);
    }
Processing function 14, which looks like this: public boolean onKeyUp(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 15, which looks like this: public boolean onKeyDown(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 16, which looks like this: public boolean onTouchEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Processing function 17, which looks like this: public boolean onGenericMotionEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Saving output...
Output saved at /scratch/ms9761/rea-llm/starcoder/outputs/com.DSSoft.EverydaySudoku.json!
Processing APK: com.ERCANGAMES.BreakerRush3D.json
Processing function 1, which looks like this: public void onUnityPlayerQuitted() {
    }
Processing function 2, which looks like this: protected String updateUnityCommandLineArguments(String str) {
        return str;
    }
Processing function 3, which looks like this: protected void onCreate(Bundle bundle) {
        requestWindowFeature(1);
        super.onCreate(bundle);
        getIntent().putExtra("unity", updateUnityCommandLineArguments(getIntent().getStringExtra("unity")));
        UnityPlayer unityPlayer = new UnityPlayer(this, this);
        this.mUnityPlayer = unityPlayer;
        setContentView(unityPlayer);
        this.mUnityPlayer.requestFocus();
    }
Processing function 4, which looks like this: public void onUnityPlayerUnloaded() {
        moveTaskToBack(true);
    }
Processing function 5, which looks like this: protected void onNewIntent(Intent intent) {
        setIntent(intent);
        this.mUnityPlayer.newIntent(intent);
    }
Processing function 6, which looks like this: protected void onDestroy() {
        this.mUnityPlayer.destroy();
        super.onDestroy();
    }
Processing function 7, which looks like this: protected void onPause() {
        super.onPause();
        this.mUnityPlayer.pause();
    }
Processing function 8, which looks like this: protected void onResume() {
        super.onResume();
        this.mUnityPlayer.resume();
    }
Processing function 9, which looks like this: public void onLowMemory() {
        super.onLowMemory();
        this.mUnityPlayer.lowMemory();
    }
Processing function 10, which looks like this: public void onTrimMemory(int i) {
        super.onTrimMemory(i);
        if (i == 15) {
            this.mUnityPlayer.lowMemory();
        }
    }
Processing function 11, which looks like this: public void onConfigurationChanged(Configuration configuration) {
        super.onConfigurationChanged(configuration);
        this.mUnityPlayer.configurationChanged(configuration);
    }
Processing function 12, which looks like this: public void onWindowFocusChanged(boolean z) {
        super.onWindowFocusChanged(z);
        this.mUnityPlayer.windowFocusChanged(z);
    }
Processing function 13, which looks like this: public boolean dispatchKeyEvent(KeyEvent keyEvent) {
        if (keyEvent.getAction() == 2) {
            return this.mUnityPlayer.injectEvent(keyEvent);
        }
        return super.dispatchKeyEvent(keyEvent);
    }
Processing function 14, which looks like this: public boolean onKeyUp(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 15, which looks like this: public boolean onKeyDown(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 16, which looks like this: public boolean onTouchEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Processing function 17, which looks like this: public boolean onGenericMotionEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Saving output...
Output saved at /scratch/ms9761/rea-llm/starcoder/outputs/com.ERCANGAMES.BreakerRush3D.json!
Processing APK: com.engkahp.ek1011.json
Processing function 1, which looks like this: public boolean dispatchKeyEvent(KeyEvent keyEvent) {
        return keyEvent.getAction() == 2 ? this.mUnityPlayer.injectEvent(keyEvent) : super.dispatchKeyEvent(keyEvent);
    }
Processing function 2, which looks like this: public void onConfigurationChanged(Configuration configuration) {
        super.onConfigurationChanged(configuration);
        this.mUnityPlayer.configurationChanged(configuration);
    }
Processing function 3, which looks like this: protected void onCreate(Bundle bundle) {
        requestWindowFeature(1);
        super.onCreate(bundle);
        getIntent().putExtra("unity", updateUnityCommandLineArguments(getIntent().getStringExtra("unity")));
        this.mUnityPlayer = new UnityPlayer(this);
        setContentView(this.mUnityPlayer);
        this.mUnityPlayer.requestFocus();
    }
Processing function 4, which looks like this: protected void onDestroy() {
        this.mUnityPlayer.destroy();
        super.onDestroy();
    }
Processing function 5, which looks like this: public boolean onGenericMotionEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Processing function 6, which looks like this: public boolean onKeyDown(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 7, which looks like this: public boolean onKeyUp(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 8, which looks like this: public void onLowMemory() {
        super.onLowMemory();
        this.mUnityPlayer.lowMemory();
    }
Processing function 9, which looks like this: protected void onNewIntent(Intent intent) {
        setIntent(intent);
    }
Processing function 10, which looks like this: protected void onPause() {
        super.onPause();
        this.mUnityPlayer.pause();
    }
Processing function 11, which looks like this: protected void onResume() {
        super.onResume();
        this.mUnityPlayer.resume();
    }
Processing function 12, which looks like this: protected void onStart() {
        super.onStart();
        this.mUnityPlayer.start();
    }
Processing function 13, which looks like this: protected void onStop() {
        super.onStop();
        this.mUnityPlayer.stop();
    }
Processing function 14, which looks like this: public boolean onTouchEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Processing function 15, which looks like this: public void onTrimMemory(int i) {
        super.onTrimMemory(i);
        if (i == 15) {
            this.mUnityPlayer.lowMemory();
        }
    }
Processing function 16, which looks like this: public void onWindowFocusChanged(boolean z) {
        super.onWindowFocusChanged(z);
        this.mUnityPlayer.windowFocusChanged(z);
    }
Processing function 17, which looks like this: protected String updateUnityCommandLineArguments(String str) {
        return str;
    }
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Saving output...
Output saved at /scratch/ms9761/rea-llm/starcoder/outputs/com.engkahp.ek1011.json!
Processing APK: com.cashgamer.app.json
Processing function 1, which looks like this: public void onClick(View view) {
            try {
                LoginActivity.this.startActivity(new Intent("android.intent.action.VIEW", Uri.parse("https://cashgamer.netlify.app/privacypolicy.html")));
            } catch (Exception unused) {
                LoginActivity loginActivity = LoginActivity.this;
                Toast.makeText(loginActivity, loginActivity.getString(R.string.profilefrag_str5), 1).show();
            }
        }
Processing function 2, which looks like this: public void updateDrawState(TextPaint textPaint) {
            super.updateDrawState(textPaint);
            textPaint.setUnderlineText(true);
        }
Processing function 3, which looks like this: public void onClick(View view) {
            try {
                LoginActivity.this.startActivity(new Intent("android.intent.action.VIEW", Uri.parse("https://cashgamer.netlify.app/tos.html")));
            } catch (Exception unused) {
                LoginActivity loginActivity = LoginActivity.this;
                Toast.makeText(loginActivity, loginActivity.getString(R.string.profilefrag_str5), 1).show();
            }
        }
Processing function 4, which looks like this: public void updateDrawState(TextPaint textPaint) {
            super.updateDrawState(textPaint);
            textPaint.setUnderlineText(true);
        }
Processing function 5, which looks like this: public void onClick(View view) {
            ((ApplicationInitialise) LoginActivity.this.getApplication()).b();
            LoginActivity loginActivity = LoginActivity.this;
            loginActivity.startActivityForResult(loginActivity.p.getSignInIntent(), loginActivity.q);
        }
Processing function 6, which looks like this: public void a(JSONObject jSONObject) {
            JSONObject jSONObject2 = jSONObject;
            LoginActivity.this.e.hide();
            try {
                JSONObject jSONObject3 = new JSONObject(jSONObject2.toString());
                String string = jSONObject3.getString("countryCode");
                String string2 = jSONObject3.getString(SearchIntents.EXTRA_QUERY);
                SharedPreferences.Editor edit = LoginActivity.this.f.edit();
                edit.putString("cc", string);
                edit.commit();
                LoginActivity.this.a(string2, this.f2725a);
            } catch (JSONException e) {
                e.printStackTrace();
            }
        }
Processing function 7, which looks like this: public void a(u uVar) {
            LoginActivity.this.e.hide();
            SharedPreferences.Editor edit = LoginActivity.this.f.edit();
            edit.putString("cc", "NA");
            edit.commit();
            LoginActivity.this.a("NA", this.f2727a);
        }
Processing function 8, which looks like this: public void a(JSONObject jSONObject) {
            JSONObject jSONObject2 = jSONObject;
            LoginActivity.this.e.hide();
            try {
                if (jSONObject2.getInt("success") == 1) {
                    JSONObject jSONObject3 = jSONObject2.getJSONObject("data");
                    String string = jSONObject3.getString("uniquecode");
                    String string2 = jSONObject3.getString("referred_by");
                    SharedPreferences.Editor edit = LoginActivity.this.f.edit();
                    edit.putString("uniquecode", string);
                    edit.putString("referred_by", string2);
                    edit.putInt("setting_1", 1);
                    edit.commit();
                    ((ApplicationInitialise) LoginActivity.this.getApplication()).a(this.f2729a);
                    String string3 = jSONObject2.getString("already_existed");
                    Intent intent = new Intent(LoginActivity.this, Home_exp1.class);
                    if (string3.equals("yes")) {
                        edit.putInt("credref", 1);
                        edit.commit();
                        intent.putExtra("greet", "Welcome Back " + this.f2729a.f2377b);
                    }
                    intent.setFlags(268468224);
                    LoginActivity.this.startActivity(intent);
                    return;
                }
Processing function 9, which looks like this: public void a(u uVar) {
            LoginActivity.this.e.hide();
            if (uVar.getCause() != null) {
                Toast.makeText(LoginActivity.this, "", 1).show();
            }
        }
Processing function 10, which looks like this: public void a(String str, c.c.a.r.f fVar) {
        Random random = d.a.a.a.a.f2767a;
        int i = 9;
        char[] cArr = new char[9];
        while (true) {
            int i2 = i - 1;
            if (i == 0) {
                String lowerCase = new String(cArr).toLowerCase();
                String str2 = fVar.f2376a;
                this.e.setMessage("Loading");
                this.e.show();
                c.a.b.w.l lVar = new c.a.b.w.l(0, "https://a0ips78uba.execute-api.us-east-2.amazonaws.com/default/lottery_useraccounts?option=2&email=" + str2 + "&uniquecode=" + lowerCase + "&ip=" + str, null, new f(fVar), new g());
                lVar.n = new c.a.b.f(this.g.f2369b, 1, 1.0f);
                m.a(this).a().a(lVar);
                return;
            }
            char nextInt = (char) (random.nextInt(91) + 32);
            if (Character.isLetter(nextInt) || Character.isDigit(nextInt)) {
                if (nextInt < 56320 || nextInt > 57343) {
                    if (nextInt < 55296 || nextInt > 56191) {
                        if (nextInt < 56192 || nextInt > 56319) {
                            cArr[i2] = nextInt;
                            i = i2;
                        }
                    }
Processing function 11, which looks like this: public void onActivityResult(int i, int i2, Intent intent) {
        super.onActivityResult(i, i2, intent);
        if (i == this.q) {
            try {
                GoogleSignInAccount result = GoogleSignIn.getSignedInAccountFromIntent(intent).getResult(ApiException.class);
                if (result != null) {
                    String displayName = result.getDisplayName();
                    String email = result.getEmail();
                    Uri photoUrl = result.getPhotoUrl();
                    a(new c.c.a.r.f(email, displayName, "" + photoUrl));
                }
            }
Processing function 12, which looks like this: public void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        setContentView(R.layout.activity_main);
        this.i = (Button) findViewById(R.id.login);
        this.f = getSharedPreferences(this.g.f2368a, 0);
        this.e = new ProgressDialog(this);
        this.e.setIndeterminate(true);
        this.e.setMessage(getString(R.string.common_msg1));
        this.e.setProgressStyle(0);
        this.e.setCancelable(false);
        this.j = (TextView) findViewById(R.id.textView1);
        this.k = (TextView) findViewById(R.id.textView2);
        this.l = (TextView) findViewById(R.id.textView3);
        this.m = (TextView) findViewById(R.id.textView4);
        this.n = (TextView) findViewById(R.id.textView5);
        this.h = this.f.getString("uniquecode", "noexist");
        SpannableString spannableString = new SpannableString(getString(R.string.loginactivity_str5));
        a aVar = new a();
        b bVar = new b();
        if (Locale.getDefault().getLanguage().equals("pt")) {
            spannableString.setSpan(aVar, 0, 23, 0);
            spannableString.setSpan(bVar, 26, spannableString.length(), 0);
        } else if (Locale.getDefault().getLanguage().equals("de")) {
            spannableString.setSpan(aVar, 0, 21, 0);
            spannableString.setSpan(bVar, 26, spannableString.length(), 0);
        } else if (Locale.getDefault().getLanguage().equals("es")) {
            spannableString.setSpan(aVar, 0, 22, 0);
            spannableString.setSpan(bVar, 25, spannableString.length(), 0);
        } else if (Locale.getDefault().getLanguage().equals("fr")) {
            spannableString.setSpan(aVar, 0, 29, 0);
            spannableString.setSpan(bVar, 32, spannableString.length(), 0);
        } else {
            spannableString.setSpan(aVar, 0, 14, 0);
            spannableString.setSpan(bVar, 17, 33, 0);
        }
        this.m.setText(spannableString);
        this.m.setMovementMethod(LinkMovementMethod.getInstance());
        this.m.setHighlightColor(0);
        Typeface createFromAsset = Typeface.createFromAsset(getAssets(), "blbold.ttf");
        Typeface createFromAsset2 = Typeface.createFromAsset(getAssets(), "blmedium.ttf");
        Typeface createFromAsset3 = Typeface.createFromAsset(getAssets(), "blregular.ttf");
        this.j.setTypeface(createFromAsset);
        this.k.setTypeface(createFromAsset2);
        this.l.setTypeface(createFromAsset3);
        this.m.setTypeface(createFromAsset3);
        this.n.setTypeface(createFromAsset3);
        this.o = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN).requestEmail().build();
        this.p = GoogleSignIn.getClient((Activity) this, this.o);
        c.c.a.r.f g2 = g();
        if (!this.h.equals("noexist") && g2 != null) {
            ((ApplicationInitialise) getApplication()).b();
            ((ApplicationInitialise) getApplication()).a(g2);
            Intent intent = new Intent(this, Home_exp1.class);
            intent.setFlags(268468224);
            startActivity(intent);
        }
        this.i.setOnClickListener(new c());
    }
Processing function 13, which looks like this: public void a(c.c.a.r.f fVar) {
        this.e.show();
        c.a.b.w.l lVar = new c.a.b.w.l(0, "https://urlshortner-152005.appspot.com/getCountry", null, new d(fVar), new e(fVar));
        lVar.n = new c.a.b.f(this.g.f2369b, 1, 1.0f);
        m.a(this).a().a(lVar);
    }
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Saving output...
Output saved at /scratch/ms9761/rea-llm/starcoder/outputs/com.cashgamer.app.json!
Processing APK: com.yoniishappy.dottted.json
Processing function 1, which looks like this: public boolean dispatchKeyEvent(KeyEvent keyEvent) {
        return keyEvent.getAction() == 2 ? this.mUnityPlayer.injectEvent(keyEvent) : super.dispatchKeyEvent(keyEvent);
    }
Processing function 2, which looks like this: public void onConfigurationChanged(Configuration configuration) {
        super.onConfigurationChanged(configuration);
        this.mUnityPlayer.configurationChanged(configuration);
    }
Processing function 3, which looks like this: protected void onCreate(Bundle bundle) {
        requestWindowFeature(1);
        super.onCreate(bundle);
        getIntent().putExtra("unity", updateUnityCommandLineArguments(getIntent().getStringExtra("unity")));
        this.mUnityPlayer = new UnityPlayer(this, this);
        setContentView(this.mUnityPlayer);
        this.mUnityPlayer.requestFocus();
    }
Processing function 4, which looks like this: protected void onDestroy() {
        this.mUnityPlayer.destroy();
        super.onDestroy();
    }
Processing function 5, which looks like this: public boolean onGenericMotionEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Processing function 6, which looks like this: public boolean onKeyDown(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 7, which looks like this: public boolean onKeyUp(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 8, which looks like this: public void onLowMemory() {
        super.onLowMemory();
        this.mUnityPlayer.lowMemory();
    }
Processing function 9, which looks like this: protected void onNewIntent(Intent intent) {
        setIntent(intent);
        this.mUnityPlayer.newIntent(intent);
    }
Processing function 10, which looks like this: protected void onPause() {
        super.onPause();
        this.mUnityPlayer.pause();
    }
Processing function 11, which looks like this: protected void onResume() {
        super.onResume();
        this.mUnityPlayer.resume();
    }
Processing function 12, which looks like this: public boolean onTouchEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Processing function 13, which looks like this: public void onTrimMemory(int i) {
        super.onTrimMemory(i);
        if (i == 15) {
            this.mUnityPlayer.lowMemory();
        }
    }
Processing function 14, which looks like this: public void onUnityPlayerQuitted() {
    }
Processing function 15, which looks like this: public void onUnityPlayerUnloaded() {
        moveTaskToBack(true);
    }
Processing function 16, which looks like this: public void onWindowFocusChanged(boolean z) {
        super.onWindowFocusChanged(z);
        this.mUnityPlayer.windowFocusChanged(z);
    }
Processing function 17, which looks like this: protected String updateUnityCommandLineArguments(String str) {
        return str;
    }
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Saving output...
Output saved at /scratch/ms9761/rea-llm/starcoder/outputs/com.yoniishappy.dottted.json!
Processing APK: com.airealmobile.messiahlutheran_1122.json
Processing function 1, which looks like this: private void showDevelopmentBannerIfDev() {
    }
Processing function 2, which looks like this: protected void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        ProcessLifecycleOwner.get().getLifecycle().addObserver(new ForegroundBackgroundListener());
        AndroidInjection.inject(this);
        Log.d(TAG, "Main.onCreate()");
        Intent intent = getIntent();
        if (intent.hasExtra(Notification.NOTIFICATION_ID)) {
            this.push_message_id = intent.getStringExtra(Notification.NOTIFICATION_ID);
        }
        if (intent.hasExtra(Notification.NOTIFICATION_MESSAGE)) {
            this.push_message_text = intent.getStringExtra(Notification.NOTIFICATION_MESSAGE);
        }
        if (intent.hasExtra(Notification.NOTIFICATION_MODULE_ID)) {
            this.initial_module_id = intent.getStringExtra(Notification.NOTIFICATION_MODULE_ID);
        }
        GoogleApiAvailability googleApiAvailability = GoogleApiAvailability.getInstance();
        int isGooglePlayServicesAvailable = googleApiAvailability.isGooglePlayServicesAvailable(this);
        if (isGooglePlayServicesAvailable != 0) {
            if (googleApiAvailability.isUserResolvableError(isGooglePlayServicesAvailable)) {
                googleApiAvailability.getErrorDialog(this, isGooglePlayServicesAvailable, 9000).show();
                return;
            }
            Log.i("Google Play Services", "This device is not supported.");
            finish();
            return;
        }
Processing function 3, which looks like this: private void setVersionCodes() {
        try {
            PackageManager packageManager = getPackageManager();
            if (packageManager != null) {
                PackageInfo packageInfo = packageManager.getPackageInfo(getPackageName(), 0);
                VERSION_CODE = Integer.valueOf(packageInfo.versionCode);
                VERSION_NAME = packageInfo.versionName;
                SharedPreferences defaultSharedPreferences = PreferenceManager.getDefaultSharedPreferences(this);
                if (!packageInfo.versionName.equals(defaultSharedPreferences.getString(Constants.PREVIOUS_A3_VERSION, null))) {
                    togglePushEnabledOffOn();
                }
                SharedPreferences.Editor edit = defaultSharedPreferences.edit();
                edit.putString(Constants.PREVIOUS_A3_VERSION, packageInfo.versionName);
                edit.apply();
                this.packageName = getPackageName();
            }
Processing function 4, which looks like this: private void togglePushEnabledOffOn() {
        new Thread(new Runnable() { // from class: com.airealmobile.general.-$$Lambda$Main$ykggEqfpcynCTuPcFeVLOP-tP-c
            @Override // java.lang.Runnable
            public final void run() {
                Main.this.lambda$togglePushEnabledOffOn$0$Main();
            }
        }
Processing function 5, which looks like this: private void showLoadingScreen() {
        setContentView(com.airealmobile.messiahlutheran_1122.R.layout.bootscreen_layout);
        setVersionFooter();
        showDevelopmentBannerIfDev();
        checkForLoadedApp();
    }
Processing function 6, which looks like this: private void setVersionFooter() {
        try {
            DotVersion dotVersion = new DotVersion(BuildConfig.VERSION_NAME);
            TextView textView = (TextView) findViewById(com.airealmobile.messiahlutheran_1122.R.id.poweredByVersion);
            if (!dotVersion.getVersion().equals("")) {
                textView.setText(getString(com.airealmobile.messiahlutheran_1122.R.string.poweredByAware3NoVersion) + "  • " + dotVersion.getVersion());
            } else {
                textView.setText(getString(com.airealmobile.messiahlutheran_1122.R.string.poweredByAware3NoVersion));
            }
        }
Processing function 7, which looks like this: private void checkForLoadedApp() {
        setupConfigurationManager();
        Log.d(TAG, "Main.checkForLoadedApp()");
        if (this.packageName.contains("com.aware3.universal")) {
            if (this.aware3Application.getCurrentApp() != null) {
                retrieveSetup(this.aware3Application.getCurrentApp());
                return;
            } else {
                retrieveIpAddress();
                return;
            }
        }
Processing function 8, which looks like this: private void setupConfigurationManager() {
        EncryptionUtility.getInstance();
        this.configurationManager = ConfigurationManager.getInstance();
        this.configurationFetchCompletion = new ConfigurationFetchCompletion() { // from class: com.airealmobile.general.Main.1
            @Override // com.airealmobile.configuration.ConfigurationFetchCompletion
            public void configurationFetchSuccessful() {
                Main.this.checkAppStatus();
            }

            @Override // com.airealmobile.configuration.ConfigurationFetchCompletion
            public void configurationFetchFailed() {
                Main.this.checkAppStatus();
            }
        }
Processing function 9, which looks like this: public void showAppSearch() {
        new Timer().schedule(new TimerTask() { // from class: com.airealmobile.general.Main.2
            @Override // java.util.TimerTask, java.lang.Runnable
            public void run() {
                Intent intent = new Intent(Main.this, AppSearchActivity.class);
                intent.setFlags(335544320);
                Main.this.startActivity(intent);
            }
        }
Processing function 10, which looks like this: public void retrieveSetup(AppObject appObject) {
        if (appObject.isListingOnly()) {
            listingOnlySetup(appObject);
        } else {
            fullSetupCall(appObject);
        }
    }
Processing function 11, which looks like this: private void listingOnlySetup(AppObject appObject) {
        Log.d(TAG, "Main.listingOnlySetup()");
        new OrganizationRetriever(appObject.getAppId(), this).execute(new String[0]);
    }
Processing function 12, which looks like this: private void fullSetupCall(AppObject appObject) {
        if (isFinishing()) {
            return;
        }
        showDialog(DIALOG_INTERNET_LOADING);
        Log.d(TAG, "Main.fullSetupCall()");
        this.configurationManager.fetchConfiguration(this.configurationFetchCompletion);
    }
Processing function 13, which looks like this: public void checkAppStatus() {
        HomeInfo homeInfo = ConfigurationManager.getInstance().getHomeInfo();
        this.homeInfo = homeInfo;
        String prefAppStatus = (homeInfo == null || homeInfo.getPrefAppStatus() == null) ? null : this.homeInfo.getPrefAppStatus();
        if (prefAppStatus != null && !prefAppStatus.isEmpty() && !prefAppStatus.contentEquals(Constants.APP_STATUS_EMPTY)) {
            showDialog(1);
            return;
        }
        setVersionCodes();
        checkVersionNumber();
    }
Processing function 14, which looks like this: private void checkVersionNumber() {
        HomeInfo homeInfo = this.homeInfo;
        if (homeInfo != null) {
            DotVersion dotVersion = new DotVersion(homeInfo.getPrefSupportedVersion());
            DotVersion dotVersion2 = new DotVersion(BuildConfig.VERSION_NAME);
            if (!this.packageName.contains("com.aware3.universal") && dotVersion.compareTo(dotVersion2) == 1) {
                if (isFinishing()) {
                    return;
                }
                showDialog(2, null);
                return;
            }
Processing function 15, which looks like this: protected void onStart() {
        super.onStart();
        EventBus.getDefault().register(this);
    }
Processing function 16, which looks like this: protected void onStop() {
        super.onStop();
        EventBus.getDefault().unregister(this);
    }
Processing function 17, which looks like this: public void onShowHomeScreenEvent(ShowHomeScreenEvent showHomeScreenEvent) {
        loadHomePage();
    }
Processing function 18, which looks like this: protected void loadHomePage() {
        boolean z = false;
        SharedPreferences preferences = getPreferences(0);
        Boolean valueOf = Boolean.valueOf(preferences.getBoolean("pref_key_onboarding", false));
        EndUser profile = this.aware3Application.getProfile();
        if (!valueOf.booleanValue() && profile != null && (profile.getEndUserId() == null || profile.getEndUserId().length() == 0)) {
            z = true;
        }
        if (shouldShowListingHomeActivity()) {
            Log.d(TAG, "Main - SHOWING ListingHomeActivity");
            Intent intent = new Intent(this, ListingHomeActivity.class);
            intent.setFlags(335544320);
            if (z) {
                intent.setFlags(65536 | intent.getFlags());
            }
            startActivity(intent);
        }
Processing function 19, which looks like this: private boolean shouldShowListingHomeActivity() {
        return this.aware3Application.getCurrentListing() != null;
    }
Processing function 20, which looks like this: private void retrieveIpAddress() {
        new IpAddressRetriever(this).execute(new String[0]);
    }
Processing function 21, which looks like this: public void checkDeepLinking() {
        new GraphRetriever(this).execute(new String[0]);
    }
Processing function 22, which looks like this: public Dialog onCreateDialog(int i) {
        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        if (i == 1) {
            builder.setMessage("This app has been disabled. Please check back soon!");
            builder.setTitle("App Disabled");
            builder.setCancelable(false);
            builder.setPositiveButton("Ok", new DialogInterface.OnClickListener() { // from class: com.airealmobile.general.Main.3
                @Override // android.content.DialogInterface.OnClickListener
                public void onClick(DialogInterface dialogInterface, int i2) {
                    System.exit(0);
                }
            }
Processing function 23, which looks like this: public void onClick(DialogInterface dialogInterface, int i2) {
                    System.exit(0);
                }
Processing function 24, which looks like this: public void onClick(DialogInterface dialogInterface, int i2) {
                    Intent intent = new Intent("android.intent.action.VIEW");
                    intent.setData(Uri.parse("market://details?id=" + Main.this.packageName));
                    Main.this.startActivity(intent);
                    Main.this.startActivity(intent);
                    dialogInterface.dismiss();
                    System.exit(0);
                }
Processing function 25, which looks like this: public void onClick(DialogInterface dialogInterface, int i2) {
                    dialogInterface.dismiss();
                    Main.this.finish();
                }
Processing function 26, which looks like this: public void onCancel(DialogInterface dialogInterface) {
                    dialogInterface.dismiss();
                    Main.this.finish();
                }
Processing function 27, which looks like this: public String doInBackground(String... strArr) {
            try {
                DefaultHttpClient defaultHttpClient = new DefaultHttpClient();
                HttpPost httpPost = new HttpPost(this.url);
                JSONObject jSONObject = new JSONObject();
                jSONObject.put("query", "");
                jSONObject.put("package_name", this.packageName);
                String encryptData = EncryptionUtility.getInstance().encryptData(jSONObject.toString());
                MultipartEntityBuilder create = MultipartEntityBuilder.create();
                create.setMode(HttpMultipartMode.BROWSER_COMPATIBLE);
                create.addTextBody("encrypted_payload", encryptData);
                httpPost.setEntity(create.build());
                HttpEntity entity = defaultHttpClient.execute(httpPost).getEntity();
                this.searchResults = new ArrayList<>();
                if (entity != null && entity.getContentLength() > 0) {
                    StringBuilder sb = new StringBuilder();
                    try {
                        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(entity.getContent()), 65728);
                        while (true) {
                            String readLine = bufferedReader.readLine();
                            if (readLine == null) {
                                break;
                            }
                            sb.append(readLine);
                        }
Processing function 28, which looks like this: public void onPostExecute(String str) {
            super.onPostExecute((AppSearchRetriever) str);
            ArrayList<AppObject> arrayList = this.searchResults;
            if (arrayList == null || arrayList.size() <= 0) {
                return;
            }
            AppObject appObject = null;
            Iterator<AppObject> it = this.searchResults.iterator();
            while (true) {
                if (!it.hasNext()) {
                    break;
                }
                AppObject next = it.next();
                if (next.getPackageId().equalsIgnoreCase(this.packageName)) {
                    appObject = next;
                    break;
                }
            }
Processing function 29, which looks like this: public void onPostExecute(String str) {
            super.onPostExecute((IpAddressRetriever) str);
            if (Main.this.ipAddress != null) {
                Main.this.checkDeepLinking();
            } else {
                Main.this.showAppSearch();
            }
        }
Processing function 30, which looks like this: public void onPostExecute(String str) {
            super.onPostExecute((GraphRetriever) str);
            if (this.linkedApp != null) {
                Main.this.aware3Application.setCurrentApp(this.linkedApp);
                Main.this.retrieveSetup(this.linkedApp);
                return;
            }
            Main.this.showAppSearch();
        }
Processing function 31, which looks like this: public void onPostExecute(String str) {
            super.onPostExecute((OrganizationRetriever) str);
            if (this.listing != null) {
                Main.this.aware3Application.setCurrentListing(this.listing);
            }
            Main.this.retrieveProfile();
        }
Processing function 32, which looks like this: public void retrieveProfile() {
        if (this.isRetrievingProfile) {
            return;
        }
        this.isRetrievingProfile = true;
        final String deviceIdentifier = new SharedPrefsHelperImpl(getApplicationContext()).getDeviceIdentifier();
        AppObject currentApp = this.aware3Application.getCurrentApp();
        if (currentApp != null && currentApp.getAppId() != null) {
            this.identifier = currentApp.getAppId();
        }
        this.profileApiService.get().getProfile(deviceIdentifier, new Observer<EndUser>() { // from class: com.airealmobile.general.Main.8
            @Override // io.reactivex.Observer
            public void onSubscribe(Disposable disposable) {
            }

            @Override // io.reactivex.Observer
            public void onNext(EndUser endUser) {
                if (endUser == null || endUser.getEndUserId() == null) {
                    new EndUser().setDeviceId(Main.this.identifier);
                    Main.this.aware3Application.setProfile(new EndUser());
                    return;
                }
                endUser.setDeviceId(deviceIdentifier);
                Main.this.aware3Application.setProfile(endUser);
                if (!Main.this.isRetrievingNotifications) {
                    Main.this.retrieveNotifications();
                }
                if (endUser != null && endUser.getFirebaseToken() != null && Main.this.homeInfo != null && Main.this.homeInfo.isChat_enabled()) {
                    Main.this.buildFirebaseData(endUser.getFirebaseToken());
                }
                Main.this.isRetrievingProfile = false;
            }
Processing function 33, which looks like this: public void onError(Throwable th) {
                new EndUser().setDeviceId(Main.this.identifier);
                Main.this.aware3Application.setProfile(new EndUser());
                if (!Main.this.isRetrievingNotifications) {
                    Main.this.retrieveNotifications();
                }
                Main.this.isRetrievingProfile = false;
            }
Processing function 34, which looks like this: public void onComplete() {
                if (!Main.this.isRetrievingNotifications) {
                    Main.this.retrieveNotifications();
                }
                Main.this.isRetrievingProfile = false;
            }
Processing function 35, which looks like this: public void buildFirebaseData(String str) {
        if (str != null) {
            final Aware3Application aware3Application = this.aware3Application;
            final EndUser profile = aware3Application.getProfile();
            try {
                FirebaseAuth.getInstance().signInWithCustomToken(str).addOnCompleteListener(this, new OnCompleteListener<AuthResult>() { // from class: com.airealmobile.general.Main.9
                    @Override // com.google.android.gms.tasks.OnCompleteListener
                    public void onComplete(Task<AuthResult> task) {
                        if (task.isSuccessful()) {
                            final String uid = task.getResult().getUser().getUid();
                            profile.setFireBaseUser(uid);
                            final FirebaseDatabase firebaseDatabase = FirebaseDatabase.getInstance();
                            final DatabaseReference reference = firebaseDatabase.getReference("users/" + uid);
                            final AppObject currentApp = aware3Application.getCurrentApp();
                            reference.addListenerForSingleValueEvent(new ValueEventListener() { // from class: com.airealmobile.general.Main.9.1
                                @Override // com.google.firebase.database.ValueEventListener
                                public void onCancelled(DatabaseError databaseError) {
                                }

                                @Override // com.google.firebase.database.ValueEventListener
                                public void onDataChange(DataSnapshot dataSnapshot) {
                                    HashMap hashMap = new HashMap();
                                    hashMap.put("app_id", Integer.valueOf(currentApp.getAppId()));
                                    if (profile.getProfilePhotoUrl() != null && !profile.getProfilePhotoUrl().equalsIgnoreCase("")) {
                                        hashMap.put("avatar", "https://aware3.net/api/image/" + profile.getProfilePhotoUrl());
                                    }
                                    hashMap.put("first_name", profile.getFirstName());
                                    hashMap.put("last_name", profile.getLastName());
                                    hashMap.put("last_seen", ServerValue.TIMESTAMP);
                                    if (!dataSnapshot.exists()) {
                                        hashMap.put("joined", ServerValue.TIMESTAMP);
                                    } else {
                                        hashMap.put("joined", ((HashMap) dataSnapshot.getValue()).get("joined"));
                                    }
                                    reference.setValue(hashMap);
                                    DatabaseReference reference2 = firebaseDatabase.getReference("apps/" + currentApp.getAppId() + "/online/" + uid);
                                    reference2.onDisconnect().removeValue();
                                    reference2.child("online_since").setValue(ServerValue.TIMESTAMP);
                                    firebaseDatabase.getReference("user_history/" + uid).child("last_seen").setValue(ServerValue.TIMESTAMP);
                                }
Processing function 36, which looks like this: public void retrieveNotifications() {
        this.isRetrievingNotifications = true;
        EndUser profile = this.aware3Application.getProfile();
        new NotificationRetriever(profile != null ? profile.getEndUserId() : null, this).execute(new String[0]);
    }
Processing function 37, which looks like this: public void onPostExecute(String str) {
            super.onPostExecute((NotificationRetriever) str);
            Set<String> stringSet = Main.this.getSharedPreferences(Aware3Application.NOTIFICATION_SHARED_PREF, 0).getStringSet(Aware3Application.NOTIFICATION_READ_MESSAGES, null);
            Set<String> stringSet2 = Main.this.getSharedPreferences(Aware3Application.NOTIFICATION_DELETED_PREF, 0).getStringSet(Aware3Application.NOTIFICATION_DELETED_MESSAGES, null);
            ArrayList<com.airealmobile.modules.notifications.api.model.Notification> arrayList = this.retrievedNotifications;
            boolean z = true;
            if (arrayList != null) {
                if (stringSet != null) {
                    Iterator<com.airealmobile.modules.notifications.api.model.Notification> it = arrayList.iterator();
                    while (it.hasNext()) {
                        com.airealmobile.modules.notifications.api.model.Notification next = it.next();
                        if (stringSet2 == null || !stringSet2.contains(next.getNotificationId())) {
                            if (!stringSet.contains(next.getNotificationId())) {
                                break;
                            }
                        }
Processing function 38, which looks like this: public void retrieveAuthToken() {
        AppObject currentApp = this.aware3Application.getCurrentApp();
        EndUser profile = this.aware3Application.getProfile();
        if (profile != null && profile.getEndUserId() != null) {
            AuthTokenRetriever authTokenRetriever = new AuthTokenRetriever(profile.getEndUserId(), currentApp.getAppId(), profile.getDeviceId());
            authTokenRetriever.setListener(this);
            authTokenRetriever.execute(new Void[0]);
            return;
        }
        currentApp.setAuthToken("");
        loadHomePage();
    }
Processing function 39, which looks like this: public void didFailToRetrieveAuthToken(AuthTokenRetriever authTokenRetriever) {
        this.aware3Application.getCurrentApp().setAuthToken("");
        loadHomePage();
    }
Processing function 40, which looks like this: public void didRetrieveAuthToken(AuthTokenRetriever authTokenRetriever, String str) {
        this.aware3Application.getCurrentApp().setAuthToken(str);
        loadHomePage();
    }
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Saving output...
Output saved at /scratch/ms9761/rea-llm/starcoder/outputs/com.airealmobile.messiahlutheran_1122.json!
Processing APK: com.wizards.winter_orb.json
Processing function 1, which looks like this: public void run() {
                GrantDto d2 = LoadingActivity.this.w.d();
                if (d2 != null) {
                    n.a.a.a(d2.toString(), new Object[0]);
                }
                m.b().a().a((r<String>) "START_APP");
            }
Processing function 2, which looks like this: public void a(String str) {
            char c2;
            int hashCode = str.hashCode();
            if (hashCode != -1557588930) {
                if (hashCode == 658573444 && str.equals("START_APP")) {
                    c2 = 1;
                }
                c2 = 65535;
            }
Processing function 3, which looks like this: public void w() {
        startActivity(new Intent(this, HomeViewActivity.class));
    }
Processing function 4, which looks like this: public void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        if (!isTaskRoot() && getIntent().hasCategory("android.intent.category.LAUNCHER") && getIntent().getAction() != null && getIntent().getAction().equals("android.intent.action.MAIN")) {
            finish();
            return;
        }
        j.a.a.a.a.a(this);
        setContentView(R.layout.activity_loading);
        ((DaggerBaseApplication) getApplication()).a().a(this);
        this.z.a();
        Uri data = getIntent().getData();
        if (data != null) {
            this.y.a(data.getQueryParameter("refresh_token"));
            this.w.a((GrantDto) null, (Boolean) false);
        }
        m.b().a().a(this, new a());
    }
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Saving output...
Output saved at /scratch/ms9761/rea-llm/starcoder/outputs/com.wizards.winter_orb.json!
Processing APK: com.DefaultCompany.move.json
Processing function 1, which looks like this: public void onUnityPlayerQuitted() {
    }
Processing function 2, which looks like this: protected String updateUnityCommandLineArguments(String str) {
        return str;
    }
Processing function 3, which looks like this: protected void onCreate(Bundle bundle) {
        requestWindowFeature(1);
        super.onCreate(bundle);
        getIntent().putExtra("unity", updateUnityCommandLineArguments(getIntent().getStringExtra("unity")));
        UnityPlayer unityPlayer = new UnityPlayer(this, this);
        this.mUnityPlayer = unityPlayer;
        setContentView(unityPlayer);
        this.mUnityPlayer.requestFocus();
    }
Processing function 4, which looks like this: public void onUnityPlayerUnloaded() {
        moveTaskToBack(true);
    }
Processing function 5, which looks like this: protected void onNewIntent(Intent intent) {
        setIntent(intent);
        this.mUnityPlayer.newIntent(intent);
    }
Processing function 6, which looks like this: protected void onDestroy() {
        this.mUnityPlayer.destroy();
        super.onDestroy();
    }
Processing function 7, which looks like this: protected void onPause() {
        super.onPause();
        this.mUnityPlayer.pause();
    }
Processing function 8, which looks like this: protected void onResume() {
        super.onResume();
        this.mUnityPlayer.resume();
    }
Processing function 9, which looks like this: public void onLowMemory() {
        super.onLowMemory();
        this.mUnityPlayer.lowMemory();
    }
Processing function 10, which looks like this: public void onTrimMemory(int i) {
        super.onTrimMemory(i);
        if (i == 15) {
            this.mUnityPlayer.lowMemory();
        }
    }
Processing function 11, which looks like this: public void onConfigurationChanged(Configuration configuration) {
        super.onConfigurationChanged(configuration);
        this.mUnityPlayer.configurationChanged(configuration);
    }
Processing function 12, which looks like this: public void onWindowFocusChanged(boolean z) {
        super.onWindowFocusChanged(z);
        this.mUnityPlayer.windowFocusChanged(z);
    }
Processing function 13, which looks like this: public boolean dispatchKeyEvent(KeyEvent keyEvent) {
        if (keyEvent.getAction() == 2) {
            return this.mUnityPlayer.injectEvent(keyEvent);
        }
        return super.dispatchKeyEvent(keyEvent);
    }
Processing function 14, which looks like this: public boolean onKeyUp(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 15, which looks like this: public boolean onKeyDown(int i, KeyEvent keyEvent) {
        return this.mUnityPlayer.injectEvent(keyEvent);
    }
Processing function 16, which looks like this: public boolean onTouchEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Processing function 17, which looks like this: public boolean onGenericMotionEvent(MotionEvent motionEvent) {
        return this.mUnityPlayer.injectEvent(motionEvent);
    }
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Saving output...
Output saved at /scratch/ms9761/rea-llm/starcoder/outputs/com.DefaultCompany.move.json!
Processing APK: com.flashlightalarm.json
Processing function 1, which looks like this: public void onClick(View view) {
            e.t.c.f.d(view, "arg0");
            boolean z = true;
            String[] strArr = {flashlightalarm.this.ja("SelectAll"), "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23"};
            AlertDialog.Builder builder = new AlertDialog.Builder(flashlightalarm.this, flashlightalarm.t0);
            w wVar = flashlightalarm.D;
            flashlightalarm.E0 = view.getId();
            builder.setTitle(flashlightalarm.this.ja("Hours"));
            int length = this.n.length - 1;
            if (length >= 0) {
                int i = 0;
                while (true) {
                    int i2 = i + 1;
                    this.n[i] = false;
                    if (i2 > length) {
                        break;
                    }
                    i = i2;
                }
Processing function 2, which looks like this: public void onProgressChanged(SeekBar seekBar, int i, boolean z) {
            e.t.c.f.d(seekBar, "arg0");
            if (flashlightalarm.T0 == i) {
                return;
            }
            if (z) {
                w wVar = flashlightalarm.D;
                flashlightalarm.T0 = i;
            }
            flashlightalarm.this.c5();
        }
Processing function 3, which looks like this: public void onStartTrackingTouch(SeekBar seekBar) {
            e.t.c.f.d(seekBar, "arg0");
        }
Processing function 4, which looks like this: public void onStopTrackingTouch(SeekBar seekBar) {
            e.t.c.f.d(seekBar, "arg0");
        }
Processing function 5, which looks like this: public void onClick(View view) {
            e.t.c.f.d(view, "arg0");
            boolean z = true;
            String[] strArr = {flashlightalarm.this.ja("SelectAll"), "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59"};
            AlertDialog.Builder builder = new AlertDialog.Builder(flashlightalarm.this, flashlightalarm.t0);
            w wVar = flashlightalarm.D;
            flashlightalarm.E0 = view.getId();
            builder.setTitle(flashlightalarm.this.ja("Minutes"));
            int length = this.n.length - 1;
            if (length >= 0) {
                int i = 0;
                while (true) {
                    int i2 = i + 1;
                    this.n[i] = false;
                    if (i2 > length) {
                        break;
                    }
                    i = i2;
                }
Processing function 6, which looks like this: public void addView(View view) {
            e.t.c.f.d(view, "child");
            super.addView(view);
            a(view);
        }
Processing function 7, which looks like this: public void addView(View view, int i, ViewGroup.LayoutParams layoutParams) {
            e.t.c.f.d(view, "child");
            e.t.c.f.d(layoutParams, "params");
            super.addView(view, i, layoutParams);
            a(view);
        }
Processing function 8, which looks like this: public void addView(View view, ViewGroup.LayoutParams layoutParams) {
            e.t.c.f.d(view, "child");
            e.t.c.f.d(layoutParams, "params");
            super.addView(view, layoutParams);
            a(view);
        }
Processing function 9, which looks like this: public void onProgressChanged(SeekBar seekBar, int i, boolean z) {
            e.t.c.f.d(seekBar, "arg0");
            if (flashlightalarm.U0 == i) {
                return;
            }
            if (z) {
                w wVar = flashlightalarm.D;
                flashlightalarm.U0 = i;
            }
            if (flashlightalarm.U0 > 0) {
                flashlightalarm.this.S();
            }
            flashlightalarm.this.M4();
        }
Processing function 10, which looks like this: public void onStartTrackingTouch(SeekBar seekBar) {
            e.t.c.f.d(seekBar, "arg0");
        }
Processing function 11, which looks like this: public void onStopTrackingTouch(SeekBar seekBar) {
            e.t.c.f.d(seekBar, "arg0");
        }
Processing function 12, which looks like this: public void addView(View view) {
            e.t.c.f.d(view, "child");
            super.addView(view);
            a(view);
        }
Processing function 13, which looks like this: public void addView(View view, int i, ViewGroup.LayoutParams layoutParams) {
            e.t.c.f.d(view, "child");
            e.t.c.f.d(layoutParams, "params");
            super.addView(view, i, layoutParams);
            a(view);
        }
Processing function 14, which looks like this: public void addView(View view, ViewGroup.LayoutParams layoutParams) {
            e.t.c.f.d(view, "child");
            e.t.c.f.d(layoutParams, "params");
            super.addView(view, layoutParams);
            a(view);
        }
Processing function 15, which looks like this: public void onClick(View view) {
            e.t.c.f.d(view, "arg0");
            boolean z = true;
            String[] strArr = {flashlightalarm.this.ja("everyweek"), "1", "2", "3", "4"};
            AlertDialog.Builder builder = new AlertDialog.Builder(flashlightalarm.this, flashlightalarm.t0);
            builder.setTitle(flashlightalarm.this.ja("repeatweek"));
            this.n = new boolean[]{false, false, false, false, false};
            int size = flashlightalarm.X.k().size() - 1;
            if (size >= 0) {
                int i = 0;
                while (true) {
                    int i2 = i + 1;
                    this.n[flashlightalarm.X.k().get(i).intValue() + 1] = true;
                    if (i2 > size) {
                        break;
                    }
                    i = i2;
                }
Processing function 16, which looks like this: public void onClick(View view) {
            e.t.c.f.d(view, "arg0");
            boolean z = true;
            String[] strArr = {flashlightalarm.this.ja("SelectAll"), flashlightalarm.this.ja("Monday"), flashlightalarm.this.ja("Tuesday"), flashlightalarm.this.ja("Wednesday"), flashlightalarm.this.ja("Thursday"), flashlightalarm.this.ja("Friday"), flashlightalarm.this.ja("Saturday"), flashlightalarm.this.ja("Sunday")};
            AlertDialog.Builder builder = new AlertDialog.Builder(flashlightalarm.this, flashlightalarm.t0);
            builder.setTitle(flashlightalarm.this.ja("Select_repeat_days"));
            this.n = new boolean[]{false, false, false, false, false, false, false, false};
            int size = flashlightalarm.X.i().size() - 1;
            if (size >= 0) {
                int i = 0;
                while (true) {
                    int i2 = i + 1;
                    this.n[flashlightalarm.X.i().get(i).intValue() + 1] = true;
                    if (i2 > size) {
                        break;
                    }
                    i = i2;
                }
Processing function 17, which looks like this: public void addView(View view) {
            e.t.c.f.d(view, "child");
            super.addView(view);
            a(view);
        }
Processing function 18, which looks like this: public void addView(View view, int i, ViewGroup.LayoutParams layoutParams) {
            e.t.c.f.d(view, "child");
            e.t.c.f.d(layoutParams, "params");
            super.addView(view, i, layoutParams);
            a(view);
        }
Processing function 19, which looks like this: public void addView(View view, ViewGroup.LayoutParams layoutParams) {
            e.t.c.f.d(view, "child");
            e.t.c.f.d(layoutParams, "params");
            super.addView(view, layoutParams);
            a(view);
        }
Processing function 20, which looks like this: public void onClick(View view) {
            e.t.c.f.d(view, "arg0");
            boolean z = true;
            String[] strArr = {flashlightalarm.this.ja("SelectAll"), "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"};
            AlertDialog.Builder builder = new AlertDialog.Builder(flashlightalarm.this, flashlightalarm.t0);
            builder.setTitle(flashlightalarm.this.ja("Select_repeat_months"));
            this.n = new boolean[]{false, false, false, false, false, false, false, false, false, false, false, false, false};
            int size = flashlightalarm.X.j().size() - 1;
            if (size >= 0) {
                int i = 0;
                while (true) {
                    int i2 = i + 1;
                    this.n[flashlightalarm.X.j().get(i).intValue() + 1] = true;
                    if (i2 > size) {
                        break;
                    }
                    i = i2;
                }
Processing function 21, which looks like this: public void addView(View view) {
            e.t.c.f.d(view, "child");
            super.addView(view);
            a(view);
        }
Processing function 22, which looks like this: public void addView(View view, int i, ViewGroup.LayoutParams layoutParams) {
            e.t.c.f.d(view, "child");
            e.t.c.f.d(layoutParams, "params");
            super.addView(view, i, layoutParams);
            a(view);
        }
Processing function 23, which looks like this: public void addView(View view, ViewGroup.LayoutParams layoutParams) {
            e.t.c.f.d(view, "child");
            e.t.c.f.d(layoutParams, "params");
            super.addView(view, layoutParams);
            a(view);
        }
Processing function 24, which looks like this: public void onClick(View view) {
            e.t.c.f.d(view, "arg0");
            boolean z = true;
            String[] strArr = {flashlightalarm.this.ja("SelectAll"), "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", e.t.c.f.i(flashlightalarm.this.ja("Lastday"), "-12"), e.t.c.f.i(flashlightalarm.this.ja("Lastday"), "-11"), e.t.c.f.i(flashlightalarm.this.ja("Lastday"), "-10"), e.t.c.f.i(flashlightalarm.this.ja("Lastday"), "-9"), e.t.c.f.i(flashlightalarm.this.ja("Lastday"), "-8"), e.t.c.f.i(flashlightalarm.this.ja("Lastday"), "-7"), e.t.c.f.i(flashlightalarm.this.ja("Lastday"), "-6"), e.t.c.f.i(flashlightalarm.this.ja("Lastday"), "-5"), e.t.c.f.i(flashlightalarm.this.ja("Lastday"), "-4"), e.t.c.f.i(flashlightalarm.this.ja("Lastday"), "-3"), e.t.c.f.i(flashlightalarm.this.ja("Lastday"), "-2"), e.t.c.f.i(flashlightalarm.this.ja("Lastday"), "-1"), flashlightalarm.this.ja("Lastday")};
            AlertDialog.Builder builder = new AlertDialog.Builder(flashlightalarm.this, flashlightalarm.t0);
            builder.setTitle(flashlightalarm.this.ja("DateRepeatselection"));
            this.n = new boolean[]{false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false};
            int size = flashlightalarm.X.h().size() - 1;
            if (size >= 0) {
                int i = 0;
                while (true) {
                    int i2 = i + 1;
                    this.n[flashlightalarm.X.h().get(i).intValue() + 1] = true;
                    if (i2 > size) {
                        break;
                    }
                    i = i2;
                }
Processing function 25, which looks like this: public void afterTextChanged(Editable editable) {
            e.t.c.f.d(editable, "s");
        }
Processing function 26, which looks like this: public void beforeTextChanged(CharSequence charSequence, int i, int i2, int i3) {
            e.t.c.f.d(charSequence, "s");
        }
Processing function 27, which looks like this: public void onTextChanged(CharSequence charSequence, int i, int i2, int i3) {
            e.t.c.f.d(charSequence, "s");
            p pVar = flashlightalarm.this.z3;
            e.t.c.f.b(pVar);
            String obj = pVar.b().getText().toString();
            flashlightalarm flashlightalarmVar = flashlightalarm.this;
            p pVar2 = new p(flashlightalarmVar, flashlightalarmVar);
            pVar2.b().setGravity(51);
            pVar2.b().setTextIsSelectable(false);
            pVar2.b().setText(obj);
            pVar2.b().measure(View.MeasureSpec.makeMeasureSpec(flashlightalarm.I0, Integer.MIN_VALUE), View.MeasureSpec.makeMeasureSpec(0, 0));
            int measuredHeight = pVar2.b().getMeasuredHeight() + flashlightalarm.J0;
            p pVar3 = flashlightalarm.this.z3;
            e.t.c.f.b(pVar3);
            if (measuredHeight != pVar3.b().getHeight()) {
                p pVar4 = flashlightalarm.this.z3;
                e.t.c.f.b(pVar4);
                pVar4.b().setHeight(measuredHeight);
                p pVar5 = flashlightalarm.this.z3;
                e.t.c.f.b(pVar5);
                int selectionStart = pVar5.b().getSelectionStart();
                p pVar6 = flashlightalarm.this.z3;
                e.t.c.f.b(pVar6);
                Layout layout = pVar6.b().getLayout();
                if (layout == null) {
                    return;
                }
                int lineForOffset = layout.getLineForOffset(selectionStart);
                int lineBaseline = layout.getLineBaseline(lineForOffset);
                int lineAscent = layout.getLineAscent(lineForOffset);
                layout.getPrimaryHorizontal(selectionStart);
                ScrollView scrollView = flashlightalarm.this.j5;
                e.t.c.f.b(scrollView);
                if ((lineBaseline + lineAscent) - scrollView.getScrollY() > flashlightalarm.this.w2) {
                    ScrollView scrollView2 = flashlightalarm.this.j5;
                    e.t.c.f.b(scrollView2);
                    scrollView2.scrollTo(0, (flashlightalarm.this.q2 + measuredHeight) - flashlightalarm.this.r2);
                }
                flashlightalarm.this.r2 = measuredHeight;
            }
Processing function 28, which looks like this: public void afterTextChanged(Editable editable) {
            e.t.c.f.d(editable, "editable");
        }
Processing function 29, which looks like this: public void beforeTextChanged(CharSequence charSequence, int i, int i2, int i3) {
            e.t.c.f.d(charSequence, "charSequence");
        }
Processing function 30, which looks like this: public void onTextChanged(CharSequence charSequence, int i, int i2, int i3) {
            boolean g;
            e.t.c.f.d(charSequence, "charSequence");
            p pVar = flashlightalarm.this.C3;
            e.t.c.f.b(pVar);
            Editable text = pVar.b().getText();
            int size = flashlightalarm.this.C7.size();
            if (size <= 0) {
                return;
            }
            int i4 = 0;
            while (true) {
                int i5 = i4 + 1;
                Object obj = flashlightalarm.this.C7.get(i4);
                e.t.c.f.c(obj, "mFamilyNameSet[i]");
                String lowerCase = ((String) obj).toLowerCase();
                e.t.c.f.c(lowerCase, "(this as java.lang.String).toLowerCase()");
                String obj2 = text.toString();
                if (obj2 == null) {
                    throw new NullPointerException("null cannot be cast to non-null type java.lang.String");
                }
                String lowerCase2 = obj2.toLowerCase();
                e.t.c.f.c(lowerCase2, "(this as java.lang.String).toLowerCase()");
                g = e.y.n.g(lowerCase, lowerCase2, false, 2, null);
                if (g) {
                    ScrollView scrollView = flashlightalarm.this.N2;
                    e.t.c.f.b(scrollView);
                    scrollView.setScrollY(flashlightalarm.k0 * i4);
                    return;
                } else if (i5 >= size) {
                    return;
                } else {
                    i4 = i5;
                }
            }
Processing function 31, which looks like this: public Dialog onCreateDialog(Bundle bundle) {
            Activity activity = getActivity();
            int i = flashlightalarm.t0;
            int J = flashlightalarm.Y.J();
            int K = flashlightalarm.Y.K();
            w wVar = flashlightalarm.D;
            TimePickerDialog timePickerDialog = new TimePickerDialog(activity, i, this, J, K, wVar.v0().J());
            Activity activity2 = getActivity();
            e.t.c.f.c(activity2, "activity");
            timePickerDialog.setTitle(wVar.I0(activity2, "Time_setting"));
            if (flashlightalarm.a1) {
                Activity activity3 = getActivity();
                e.t.c.f.c(activity3, "activity");
                timePickerDialog.setButton(-3, wVar.I0(activity3, "Now"), new DialogInterface.OnClickListener() { // from class: com.flashlightalarm.b4
                    @Override // android.content.DialogInterface.OnClickListener
                    public final void onClick(DialogInterface dialogInterface, int i2) {
                        flashlightalarm.h1.b(dialogInterface, i2);
                    }
                }
Processing function 32, which looks like this: public void onTimeSet(TimePicker timePicker, int i, int i2) {
            e.t.c.f.d(timePicker, "view");
            flashlightalarm.Y.q0(i);
            flashlightalarm.Y.r0(i2);
            w wVar = flashlightalarm.D;
            wVar.v0().t(i);
            wVar.v0().u(i2);
            flashlightalarm.Z0 = false;
            flashlightalarm.H0 = false;
            flashlightalarm.G0++;
        }
Processing function 33, which looks like this: public void onProgressChanged(SeekBar seekBar, int i, boolean z) {
            e.t.c.f.d(seekBar, "arg0");
            flashlightalarm.this.j5();
        }
Processing function 34, which looks like this: public void onStartTrackingTouch(SeekBar seekBar) {
            e.t.c.f.d(seekBar, "arg0");
        }
Processing function 35, which looks like this: public void onStopTrackingTouch(SeekBar seekBar) {
            e.t.c.f.d(seekBar, "arg0");
        }
Processing function 36, which looks like this: public Dialog onCreateDialog(Bundle bundle) {
            TimePickerDialog timePickerDialog = new TimePickerDialog(getActivity(), flashlightalarm.t0, this, flashlightalarm.Y.v(), flashlightalarm.Y.w(), true);
            TextView textView = new TextView(getActivity());
            w wVar = flashlightalarm.D;
            Activity activity = getActivity();
            e.t.c.f.c(activity, "activity");
            textView.setText(wVar.I0(activity, "afterafewminutes"));
            textView.setTextSize(1, 20.0f);
            textView.setTextColor(-16777216);
            textView.setPadding(5, 30, 5, 30);
            textView.setGravity(1);
            timePickerDialog.setCustomTitle(textView);
            return timePickerDialog;
        }
Processing function 37, which looks like this: public void onTimeSet(TimePicker timePicker, int i, int i2) {
            e.t.c.f.d(timePicker, "view");
            w wVar = flashlightalarm.D;
            wVar.v0().i(i);
            wVar.v0().j(i2);
            flashlightalarm.Y.c0(wVar.v0().U());
            flashlightalarm.Y.d0(wVar.v0().V());
            flashlightalarm.H0 = false;
            flashlightalarm.G0++;
        }
Processing function 38, which looks like this: public void onProgressChanged(SeekBar seekBar, int i, boolean z) {
            e.t.c.f.d(seekBar, "arg0");
            flashlightalarm.this.j5();
        }
Processing function 39, which looks like this: public void onStartTrackingTouch(SeekBar seekBar) {
            e.t.c.f.d(seekBar, "arg0");
        }
Processing function 40, which looks like this: public void onStopTrackingTouch(SeekBar seekBar) {
            e.t.c.f.d(seekBar, "arg0");
        }
Processing function 41, which looks like this: public Dialog onCreateDialog(Bundle bundle) {
            int J = flashlightalarm.Y.J();
            int K = flashlightalarm.Y.K();
            if (flashlightalarm.V.c().size() > flashlightalarm.E0) {
                Integer num = flashlightalarm.V.c().get(flashlightalarm.E0);
                e.t.c.f.c(num, "m_cCurrMultipleTime.arrHours[snCurrRepatTimeId]");
                J = num.intValue();
            }
            int i = J;
            if (flashlightalarm.V.d().size() > flashlightalarm.E0) {
                Integer num2 = flashlightalarm.V.d().get(flashlightalarm.E0);
                e.t.c.f.c(num2, "m_cCurrMultipleTime.arrMinutes[snCurrRepatTimeId]");
                K = num2.intValue();
            }
            w wVar = flashlightalarm.D;
            flashlightalarm.z0 = new TimePickerDialog(getActivity(), flashlightalarm.t0, this, i, K, wVar.v0().J());
            TimePickerDialog timePickerDialog = flashlightalarm.z0;
            e.t.c.f.b(timePickerDialog);
            Activity activity = getActivity();
            e.t.c.f.c(activity, "activity");
            timePickerDialog.setTitle(e.t.c.f.i(wVar.I0(activity, "Time_setting"), Integer.valueOf(flashlightalarm.E0 + 1)));
            TimePickerDialog timePickerDialog2 = flashlightalarm.z0;
            e.t.c.f.b(timePickerDialog2);
            timePickerDialog2.setButton(-3, "     ", new DialogInterface.OnClickListener() { // from class: com.flashlightalarm.d4
                @Override // android.content.DialogInterface.OnClickListener
                public final void onClick(DialogInterface dialogInterface, int i2) {
                    flashlightalarm.j1.c(dialogInterface, i2);
                }
            }
Processing function 42, which looks like this: public void onTimeSet(TimePicker timePicker, int i, int i2) {
            e.t.c.f.d(timePicker, "view");
            if (flashlightalarm.V.c().size() <= flashlightalarm.E0 || flashlightalarm.V.d().size() <= flashlightalarm.E0) {
                return;
            }
            flashlightalarm.V.c().set(flashlightalarm.E0, Integer.valueOf(i));
            flashlightalarm.V.d().set(flashlightalarm.E0, Integer.valueOf(i2));
            w wVar = flashlightalarm.D;
            wVar.v0().t(i);
            wVar.v0().u(i2);
            flashlightalarm.F0 = true;
            flashlightalarm.H0 = false;
            flashlightalarm.G0++;
        }
Processing function 43, which looks like this: public void onProgressChanged(SeekBar seekBar, int i, boolean z) {
            e.t.c.f.d(seekBar, "arg0");
            flashlightalarm.this.j5();
        }
Processing function 44, which looks like this: public void onStartTrackingTouch(SeekBar seekBar) {
            e.t.c.f.d(seekBar, "arg0");
        }
Processing function 45, which looks like this: public void onStopTrackingTouch(SeekBar seekBar) {
            e.t.c.f.d(seekBar, "arg0");
        }
Processing function 46, which looks like this: public void run() {
            /*
                Method dump skipped, instructions count: 2808
                To view this dump add '--comments-level debug' option
            */
            throw new UnsupportedOperationException("Method not decompiled: com.flashlightalarm.flashlightalarm.k1.run():void");
        }
Processing function 47, which looks like this: public void onProgressChanged(SeekBar seekBar, int i, boolean z) {
            e.t.c.f.d(seekBar, "arg0");
            flashlightalarm.this.j5();
        }
Processing function 48, which looks like this: public void onStartTrackingTouch(SeekBar seekBar) {
            e.t.c.f.d(seekBar, "arg0");
        }
Processing function 49, which looks like this: public void onStopTrackingTouch(SeekBar seekBar) {
            e.t.c.f.d(seekBar, "arg0");
        }
Processing function 50, which looks like this: public void a() {
            if (flashlightalarm.D.o0().m()) {
                flashlightalarm.this.L0(5, false);
                Object systemService = flashlightalarm.this.getSystemService("activity");
                if (systemService == null) {
                    throw new NullPointerException("null cannot be cast to non-null type android.app.ActivityManager");
                }
                ActivityManager activityManager = (ActivityManager) systemService;
                activityManager.moveTaskToFront(flashlightalarm.this.getTaskId(), 0);
                activityManager.moveTaskToFront(flashlightalarm.this.getTaskId(), 0);
                activityManager.moveTaskToFront(flashlightalarm.this.getTaskId(), 0);
            }
Processing function 51, which looks like this: public void b() {
            if (flashlightalarm.D.o0().m()) {
                Object systemService = flashlightalarm.this.getSystemService("activity");
                if (systemService == null) {
                    throw new NullPointerException("null cannot be cast to non-null type android.app.ActivityManager");
                }
                ActivityManager activityManager = (ActivityManager) systemService;
                activityManager.moveTaskToFront(flashlightalarm.this.getTaskId(), 0);
                activityManager.moveTaskToFront(flashlightalarm.this.getTaskId(), 0);
                activityManager.moveTaskToFront(flashlightalarm.this.getTaskId(), 0);
                activityManager.moveTaskToFront(flashlightalarm.this.getTaskId(), 0);
                Handler handler = new Handler();
                final flashlightalarm flashlightalarmVar = flashlightalarm.this;
                handler.postDelayed(new Runnable() { // from class: com.flashlightalarm.d6
                    @Override // java.lang.Runnable
                    public final void run() {
                        flashlightalarm.l1.f(flashlightalarm.this);
                    }
                }
Processing function 52, which looks like this: public void afterTextChanged(Editable editable) {
            e.t.c.f.d(editable, "s");
        }
Processing function 53, which looks like this: public void beforeTextChanged(CharSequence charSequence, int i, int i2, int i3) {
            e.t.c.f.d(charSequence, "s");
        }
Processing function 54, which looks like this: public void onTextChanged(CharSequence charSequence, int i, int i2, int i3) {
            e.t.c.f.d(charSequence, "s");
            if (charSequence.length() == 7) {
                try {
                    int parseColor = Color.parseColor(charSequence.toString());
                    int i4 = 255;
                    int i5 = (parseColor >> 16) & 255;
                    int i6 = (parseColor >> 8) & 255;
                    int i7 = parseColor & 255;
                    if (i5 > 255) {
                        i5 = 255;
                    }
                    if (i6 > 255) {
                        i6 = 255;
                    }
                    if (i7 <= 255) {
                        i4 = i7;
                    }
                    if (i5 < 0) {
                        i5 = 0;
                    }
                    if (i6 < 0) {
                        i6 = 0;
                    }
                    if (i4 < 0) {
                        i4 = 0;
                    }
                    AlertDialog alertDialog = flashlightalarm.this.Z2;
                    e.t.c.f.b(alertDialog);
                    AlertDialog alertDialog2 = flashlightalarm.this.Z2;
                    e.t.c.f.b(alertDialog2);
                    AlertDialog alertDialog3 = flashlightalarm.this.Z2;
                    e.t.c.f.b(alertDialog3);
                    AlertDialog alertDialog4 = flashlightalarm.this.Z2;
                    e.t.c.f.b(alertDialog4);
                    int progress = ((SeekBar) alertDialog.findViewById(C0072R.id.widgetcolor_seekbar_a)).getProgress();
                    ((SeekBar) alertDialog2.findViewById(C0072R.id.widgetcolor_seekbar_r)).setProgress(i5);
                    ((SeekBar) alertDialog3.findViewById(C0072R.id.widgetcolor_seekbar_g)).setProgress(i6);
                    ((SeekBar) alertDialog4.findViewById(C0072R.id.widgetcolor_seekbar_b)).setProgress(i4);
                    AlertDialog alertDialog5 = flashlightalarm.this.Z2;
                    e.t.c.f.b(alertDialog5);
                    ((LinearLayout) alertDialog5.findViewById(C0072R.id.widgetcolorLayout)).setBackgroundColor(Color.argb(progress, i5, i6, i4));
                    AlertDialog alertDialog6 = flashlightalarm.this.Z2;
                    e.t.c.f.b(alertDialog6);
                    AlertDialog alertDialog7 = flashlightalarm.this.Z2;
                    e.t.c.f.b(alertDialog7);
                    AlertDialog alertDialog8 = flashlightalarm.this.Z2;
                    e.t.c.f.b(alertDialog8);
                    AlertDialog alertDialog9 = flashlightalarm.this.Z2;
                    e.t.c.f.b(alertDialog9);
                    ((NumberPicker) alertDialog6.findViewById(C0072R.id.widgetcolor_seekbar_value_a)).setValue(progress);
                    ((NumberPicker) alertDialog7.findViewById(C0072R.id.widgetcolor_seekbar_value_r)).setValue(i5);
                    ((NumberPicker) alertDialog8.findViewById(C0072R.id.widgetcolor_seekbar_value_g)).setValue(i6);
                    ((NumberPicker) alertDialog9.findViewById(C0072R.id.widgetcolor_seekbar_value_b)).setValue(i4);
                    if (i5 + i6 + i4 <= 364 && progress >= 100) {
                        EditText editText = flashlightalarm.this.a3;
                        e.t.c.f.b(editText);
                        editText.setTextColor(-1);
                    }
                    EditText editText2 = flashlightalarm.this.a3;
                    e.t.c.f.b(editText2);
                    editText2.setTextColor(-16777216);
                }
Processing function 55, which looks like this: public void a() {
            if (flashlightalarm.D.o0().m()) {
                flashlightalarm.this.L0(5, false);
                Object systemService = flashlightalarm.this.getSystemService("activity");
                if (systemService == null) {
                    throw new NullPointerException("null cannot be cast to non-null type android.app.ActivityManager");
                }
                ActivityManager activityManager = (ActivityManager) systemService;
                activityManager.moveTaskToFront(flashlightalarm.this.getTaskId(), 0);
                activityManager.moveTaskToFront(flashlightalarm.this.getTaskId(), 0);
                activityManager.moveTaskToFront(flashlightalarm.this.getTaskId(), 0);
            }
Processing function 56, which looks like this: public void b() {
            if (flashlightalarm.D.o0().m()) {
                Object systemService = flashlightalarm.this.getSystemService("activity");
                if (systemService == null) {
                    throw new NullPointerException("null cannot be cast to non-null type android.app.ActivityManager");
                }
                ActivityManager activityManager = (ActivityManager) systemService;
                activityManager.moveTaskToFront(flashlightalarm.this.getTaskId(), 0);
                activityManager.moveTaskToFront(flashlightalarm.this.getTaskId(), 0);
                activityManager.moveTaskToFront(flashlightalarm.this.getTaskId(), 0);
                activityManager.moveTaskToFront(flashlightalarm.this.getTaskId(), 0);
                Handler handler = new Handler();
                final flashlightalarm flashlightalarmVar = flashlightalarm.this;
                handler.postDelayed(new Runnable() { // from class: com.flashlightalarm.x2
                    @Override // java.lang.Runnable
                    public final void run() {
                        flashlightalarm.n0.f(flashlightalarm.this);
                    }
                }
Processing function 57, which looks like this: public void onProgressChanged(SeekBar seekBar, int i, boolean z) {
            e.t.c.f.d(seekBar, "arg0");
            if (z) {
                flashlightalarm.D.v0().v(i);
            }
            flashlightalarm.this.U4();
        }
Processing function 58, which looks like this: public void onStartTrackingTouch(SeekBar seekBar) {
            e.t.c.f.d(seekBar, "arg0");
        }
Processing function 59, which looks like this: public void onStopTrackingTouch(SeekBar seekBar) {
            e.t.c.f.d(seekBar, "arg0");
        }
Processing function 60, which looks like this: public void onClick(DialogInterface dialogInterface, int i) {
        }
Processing function 61, which looks like this: public void onDismiss(DialogInterface dialogInterface) {
            e.t.c.f.d(dialogInterface, "dialog");
            flashlightalarm.this.Q9();
        }
Processing function 62, which looks like this: public void onProgressChanged(SeekBar seekBar, int i, boolean z) {
            e.t.c.f.d(seekBar, "arg0");
            w wVar = flashlightalarm.D;
            if (wVar.v0().s0() == i) {
                return;
            }
            if (z) {
                wVar.v0().F(i);
            }
            flashlightalarm.this.g5();
        }
Processing function 63, which looks like this: public void onStartTrackingTouch(SeekBar seekBar) {
            e.t.c.f.d(seekBar, "arg0");
        }
Processing function 64, which looks like this: public void onStopTrackingTouch(SeekBar seekBar) {
            e.t.c.f.d(seekBar, "arg0");
        }
Processing function 65, which looks like this: public void onProgressChanged(SeekBar seekBar, int i, boolean z) {
            e.t.c.f.d(seekBar, "arg0");
            w wVar = flashlightalarm.D;
            if (wVar.v0().r0() == i) {
                return;
            }
            if (z) {
                wVar.v0().E(i);
            }
            flashlightalarm.this.e5();
            int i2 = 0;
            int size = wVar.n0().size() - 1;
            if (size < 0) {
                return;
            }
            while (true) {
                int i3 = i2 + 1;
                w wVar2 = flashlightalarm.D;
                if (wVar2.n0().get(i2).S() == 1) {
                    Context context = seekBar.getContext();
                    e.t.c.f.c(context, "arg0.context");
                    c cVar = wVar2.n0().get(i2);
                    e.t.c.f.c(cVar, "cCAlarmDataList[i]");
                    wVar2.B(context, cVar);
                } else {
                    Context context2 = seekBar.getContext();
                    e.t.c.f.c(context2, "arg0.context");
                    c cVar2 = wVar2.n0().get(i2);
                    e.t.c.f.c(cVar2, "cCAlarmDataList[i]");
                    wVar2.y(context2, cVar2);
                }
                if (i3 > size) {
                    return;
                }
                i2 = i3;
            }
Processing function 66, which looks like this: public void onStartTrackingTouch(SeekBar seekBar) {
            e.t.c.f.d(seekBar, "arg0");
        }
Processing function 67, which looks like this: public void onStopTrackingTouch(SeekBar seekBar) {
            e.t.c.f.d(seekBar, "arg0");
        }
Processing function 68, which looks like this: public void a() {
        }
Processing function 69, which looks like this: public void b(Context context) {
            e.t.c.f.d(context, "context");
            try {
                int i = Build.VERSION.SDK_INT;
                if (i < 21) {
                    throw new e.h("An operation is not implemented: VERSION.SDK_INT < LOLLIPOP");
                }
                CameraManager cameraManager = this.a;
                e.t.c.f.b(cameraManager);
                String str = cameraManager.getCameraIdList()[0];
                if (i >= 23) {
                    CameraManager cameraManager2 = this.a;
                    e.t.c.f.b(cameraManager2);
                    cameraManager2.setTorchMode(str, true);
                }
            }
Processing function 70, which looks like this: public void c(Context context) {
            e.t.c.f.d(context, "context");
            try {
                int i = Build.VERSION.SDK_INT;
                if (i < 21) {
                    throw new e.h("An operation is not implemented: VERSION.SDK_INT < LOLLIPOP");
                }
                CameraManager cameraManager = this.a;
                e.t.c.f.b(cameraManager);
                String str = cameraManager.getCameraIdList()[0];
                if (i >= 23) {
                    CameraManager cameraManager2 = this.a;
                    e.t.c.f.b(cameraManager2);
                    cameraManager2.setTorchMode(str, false);
                }
            }
Processing function 71, which looks like this: public void onProgressChanged(SeekBar seekBar, int i, boolean z) {
            e.t.c.f.d(seekBar, "arg0");
            w wVar = flashlightalarm.D;
            if (wVar.v0().e0() == i) {
                return;
            }
            if (z) {
                wVar.v0().s(i);
            }
            flashlightalarm.this.H4();
            OnLock_Service.b bVar = OnLock_Service.n;
            Context context = seekBar.getContext();
            e.t.c.f.c(context, "arg0.context");
            bVar.i(context);
        }
Processing function 72, which looks like this: public void onStartTrackingTouch(SeekBar seekBar) {
            e.t.c.f.d(seekBar, "arg0");
        }
Processing function 73, which looks like this: public void onStopTrackingTouch(SeekBar seekBar) {
            e.t.c.f.d(seekBar, "arg0");
        }
Processing function 74, which looks like this: public void a() {
            try {
                if (this.a != null) {
                    flashlightalarm.D.Y0(false);
                    Camera camera = this.a;
                    e.t.c.f.b(camera);
                    camera.setPreviewCallback(null);
                    Camera camera2 = this.a;
                    e.t.c.f.b(camera2);
                    camera2.release();
                    this.a = null;
                }
            }
Processing function 75, which looks like this: public void b(Context context) {
            e.t.c.f.d(context, "context");
            try {
                if (this.a == null) {
                    this.a = Camera.open();
                }
                Camera camera = this.a;
                e.t.c.f.b(camera);
                Camera.Parameters parameters = camera.getParameters();
                parameters.setFlashMode("torch");
                Camera camera2 = this.a;
                e.t.c.f.b(camera2);
                camera2.setParameters(parameters);
                Camera camera3 = this.a;
                e.t.c.f.b(camera3);
                camera3.setPreviewTexture(new SurfaceTexture(0));
                Camera camera4 = this.a;
                e.t.c.f.b(camera4);
                camera4.startPreview();
                flashlightalarm.D.Y0(true);
            }
Processing function 76, which looks like this: public void c(Context context) {
            e.t.c.f.d(context, "context");
            try {
                if (this.a == null) {
                    this.a = Camera.open();
                }
                Camera camera = this.a;
                e.t.c.f.b(camera);
                Camera.Parameters parameters = camera.getParameters();
                parameters.setFlashMode("off");
                Camera camera2 = this.a;
                e.t.c.f.b(camera2);
                camera2.setParameters(parameters);
                Camera camera3 = this.a;
                e.t.c.f.b(camera3);
                camera3.stopPreview();
                flashlightalarm.D.Y0(false);
            }
Processing function 77, which looks like this: public void onProgressChanged(SeekBar seekBar, int i, boolean z) {
            e.t.c.f.d(seekBar, "arg0");
            if (z) {
                flashlightalarm flashlightalarmVar = flashlightalarm.this;
                Context context = seekBar.getContext();
                e.t.c.f.c(context, "arg0.context");
                MediaPlayer m0 = flashlightalarmVar.m0(context);
                e.t.c.f.b(m0);
                if (!m0.isPlaying()) {
                    w wVar = flashlightalarm.D;
                    Context context2 = seekBar.getContext();
                    e.t.c.f.c(context2, "arg0.context");
                    wVar.T0(context2);
                }
                flashlightalarm flashlightalarmVar2 = flashlightalarm.this;
                Object systemService = flashlightalarmVar2.getSystemService("vibrator");
                if (systemService == null) {
                    throw new NullPointerException("null cannot be cast to non-null type android.os.Vibrator");
                }
                flashlightalarmVar2.y4 = (Vibrator) systemService;
                if (flashlightalarm.this.y4 != null) {
                    Vibrator vibrator = flashlightalarm.this.y4;
                    e.t.c.f.b(vibrator);
                    vibrator.cancel();
                }
                flashlightalarm.D.k1(flashlightalarm.Y.W());
                flashlightalarm flashlightalarmVar3 = flashlightalarm.this;
                Context context3 = seekBar.getContext();
                e.t.c.f.c(context3, "arg0.context");
                MediaPlayer m02 = flashlightalarmVar3.m0(context3);
                e.t.c.f.b(m02);
                m02.start();
                flashlightalarm.this.o4(i);
                flashlightalarm.this.G4();
            }
Processing function 78, which looks like this: public void onStartTrackingTouch(SeekBar seekBar) {
            e.t.c.f.d(seekBar, "arg0");
        }
Processing function 79, which looks like this: public void onStopTrackingTouch(SeekBar seekBar) {
            e.t.c.f.d(seekBar, "arg0");
        }
Processing function 80, which looks like this: public void onProgressChanged(SeekBar seekBar, int i, boolean z) {
            e.t.c.f.d(seekBar, "arg0");
            if (z && flashlightalarm.X0 != i) {
                flashlightalarm.this.n4(i);
                flashlightalarm flashlightalarmVar = flashlightalarm.this;
                Object systemService = flashlightalarmVar.getSystemService("vibrator");
                if (systemService == null) {
                    throw new NullPointerException("null cannot be cast to non-null type android.os.Vibrator");
                }
                flashlightalarmVar.y4 = (Vibrator) systemService;
                long[] jArr = {0, flashlightalarm.X0 * 100, (10 - flashlightalarm.X0) * 100, flashlightalarm.X0 * 100, (10 - flashlightalarm.X0) * 100, flashlightalarm.X0 * 100, (10 - flashlightalarm.X0) * 100};
                if (flashlightalarm.this.y4 != null) {
                    if (Build.VERSION.SDK_INT >= 26) {
                        Vibrator vibrator = flashlightalarm.this.y4;
                        e.t.c.f.b(vibrator);
                        vibrator.vibrate(VibrationEffect.createWaveform(jArr, -1));
                    } else {
                        Vibrator vibrator2 = flashlightalarm.this.y4;
                        e.t.c.f.b(vibrator2);
                        vibrator2.vibrate(jArr, -1);
                    }
                }
Processing function 81, which looks like this: public void onStartTrackingTouch(SeekBar seekBar) {
            e.t.c.f.d(seekBar, "arg0");
        }
Processing function 82, which looks like this: public void onStopTrackingTouch(SeekBar seekBar) {
            e.t.c.f.d(seekBar, "arg0");
        }
Processing function 83, which looks like this: public void a(int i) {
            }
Processing function 84, which looks like this: public void b(Typeface typeface) {
                w wVar = flashlightalarm.D;
                wVar.Z0(typeface);
                flashlightalarm.K = true;
                ClockWidgetProvider.a.k(true);
                wVar.R(this.a);
            }
Processing function 85, which looks like this: public void a(int i) {
            }
Processing function 86, which looks like this: public void b(Typeface typeface) {
                flashlightalarm.D.a1(typeface);
                flashlightalarm.M = true;
            }
Processing function 87, which looks like this: public void onProgressChanged(SeekBar seekBar, int i, boolean z) {
            e.t.c.f.d(seekBar, "arg0");
            if (flashlightalarm.N0 == i) {
                return;
            }
            if (z) {
                w wVar = flashlightalarm.D;
                flashlightalarm.N0 = i;
            }
            w wVar2 = flashlightalarm.D;
            flashlightalarm.O0 = flashlightalarm.N0;
            flashlightalarm.this.Y4();
        }
Processing function 88, which looks like this: public void onStartTrackingTouch(SeekBar seekBar) {
            e.t.c.f.d(seekBar, "arg0");
        }
Processing function 89, which looks like this: public void onStopTrackingTouch(SeekBar seekBar) {
            e.t.c.f.d(seekBar, "arg0");
        }
Processing function 90, which looks like this: public void onProgressChanged(SeekBar seekBar, int i, boolean z) {
            e.t.c.f.d(seekBar, "arg0");
            if (flashlightalarm.R0 == i) {
                return;
            }
            if (z) {
                w wVar = flashlightalarm.D;
                flashlightalarm.R0 = i;
            }
            flashlightalarm.this.K4();
        }
Processing function 91, which looks like this: public void onStartTrackingTouch(SeekBar seekBar) {
            e.t.c.f.d(seekBar, "arg0");
        }
Processing function 92, which looks like this: public void onStopTrackingTouch(SeekBar seekBar) {
            e.t.c.f.d(seekBar, "arg0");
        }
Processing function 93, which looks like this: public Dialog onCreateDialog(Bundle bundle) {
            Calendar.getInstance();
            DatePickerDialog datePickerDialog = new DatePickerDialog(getActivity(), this, flashlightalarm.Y.T(), flashlightalarm.Y.R() - 1, flashlightalarm.Y.M());
            datePickerDialog.getDatePicker().setCalendarViewShown(true);
            datePickerDialog.getDatePicker().setSpinnersShown(false);
            return datePickerDialog;
        }
Processing function 94, which looks like this: public void onDateSet(DatePicker datePicker, int i, int i2, int i3) {
            e.t.c.f.d(datePicker, "view");
            flashlightalarm.Y.A0(i);
            flashlightalarm.Y.y0(i2 + 1);
            flashlightalarm.Y.t0(i3);
            w wVar = flashlightalarm.D;
            flashlightalarm.H0 = false;
            flashlightalarm.G0++;
        }
Processing function 95, which looks like this: public void onProgressChanged(SeekBar seekBar, int i, boolean z) {
            e.t.c.f.d(seekBar, "arg0");
            if (flashlightalarm.M0 == i) {
                return;
            }
            if (z) {
                w wVar = flashlightalarm.D;
                flashlightalarm.M0 = i;
            }
            flashlightalarm.this.b5();
        }
Processing function 96, which looks like this: public void onStartTrackingTouch(SeekBar seekBar) {
            e.t.c.f.d(seekBar, "arg0");
        }
Processing function 97, which looks like this: public void onStopTrackingTouch(SeekBar seekBar) {
            e.t.c.f.d(seekBar, "arg0");
        }
Processing function 98, which looks like this: public void onReceive(Context context, Intent intent) {
                String stringExtra;
                e.t.c.f.d(context, "context");
                e.t.c.f.b(intent);
                if (!e.t.c.f.a(intent.getAction(), "android.intent.action.CLOSE_SYSTEM_DIALOGS") || (stringExtra = intent.getStringExtra(this.a)) == null || this.f869d.f864b == null) {
                    return;
                }
                if (e.t.c.f.a(stringExtra, this.f868c)) {
                    g0 g0Var = this.f869d.f864b;
                    e.t.c.f.b(g0Var);
                    g0Var.a();
                } else if (e.t.c.f.a(stringExtra, this.f867b)) {
                    g0 g0Var2 = this.f869d.f864b;
                    e.t.c.f.b(g0Var2);
                    g0Var2.b();
                }
            }
Processing function 99, which looks like this: public void onProgressChanged(SeekBar seekBar, int i, boolean z) {
            e.t.c.f.d(seekBar, "arg0");
            if (flashlightalarm.S0 == i) {
                return;
            }
            if (z) {
                w wVar = flashlightalarm.D;
                flashlightalarm.S0 = i;
            }
            flashlightalarm.this.a5();
        }
Processing function 100, which looks like this: public void onStartTrackingTouch(SeekBar seekBar) {
            e.t.c.f.d(seekBar, "arg0");
        }
Processing function 101, which looks like this: public void onStopTrackingTouch(SeekBar seekBar) {
            e.t.c.f.d(seekBar, "arg0");
        }
Processing function 102, which looks like this: protected void onActivityResult(int i2, int i3, Intent intent) {
        AlertDialog alertDialog;
        Uri data = intent == null ? null : intent.getData();
        if (i2 == this.m1) {
            if (Build.VERSION.SDK_INT < 23 || Settings.canDrawOverlays(this)) {
                x1(this.Y2);
            }
        }
Processing function 103, which looks like this: public void onBackPressed() {
        String str;
        TextView d2;
        int i2;
        e eVar;
        e o2;
        int i3 = this.C4;
        int i4 = 0;
        if (i3 == 13) {
            if (this.D7 == 1) {
                v4(0);
                return;
            } else {
                r4(5);
                return;
            }
        }
Processing function 104, which looks like this: public void onConfigurationChanged(Configuration configuration) {
        e.t.c.f.d(configuration, "newConfig");
        super.onConfigurationChanged(configuration);
        this.c3 = false;
        this.b3 = false;
        this.F5 = null;
        V();
        if (configuration.orientation != 1) {
            T1(true);
        } else {
            T1(false);
        }
        int i2 = this.C4;
        if (i2 == 2) {
            ae();
        } else if (i2 == 6) {
            be();
        } else {
            r4(i2);
        }
        if (this.n2) {
            u4(false);
        }
        x4(false);
        g4();
        f4(false);
        h5();
    }
Processing function 105, which looks like this: public void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        this.h7 = U9().c(this);
        OnLock_Service.b bVar = OnLock_Service.n;
        if (bVar.K() == 1 || bVar.K() == 2) {
            d0 = bVar.U();
        }
        Object systemService = getSystemService("audio");
        if (systemService == null) {
            throw new NullPointerException("null cannot be cast to non-null type android.media.AudioManager");
        }
        e0 = ((AudioManager) systemService).getStreamVolume(3);
        this.O1.add(this.y1);
        this.P1.add(this.z1);
        V.a();
        ArrayList<e> arrayList = W;
        arrayList.clear();
        e eVar = new e();
        eVar.a();
        arrayList.add(eVar);
        if (!g0) {
            try {
                DateFormat dateFormat = android.text.format.DateFormat.getDateFormat(this);
                if (dateFormat == null) {
                    throw new NullPointerException("null cannot be cast to non-null type java.text.SimpleDateFormat");
                }
                R.m1(e.t.c.f.i(((SimpleDateFormat) dateFormat).toLocalizedPattern(), "\nEEEE"));
            }
Processing function 106, which looks like this: protected void onDestroy() {
        com.google.android.gms.ads.i iVar = this.j7;
        if (iVar != null) {
            e.t.c.f.b(iVar);
            iVar.a();
        }
        super.onDestroy();
        ge();
        D.S0();
        z zVar = this.Z6;
        if (zVar != null) {
            e.t.c.f.b(zVar);
            zVar.d();
        }
        this.F4 = false;
        Object systemService = getSystemService("vibrator");
        if (systemService == null) {
            throw new NullPointerException("null cannot be cast to non-null type android.os.Vibrator");
        }
        Vibrator vibrator = (Vibrator) systemService;
        this.y4 = vibrator;
        if (vibrator != null) {
            e.t.c.f.b(vibrator);
            vibrator.cancel();
        }
    }
Processing function 107, which looks like this: public boolean onKeyDown(int i2, KeyEvent keyEvent) {
        e.t.c.f.d(keyEvent, "event");
        if (i2 == 24) {
            keyEvent.startTracking();
            if (keyEvent.getRepeatCount() == 0) {
                this.c2 = true;
            }
            return true;
        }
Processing function 108, which looks like this: public boolean onKeyLongPress(int i2, KeyEvent keyEvent) {
        e.t.c.f.d(keyEvent, "event");
        if (i2 == 24 || i2 == 25) {
            this.c2 = false;
            return U(this.u1);
        }
        return super.onKeyLongPress(i2, keyEvent);
    }
Processing function 109, which looks like this: public boolean onKeyUp(int i2, KeyEvent keyEvent) {
        e.t.c.f.d(keyEvent, "event");
        if (i2 == 24) {
            if (this.c2) {
                Object systemService = getSystemService("audio");
                if (systemService == null) {
                    throw new NullPointerException("null cannot be cast to non-null type android.media.AudioManager");
                }
                AudioManager audioManager = (AudioManager) systemService;
                int streamMaxVolume = audioManager.getStreamMaxVolume(3);
                OnLock_Service.b bVar = OnLock_Service.n;
                int F2 = bVar.F();
                bVar.h0(F2 + 1);
                if (F2 < 0) {
                    streamMaxVolume = 0;
                } else if (F2 <= streamMaxVolume) {
                    streamMaxVolume = F2;
                }
                audioManager.setStreamVolume(3, streamMaxVolume, 0);
            }
Processing function 110, which looks like this: protected void onNewIntent(Intent intent) {
        try {
            super.onNewIntent(intent);
            if (intent != null) {
                D.H(this);
                setIntent(intent);
                P1();
                if (Z.n()) {
                    L0(0, false);
                } else {
                    setIntent(null);
                }
            }
Processing function 111, which looks like this: public void onPause() {
        com.google.android.gms.ads.i iVar = this.j7;
        if (iVar != null) {
            e.t.c.f.b(iVar);
            iVar.c();
        }
        super.onPause();
    }
Processing function 112, which looks like this: public void onRequestPermissionsResult(int i2, String[] strArr, int[] iArr) {
        e.t.c.f.d(strArr, "permissions");
        e.t.c.f.d(iArr, "grantResults");
        if (iArr.length == 0) {
            return;
        }
        if (i2 == this.k1) {
            if (iArr[0] == 0 && iArr[1] == 0) {
                onCreateDialog(this.n7);
            }
        }
Processing function 113, which looks like this: public void onResume() {
        q qVar;
        int i2;
        super.onResume();
        h hVar = Z;
        if (!hVar.m()) {
            j jVar = R;
            if (jVar.O()) {
                jVar.f();
                if (Build.VERSION.SDK_INT >= 23 && !D.a(this, "android.permission.CAMERA")) {
                    if (shouldShowRequestPermissionRationale("android.permission.CAMERA")) {
                        Intent intent = new Intent();
                        intent.setAction("android.settings.APPLICATION_DETAILS_SETTINGS");
                        intent.addCategory("android.intent.category.DEFAULT");
                        intent.setData(Uri.parse(e.t.c.f.i("package:", getPackageName())));
                        intent.addFlags(268435456);
                        startActivityForResult(intent, this.r1);
                    } else {
                        requestPermissions(new String[]{"android.permission.CAMERA"}, this.v1);
                    }
Processing function 114, which looks like this: public void onStart() {
        super.onStart();
    }
Processing function 115, which looks like this: protected void onStop() {
        int i2 = this.C4;
        if (i2 == 5 || i2 == 9) {
            D.T0(this);
            Object systemService = getSystemService("vibrator");
            if (systemService == null) {
                throw new NullPointerException("null cannot be cast to non-null type android.os.Vibrator");
            }
            Vibrator vibrator = (Vibrator) systemService;
            this.y4 = vibrator;
            if (vibrator != null) {
                e.t.c.f.b(vibrator);
                vibrator.cancel();
            }
        }
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
Response received!
Response analyzed!
Sending request to server...
