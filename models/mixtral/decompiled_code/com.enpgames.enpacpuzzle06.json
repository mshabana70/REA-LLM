{
    "raw": "package com.unity3d.player;\n\nimport android.app.Activity;\nimport android.content.Intent;\nimport android.content.res.Configuration;\nimport android.os.Bundle;\nimport android.os.Process;\nimport android.view.KeyEvent;\nimport android.view.MotionEvent;\n/* loaded from: classes2.dex */\npublic class UnityPlayerActivity extends Activity implements IUnityPlayerLifecycleEvents {\n    protected UnityPlayer mUnityPlayer;\n\n    protected String updateUnityCommandLineArguments(String str) {\n        return str;\n    }\n\n    /* JADX INFO: Access modifiers changed from: protected */\n    @Override // android.app.Activity\n    public void onCreate(Bundle bundle) {\n        requestWindowFeature(1);\n        super.onCreate(bundle);\n        getIntent().putExtra(\"unity\", updateUnityCommandLineArguments(getIntent().getStringExtra(\"unity\")));\n        this.mUnityPlayer = new UnityPlayer(this, this);\n        setContentView(this.mUnityPlayer);\n        this.mUnityPlayer.requestFocus();\n    }\n\n    @Override // com.unity3d.player.IUnityPlayerLifecycleEvents\n    public void onUnityPlayerUnloaded() {\n        moveTaskToBack(true);\n    }\n\n    @Override // com.unity3d.player.IUnityPlayerLifecycleEvents\n    public void onUnityPlayerQuitted() {\n        Process.killProcess(Process.myPid());\n    }\n\n    /* JADX INFO: Access modifiers changed from: protected */\n    @Override // android.app.Activity\n    public void onNewIntent(Intent intent) {\n        setIntent(intent);\n        this.mUnityPlayer.newIntent(intent);\n    }\n\n    @Override // android.app.Activity\n    protected void onDestroy() {\n        this.mUnityPlayer.destroy();\n        super.onDestroy();\n    }\n\n    @Override // android.app.Activity\n    protected void onPause() {\n        super.onPause();\n        this.mUnityPlayer.pause();\n    }\n\n    @Override // android.app.Activity\n    protected void onResume() {\n        super.onResume();\n        this.mUnityPlayer.resume();\n    }\n\n    @Override // android.app.Activity, android.content.ComponentCallbacks\n    public void onLowMemory() {\n        super.onLowMemory();\n        this.mUnityPlayer.lowMemory();\n    }\n\n    @Override // android.app.Activity, android.content.ComponentCallbacks2\n    public void onTrimMemory(int i) {\n        super.onTrimMemory(i);\n        if (i == 15) {\n            this.mUnityPlayer.lowMemory();\n        }\n    }\n\n    @Override // android.app.Activity, android.content.ComponentCallbacks\n    public void onConfigurationChanged(Configuration configuration) {\n        super.onConfigurationChanged(configuration);\n        this.mUnityPlayer.configurationChanged(configuration);\n    }\n\n    @Override // android.app.Activity, android.view.Window.Callback\n    public void onWindowFocusChanged(boolean z) {\n        super.onWindowFocusChanged(z);\n        this.mUnityPlayer.windowFocusChanged(z);\n    }\n\n    @Override // android.app.Activity, android.view.Window.Callback\n    public boolean dispatchKeyEvent(KeyEvent keyEvent) {\n        if (keyEvent.getAction() == 2) {\n            return this.mUnityPlayer.injectEvent(keyEvent);\n        }\n        return super.dispatchKeyEvent(keyEvent);\n    }\n\n    @Override // android.app.Activity, android.view.KeyEvent.Callback\n    public boolean onKeyUp(int i, KeyEvent keyEvent) {\n        return this.mUnityPlayer.injectEvent(keyEvent);\n    }\n\n    @Override // android.app.Activity, android.view.KeyEvent.Callback\n    public boolean onKeyDown(int i, KeyEvent keyEvent) {\n        return this.mUnityPlayer.injectEvent(keyEvent);\n    }\n\n    @Override // android.app.Activity\n    public boolean onTouchEvent(MotionEvent motionEvent) {\n        return this.mUnityPlayer.injectEvent(motionEvent);\n    }\n\n    @Override // android.app.Activity\n    public boolean onGenericMotionEvent(MotionEvent motionEvent) {\n        return this.mUnityPlayer.injectEvent(motionEvent);\n    }\n}\n",
    "functions": [
        "protected String updateUnityCommandLineArguments(String str) {\n        return str;\n    }",
        "public void onCreate(Bundle bundle) {\n        requestWindowFeature(1);\n        super.onCreate(bundle);\n        getIntent().putExtra(\"unity\", updateUnityCommandLineArguments(getIntent().getStringExtra(\"unity\")));\n        this.mUnityPlayer = new UnityPlayer(this, this);\n        setContentView(this.mUnityPlayer);\n        this.mUnityPlayer.requestFocus();\n    }",
        "public void onUnityPlayerUnloaded() {\n        moveTaskToBack(true);\n    }",
        "public void onUnityPlayerQuitted() {\n        Process.killProcess(Process.myPid());\n    }",
        "public void onNewIntent(Intent intent) {\n        setIntent(intent);\n        this.mUnityPlayer.newIntent(intent);\n    }",
        "protected void onDestroy() {\n        this.mUnityPlayer.destroy();\n        super.onDestroy();\n    }",
        "protected void onPause() {\n        super.onPause();\n        this.mUnityPlayer.pause();\n    }",
        "protected void onResume() {\n        super.onResume();\n        this.mUnityPlayer.resume();\n    }",
        "public void onLowMemory() {\n        super.onLowMemory();\n        this.mUnityPlayer.lowMemory();\n    }",
        "public void onTrimMemory(int i) {\n        super.onTrimMemory(i);\n        if (i == 15) {\n            this.mUnityPlayer.lowMemory();\n        }\n    }",
        "public void onConfigurationChanged(Configuration configuration) {\n        super.onConfigurationChanged(configuration);\n        this.mUnityPlayer.configurationChanged(configuration);\n    }",
        "public void onWindowFocusChanged(boolean z) {\n        super.onWindowFocusChanged(z);\n        this.mUnityPlayer.windowFocusChanged(z);\n    }",
        "public boolean dispatchKeyEvent(KeyEvent keyEvent) {\n        if (keyEvent.getAction() == 2) {\n            return this.mUnityPlayer.injectEvent(keyEvent);\n        }\n        return super.dispatchKeyEvent(keyEvent);\n    }",
        "public boolean onKeyUp(int i, KeyEvent keyEvent) {\n        return this.mUnityPlayer.injectEvent(keyEvent);\n    }",
        "public boolean onKeyDown(int i, KeyEvent keyEvent) {\n        return this.mUnityPlayer.injectEvent(keyEvent);\n    }",
        "public boolean onTouchEvent(MotionEvent motionEvent) {\n        return this.mUnityPlayer.injectEvent(motionEvent);\n    }",
        "public boolean onGenericMotionEvent(MotionEvent motionEvent) {\n        return this.mUnityPlayer.injectEvent(motionEvent);\n    }"
    ]
}