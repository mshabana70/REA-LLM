{
    "raw": "package com.airealmobile.general;\n\nimport android.app.Activity;\nimport android.app.AlertDialog;\nimport android.app.Dialog;\nimport android.content.Context;\nimport android.content.DialogInterface;\nimport android.content.Intent;\nimport android.content.SharedPreferences;\nimport android.content.pm.PackageInfo;\nimport android.content.pm.PackageManager;\nimport android.net.Uri;\nimport android.os.AsyncTask;\nimport android.os.Build;\nimport android.os.Bundle;\nimport android.widget.TextView;\nimport androidx.fragment.app.Fragment;\nimport androidx.lifecycle.ProcessLifecycleOwner;\nimport androidx.preference.PreferenceManager;\nimport com.airealmobile.configuration.ConfigurationFetchCompletion;\nimport com.airealmobile.configuration.ConfigurationManager;\nimport com.airealmobile.configuration.HomeInfo;\nimport com.airealmobile.general.api.model.EndUser;\nimport com.airealmobile.general.home.HomeActivity;\nimport com.airealmobile.general.home.HomeHorizontalActivity;\nimport com.airealmobile.general.home.ShowHomeScreenEvent;\nimport com.airealmobile.helpers.DotVersion;\nimport com.airealmobile.helpers.EncryptionUtility;\nimport com.airealmobile.helpers.ForegroundBackgroundListener;\nimport com.airealmobile.helpers.SharedPreferences.SharedPrefsHelperImpl;\nimport com.airealmobile.helpers.messaging.MessageService;\nimport com.airealmobile.helpers.messaging.Notification;\nimport com.airealmobile.modules.appsearch.AppObject;\nimport com.airealmobile.modules.appsearch.AppSearchActivity;\nimport com.airealmobile.modules.chat.ChatManager;\nimport com.airealmobile.modules.listing.ListingHomeActivity;\nimport com.airealmobile.modules.listing.model.ListingInfo;\nimport com.airealmobile.modules.onboarding.OnboardingActivity;\nimport com.airealmobile.modules.profile.api.ProfileApiService;\nimport com.airealmobile.tasks.AuthTokenRetriever;\nimport com.google.android.gms.common.GoogleApiAvailability;\nimport com.google.android.gms.tasks.OnCompleteListener;\nimport com.google.android.gms.tasks.Task;\nimport com.google.firebase.auth.AuthResult;\nimport com.google.firebase.auth.FirebaseAuth;\nimport com.google.firebase.database.DataSnapshot;\nimport com.google.firebase.database.DatabaseError;\nimport com.google.firebase.database.DatabaseReference;\nimport com.google.firebase.database.FirebaseDatabase;\nimport com.google.firebase.database.ServerValue;\nimport com.google.firebase.database.ValueEventListener;\nimport dagger.Lazy;\nimport dagger.android.AndroidInjection;\nimport dagger.android.AndroidInjector;\nimport dagger.android.DispatchingAndroidInjector;\nimport dagger.android.support.HasSupportFragmentInjector;\nimport io.reactivex.Observer;\nimport io.reactivex.disposables.Disposable;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.net.MalformedURLException;\nimport java.net.SocketTimeoutException;\nimport java.net.URL;\nimport java.util.ArrayList;\nimport java.util.GregorianCalendar;\nimport java.util.HashMap;\nimport java.util.Iterator;\nimport java.util.Set;\nimport java.util.Timer;\nimport java.util.TimerTask;\nimport javax.inject.Inject;\nimport org.apache.http.HttpEntity;\nimport org.apache.http.client.methods.HttpPost;\nimport org.apache.http.entity.mime.HttpMultipartMode;\nimport org.apache.http.entity.mime.MultipartEntityBuilder;\nimport org.apache.http.impl.client.DefaultHttpClient;\nimport org.greenrobot.eventbus.EventBus;\nimport org.greenrobot.eventbus.Subscribe;\nimport org.json.JSONArray;\nimport org.json.JSONException;\nimport org.json.JSONObject;\n/* loaded from: classes.dex */\npublic class Main extends Activity implements AuthTokenRetriever.AuthTokenRetrieverHandler, HasSupportFragmentInjector {\n    private static final int APP_STATUS_TRIGGERED = 1;\n    private static final int APP_UPDATE_NEEDED = 2;\n    private static final int DIALOG_INTERNET_ERROR = 561;\n    public static final int DIALOG_INTERNET_LOADING = 314;\n    private static final String PREF_KEY_ONBOARDING_SHOWN = \"pref_key_onboarding\";\n    public static final String TAG = Main.class.getSimpleName();\n    private static Integer VERSION_CODE;\n    public static String VERSION_NAME;\n    private Aware3Application aware3Application;\n    private ConfigurationFetchCompletion configurationFetchCompletion;\n    private ConfigurationManager configurationManager;\n    @Inject\n    DispatchingAndroidInjector<Fragment> fragmentAndroidInjector;\n    private HomeInfo homeInfo;\n    private String initial_module_id;\n    private String ipAddress;\n    private String packageName;\n    @Inject\n    Lazy<ProfileApiService> profileApiService;\n    private String push_message_id;\n    private String push_message_text;\n    private String identifier = null;\n    private boolean isRetrievingProfile = false;\n    private boolean isRetrievingNotifications = false;\n\n    private void showDevelopmentBannerIfDev() {\n    }\n\n    @Override // dagger.android.support.HasSupportFragmentInjector\n    public AndroidInjector<Fragment> supportFragmentInjector() {\n        return this.fragmentAndroidInjector;\n    }\n\n    @Override // android.app.Activity\n    protected void onCreate(Bundle bundle) {\n        super.onCreate(bundle);\n        ProcessLifecycleOwner.get().getLifecycle().addObserver(new ForegroundBackgroundListener());\n        AndroidInjection.inject(this);\n        Log.d(TAG, \"Main.onCreate()\");\n        Intent intent = getIntent();\n        if (intent.hasExtra(Notification.NOTIFICATION_ID)) {\n            this.push_message_id = intent.getStringExtra(Notification.NOTIFICATION_ID);\n        }\n        if (intent.hasExtra(Notification.NOTIFICATION_MESSAGE)) {\n            this.push_message_text = intent.getStringExtra(Notification.NOTIFICATION_MESSAGE);\n        }\n        if (intent.hasExtra(Notification.NOTIFICATION_MODULE_ID)) {\n            this.initial_module_id = intent.getStringExtra(Notification.NOTIFICATION_MODULE_ID);\n        }\n        GoogleApiAvailability googleApiAvailability = GoogleApiAvailability.getInstance();\n        int isGooglePlayServicesAvailable = googleApiAvailability.isGooglePlayServicesAvailable(this);\n        if (isGooglePlayServicesAvailable != 0) {\n            if (googleApiAvailability.isUserResolvableError(isGooglePlayServicesAvailable)) {\n                googleApiAvailability.getErrorDialog(this, isGooglePlayServicesAvailable, 9000).show();\n                return;\n            }\n            Log.i(\"Google Play Services\", \"This device is not supported.\");\n            finish();\n            return;\n        }\n        this.aware3Application = (Aware3Application) getApplicationContext();\n        if (intent.hasExtra(Constants.LOAD_CONTAINER_APP)) {\n            setupConfigurationManager();\n            retrieveSetup(this.aware3Application.getCurrentApp());\n            return;\n        }\n        setVersionCodes();\n        showLoadingScreen();\n    }\n\n    private void setVersionCodes() {\n        try {\n            PackageManager packageManager = getPackageManager();\n            if (packageManager != null) {\n                PackageInfo packageInfo = packageManager.getPackageInfo(getPackageName(), 0);\n                VERSION_CODE = Integer.valueOf(packageInfo.versionCode);\n                VERSION_NAME = packageInfo.versionName;\n                SharedPreferences defaultSharedPreferences = PreferenceManager.getDefaultSharedPreferences(this);\n                if (!packageInfo.versionName.equals(defaultSharedPreferences.getString(Constants.PREVIOUS_A3_VERSION, null))) {\n                    togglePushEnabledOffOn();\n                }\n                SharedPreferences.Editor edit = defaultSharedPreferences.edit();\n                edit.putString(Constants.PREVIOUS_A3_VERSION, packageInfo.versionName);\n                edit.apply();\n                this.packageName = getPackageName();\n            }\n        } catch (PackageManager.NameNotFoundException e) {\n            LogUtils.logExceptionToLocalAndInsightOps(e, \"com.airealmobile.general\");\n        }\n    }\n\n    private void togglePushEnabledOffOn() {\n        new Thread(new Runnable() { // from class: com.airealmobile.general.-$$Lambda$Main$ykggEqfpcynCTuPcFeVLOP-tP-c\n            @Override // java.lang.Runnable\n            public final void run() {\n                Main.this.lambda$togglePushEnabledOffOn$0$Main();\n            }\n        }).start();\n    }\n\n    public /* synthetic */ void lambda$togglePushEnabledOffOn$0$Main() {\n        MessageService messageService = MessageService.getInstance();\n        if (messageService.getMessagingStatus(getBaseContext()).equals(MessageService.STATUS_OPTED_OUT)) {\n            return;\n        }\n        messageService.unRegister(getApplicationContext());\n        messageService.register(getApplicationContext());\n    }\n\n    private void showLoadingScreen() {\n        setContentView(com.airealmobile.messiahlutheran_1122.R.layout.bootscreen_layout);\n        setVersionFooter();\n        showDevelopmentBannerIfDev();\n        checkForLoadedApp();\n    }\n\n    private void setVersionFooter() {\n        try {\n            DotVersion dotVersion = new DotVersion(BuildConfig.VERSION_NAME);\n            TextView textView = (TextView) findViewById(com.airealmobile.messiahlutheran_1122.R.id.poweredByVersion);\n            if (!dotVersion.getVersion().equals(\"\")) {\n                textView.setText(getString(com.airealmobile.messiahlutheran_1122.R.string.poweredByAware3NoVersion) + \"  \u2022 \" + dotVersion.getVersion());\n            } else {\n                textView.setText(getString(com.airealmobile.messiahlutheran_1122.R.string.poweredByAware3NoVersion));\n            }\n        } catch (Exception e) {\n            LogUtils.logExceptionToLocalAndInsightOps(e, \"com.airealmobile.general\");\n        }\n    }\n\n    private void checkForLoadedApp() {\n        setupConfigurationManager();\n        Log.d(TAG, \"Main.checkForLoadedApp()\");\n        if (this.packageName.contains(\"com.aware3.universal\")) {\n            if (this.aware3Application.getCurrentApp() != null) {\n                retrieveSetup(this.aware3Application.getCurrentApp());\n                return;\n            } else {\n                retrieveIpAddress();\n                return;\n            }\n        }\n        new AppSearchRetriever(this.packageName, this).execute(new String[0]);\n    }\n\n    private void setupConfigurationManager() {\n        EncryptionUtility.getInstance();\n        this.configurationManager = ConfigurationManager.getInstance();\n        this.configurationFetchCompletion = new ConfigurationFetchCompletion() { // from class: com.airealmobile.general.Main.1\n            @Override // com.airealmobile.configuration.ConfigurationFetchCompletion\n            public void configurationFetchSuccessful() {\n                Main.this.checkAppStatus();\n            }\n\n            @Override // com.airealmobile.configuration.ConfigurationFetchCompletion\n            public void configurationFetchFailed() {\n                Main.this.checkAppStatus();\n            }\n        };\n    }\n\n    /* JADX INFO: Access modifiers changed from: private */\n    public void showAppSearch() {\n        new Timer().schedule(new TimerTask() { // from class: com.airealmobile.general.Main.2\n            @Override // java.util.TimerTask, java.lang.Runnable\n            public void run() {\n                Intent intent = new Intent(Main.this, AppSearchActivity.class);\n                intent.setFlags(335544320);\n                Main.this.startActivity(intent);\n            }\n        }, 3000L);\n    }\n\n    /* JADX INFO: Access modifiers changed from: private */\n    public void retrieveSetup(AppObject appObject) {\n        if (appObject.isListingOnly()) {\n            listingOnlySetup(appObject);\n        } else {\n            fullSetupCall(appObject);\n        }\n    }\n\n    private void listingOnlySetup(AppObject appObject) {\n        Log.d(TAG, \"Main.listingOnlySetup()\");\n        new OrganizationRetriever(appObject.getAppId(), this).execute(new String[0]);\n    }\n\n    private void fullSetupCall(AppObject appObject) {\n        if (isFinishing()) {\n            return;\n        }\n        showDialog(DIALOG_INTERNET_LOADING);\n        Log.d(TAG, \"Main.fullSetupCall()\");\n        this.configurationManager.fetchConfiguration(this.configurationFetchCompletion);\n    }\n\n    /* JADX INFO: Access modifiers changed from: private */\n    public void checkAppStatus() {\n        HomeInfo homeInfo = ConfigurationManager.getInstance().getHomeInfo();\n        this.homeInfo = homeInfo;\n        String prefAppStatus = (homeInfo == null || homeInfo.getPrefAppStatus() == null) ? null : this.homeInfo.getPrefAppStatus();\n        if (prefAppStatus != null && !prefAppStatus.isEmpty() && !prefAppStatus.contentEquals(Constants.APP_STATUS_EMPTY)) {\n            showDialog(1);\n            return;\n        }\n        setVersionCodes();\n        checkVersionNumber();\n    }\n\n    private void checkVersionNumber() {\n        HomeInfo homeInfo = this.homeInfo;\n        if (homeInfo != null) {\n            DotVersion dotVersion = new DotVersion(homeInfo.getPrefSupportedVersion());\n            DotVersion dotVersion2 = new DotVersion(BuildConfig.VERSION_NAME);\n            if (!this.packageName.contains(\"com.aware3.universal\") && dotVersion.compareTo(dotVersion2) == 1) {\n                if (isFinishing()) {\n                    return;\n                }\n                showDialog(2, null);\n                return;\n            }\n            retrieveProfile();\n        }\n    }\n\n    @Override // android.app.Activity\n    protected void onStart() {\n        super.onStart();\n        EventBus.getDefault().register(this);\n    }\n\n    @Override // android.app.Activity\n    protected void onStop() {\n        super.onStop();\n        EventBus.getDefault().unregister(this);\n    }\n\n    @Subscribe\n    public void onShowHomeScreenEvent(ShowHomeScreenEvent showHomeScreenEvent) {\n        loadHomePage();\n    }\n\n    protected void loadHomePage() {\n        boolean z = false;\n        SharedPreferences preferences = getPreferences(0);\n        Boolean valueOf = Boolean.valueOf(preferences.getBoolean(\"pref_key_onboarding\", false));\n        EndUser profile = this.aware3Application.getProfile();\n        if (!valueOf.booleanValue() && profile != null && (profile.getEndUserId() == null || profile.getEndUserId().length() == 0)) {\n            z = true;\n        }\n        if (shouldShowListingHomeActivity()) {\n            Log.d(TAG, \"Main - SHOWING ListingHomeActivity\");\n            Intent intent = new Intent(this, ListingHomeActivity.class);\n            intent.setFlags(335544320);\n            if (z) {\n                intent.setFlags(65536 | intent.getFlags());\n            }\n            startActivity(intent);\n        } else {\n            String prefLayoutStyle = this.homeInfo.getPrefLayoutStyle();\n            Intent intent2 = new Intent(this, (prefLayoutStyle.equals(\"tile\") || prefLayoutStyle.equals(\"tile-full\")) ? HomeActivity.class : HomeHorizontalActivity.class);\n            intent2.setFlags(335544320);\n            if (z) {\n                intent2.setFlags(intent2.getFlags() | 65536);\n            }\n            String str = this.push_message_id;\n            if (str != null && this.push_message_text != null) {\n                intent2.putExtra(BaseModule.INTENT_PUSH_MESSAGE_ID, str);\n                intent2.putExtra(BaseModule.INTENT_PUSH_MESSAGE_TEXT, this.push_message_text);\n                String str2 = this.initial_module_id;\n                if (str2 != null) {\n                    intent2.putExtra(BaseModule.INTENT_REDIRECT_TO_MODULE_EXTRA_MODULEID, str2);\n                }\n            }\n            Log.d(TAG, \"Main - SHOWING HomeActivity\");\n            startActivity(intent2);\n        }\n        if (z) {\n            Intent intent3 = new Intent(this, OnboardingActivity.class);\n            intent3.setFlags(335544320);\n            preferences.edit().putBoolean(\"pref_key_onboarding\", true).commit();\n            startActivity(intent3);\n        }\n    }\n\n    private boolean shouldShowListingHomeActivity() {\n        return this.aware3Application.getCurrentListing() != null;\n    }\n\n    private void retrieveIpAddress() {\n        new IpAddressRetriever(this).execute(new String[0]);\n    }\n\n    /* JADX INFO: Access modifiers changed from: private */\n    public void checkDeepLinking() {\n        new GraphRetriever(this).execute(new String[0]);\n    }\n\n    @Override // android.app.Activity\n    public Dialog onCreateDialog(int i) {\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\n        if (i == 1) {\n            builder.setMessage(\"This app has been disabled. Please check back soon!\");\n            builder.setTitle(\"App Disabled\");\n            builder.setCancelable(false);\n            builder.setPositiveButton(\"Ok\", new DialogInterface.OnClickListener() { // from class: com.airealmobile.general.Main.3\n                @Override // android.content.DialogInterface.OnClickListener\n                public void onClick(DialogInterface dialogInterface, int i2) {\n                    System.exit(0);\n                }\n            });\n            return builder.create();\n        } else if (i == 2) {\n            builder.setMessage(\"This app is out of date. Please update it in the Marketplace.\");\n            builder.setTitle(\"Update Needed\");\n            builder.setCancelable(false);\n            builder.setNegativeButton(\"Cancel\", new DialogInterface.OnClickListener() { // from class: com.airealmobile.general.Main.4\n                @Override // android.content.DialogInterface.OnClickListener\n                public void onClick(DialogInterface dialogInterface, int i2) {\n                    System.exit(0);\n                }\n            });\n            builder.setPositiveButton(\"Update\", new DialogInterface.OnClickListener() { // from class: com.airealmobile.general.Main.5\n                @Override // android.content.DialogInterface.OnClickListener\n                public void onClick(DialogInterface dialogInterface, int i2) {\n                    Intent intent = new Intent(\"android.intent.action.VIEW\");\n                    intent.setData(Uri.parse(\"market://details?id=\" + Main.this.packageName));\n                    Main.this.startActivity(intent);\n                    Main.this.startActivity(intent);\n                    dialogInterface.dismiss();\n                    System.exit(0);\n                }\n            });\n            return builder.create();\n        } else if (i != 314) {\n            if (i != DIALOG_INTERNET_ERROR) {\n                return null;\n            }\n            builder.setTitle(\"Connection Error\");\n            builder.setMessage(\"Please check your network connection and try again.\");\n            builder.setNegativeButton(com.airealmobile.messiahlutheran_1122.R.string.error_ok, new DialogInterface.OnClickListener() { // from class: com.airealmobile.general.Main.6\n                @Override // android.content.DialogInterface.OnClickListener\n                public void onClick(DialogInterface dialogInterface, int i2) {\n                    dialogInterface.dismiss();\n                    Main.this.finish();\n                }\n            });\n            builder.setCancelable(true);\n            builder.setOnCancelListener(new DialogInterface.OnCancelListener() { // from class: com.airealmobile.general.Main.7\n                @Override // android.content.DialogInterface.OnCancelListener\n                public void onCancel(DialogInterface dialogInterface) {\n                    dialogInterface.dismiss();\n                    Main.this.finish();\n                }\n            });\n            return builder.create();\n        } else {\n            return MyProgressDialog.show(this, \"\", \"\", false, false);\n        }\n    }\n\n    /* JADX INFO: Access modifiers changed from: private */\n    /* loaded from: classes.dex */\n    public class AppSearchRetriever extends AsyncTask<String, Void, String> {\n        Context context;\n        String packageName;\n        String url = \"https://aware3.net/api/v1/system/setup\";\n        ArrayList<AppObject> searchResults = new ArrayList<>();\n\n        AppSearchRetriever(String str, Context context) {\n            this.context = context;\n            this.packageName = str;\n        }\n\n        /* JADX INFO: Access modifiers changed from: protected */\n        @Override // android.os.AsyncTask\n        public String doInBackground(String... strArr) {\n            try {\n                DefaultHttpClient defaultHttpClient = new DefaultHttpClient();\n                HttpPost httpPost = new HttpPost(this.url);\n                JSONObject jSONObject = new JSONObject();\n                jSONObject.put(\"query\", \"\");\n                jSONObject.put(\"package_name\", this.packageName);\n                String encryptData = EncryptionUtility.getInstance().encryptData(jSONObject.toString());\n                MultipartEntityBuilder create = MultipartEntityBuilder.create();\n                create.setMode(HttpMultipartMode.BROWSER_COMPATIBLE);\n                create.addTextBody(\"encrypted_payload\", encryptData);\n                httpPost.setEntity(create.build());\n                HttpEntity entity = defaultHttpClient.execute(httpPost).getEntity();\n                this.searchResults = new ArrayList<>();\n                if (entity != null && entity.getContentLength() > 0) {\n                    StringBuilder sb = new StringBuilder();\n                    try {\n                        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(entity.getContent()), 65728);\n                        while (true) {\n                            String readLine = bufferedReader.readLine();\n                            if (readLine == null) {\n                                break;\n                            }\n                            sb.append(readLine);\n                        }\n                        ArrayList<AppObject> arrayList = new ArrayList<>();\n                        JSONObject jSONObject2 = new JSONObject(sb.toString());\n                        if (jSONObject2.has(\"results\")) {\n                            JSONArray jSONArray = jSONObject2.getJSONArray(\"results\");\n                            for (int i = 0; i < jSONArray.length(); i++) {\n                                JSONObject jSONObject3 = (JSONObject) jSONArray.get(i);\n                                AppObject appObject = new AppObject();\n                                appObject.setAppId(jSONObject3.getString(\"app_id\"));\n                                appObject.setApiKey(jSONObject3.getString(\"api_key\"));\n                                appObject.setAppName(jSONObject3.getString(\"title\"));\n                                if (jSONObject3.has(\"subtitle\") && !jSONObject3.getString(\"subtitle\").equalsIgnoreCase(\"null\")) {\n                                    appObject.setAppSubtitle(jSONObject3.getString(\"subtitle\"));\n                                }\n                                if (jSONObject3.has(\"icon\") && !jSONObject3.getString(\"icon\").equalsIgnoreCase(\"null\")) {\n                                    appObject.setAppImage(jSONObject3.getString(\"icon\"));\n                                }\n                                if (jSONObject3.has(\"standalone\")) {\n                                    appObject.setPackageId(jSONObject3.getJSONObject(\"standalone\").getString(\"package_name\"));\n                                }\n                                arrayList.add(appObject);\n                            }\n                            this.searchResults = arrayList;\n                        }\n                    } catch (Exception e) {\n                        LogUtils.logExceptionToLocalAndInsightOps(e, \"com.airealmobile.general\");\n                    }\n                    entity.consumeContent();\n                }\n                defaultHttpClient.getConnectionManager().shutdown();\n                return null;\n            } catch (SocketTimeoutException e2) {\n                CommonUtilities.logException(e2);\n                return null;\n            } catch (IOException e3) {\n                e = e3;\n                LogUtils.logExceptionToLocalAndInsightOps(e, \"com.airealmobile.general\");\n                return null;\n            } catch (JSONException e4) {\n                e = e4;\n                LogUtils.logExceptionToLocalAndInsightOps(e, \"com.airealmobile.general\");\n                return null;\n            }\n        }\n\n        /* JADX INFO: Access modifiers changed from: protected */\n        @Override // android.os.AsyncTask\n        public void onPostExecute(String str) {\n            super.onPostExecute((AppSearchRetriever) str);\n            ArrayList<AppObject> arrayList = this.searchResults;\n            if (arrayList == null || arrayList.size() <= 0) {\n                return;\n            }\n            AppObject appObject = null;\n            Iterator<AppObject> it = this.searchResults.iterator();\n            while (true) {\n                if (!it.hasNext()) {\n                    break;\n                }\n                AppObject next = it.next();\n                if (next.getPackageId().equalsIgnoreCase(this.packageName)) {\n                    appObject = next;\n                    break;\n                }\n            }\n            if (appObject != null) {\n                Main.this.aware3Application.setCurrentApp(appObject);\n                Main.this.retrieveSetup(appObject);\n            }\n        }\n    }\n\n    /* JADX INFO: Access modifiers changed from: private */\n    /* loaded from: classes.dex */\n    public class IpAddressRetriever extends AsyncTask<String, Void, String> {\n        Context context;\n        String url = \"https://a3a.me/ip/?json\";\n\n        IpAddressRetriever(Context context) {\n            this.context = context;\n        }\n\n        /* JADX INFO: Access modifiers changed from: protected */\n        /* JADX WARN: Can't wrap try/catch for region: R(7:1|(6:2|3|4|5|(2:6|(1:8)(1:9))|10)|12|13|(1:17)|19|(1:(0))) */\n        /* JADX WARN: Code restructure failed: missing block: B:22:0x006d, code lost:\n            r7 = move-exception;\n         */\n        /* JADX WARN: Code restructure failed: missing block: B:23:0x006e, code lost:\n            com.airealmobile.general.LogUtils.logExceptionToLocalAndInsightOps(r7, \"com.airealmobile.general\");\n         */\n        /* JADX WARN: Removed duplicated region for block: B:18:0x005d A[Catch: JSONException -> 0x006d, TryCatch #1 {JSONException -> 0x006d, blocks: (B:16:0x0052, B:18:0x005d, B:20:0x0063), top: B:27:0x0052 }] */\n        @Override // android.os.AsyncTask\n        /*\n            Code decompiled incorrectly, please refer to instructions dump.\n            To view partially-correct add '--show-bad-code' argument\n        */\n        public java.lang.String doInBackground(java.lang.String... r7) {\n            /*\n                r6 = this;\n                java.lang.String r7 = \"ip\"\n                java.lang.String r0 = \"com.airealmobile.general\"\n                r1 = 0\n                java.net.URL r2 = new java.net.URL     // Catch: java.io.IOException -> L4d\n                java.lang.String r3 = r6.url     // Catch: java.io.IOException -> L4d\n                r2.<init>(r3)     // Catch: java.io.IOException -> L4d\n                java.net.URLConnection r2 = r2.openConnection()     // Catch: java.io.IOException -> L4d\n                r3 = 10000(0x2710, float:1.4013E-41)\n                r2.setConnectTimeout(r3)     // Catch: java.io.IOException -> L4d\n                r2.setReadTimeout(r3)     // Catch: java.io.IOException -> L4d\n                java.io.BufferedInputStream r3 = new java.io.BufferedInputStream     // Catch: java.io.IOException -> L4d\n                java.io.InputStream r2 = r2.getInputStream()     // Catch: java.io.IOException -> L4d\n                r3.<init>(r2)     // Catch: java.io.IOException -> L4d\n                java.lang.String r2 = \"UTF-8\"\n                java.io.BufferedReader r4 = new java.io.BufferedReader     // Catch: java.io.IOException -> L48\n                java.io.InputStreamReader r5 = new java.io.InputStreamReader     // Catch: java.io.IOException -> L48\n                r5.<init>(r3, r2)     // Catch: java.io.IOException -> L48\n                r2 = 8\n                r4.<init>(r5, r2)     // Catch: java.io.IOException -> L48\n                java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch: java.io.IOException -> L48\n                r2.<init>()     // Catch: java.io.IOException -> L48\n            L34:\n                java.lang.String r3 = r4.readLine()     // Catch: java.io.IOException -> L48\n                if (r3 == 0) goto L43\n                r2.append(r3)     // Catch: java.io.IOException -> L48\n                java.lang.String r3 = \"\\n\"\n                r2.append(r3)     // Catch: java.io.IOException -> L48\n                goto L34\n            L43:\n                java.lang.String r2 = r2.toString()     // Catch: java.io.IOException -> L48\n                goto L52\n            L48:\n                r2 = move-exception\n                com.airealmobile.general.LogUtils.logExceptionToLocalAndInsightOps(r2, r0)     // Catch: java.io.IOException -> L4d\n                goto L51\n            L4d:\n                r2 = move-exception\n                com.airealmobile.general.LogUtils.logExceptionToLocalAndInsightOps(r2, r0)\n            L51:\n                r2 = r1\n            L52:\n                org.json.JSONObject r3 = new org.json.JSONObject     // Catch: org.json.JSONException -> L6d\n                r3.<init>(r2)     // Catch: org.json.JSONException -> L6d\n                boolean r2 = r3.has(r7)     // Catch: org.json.JSONException -> L6d\n                if (r2 == 0) goto L71\n                boolean r2 = r3.isNull(r7)     // Catch: org.json.JSONException -> L6d\n                if (r2 != 0) goto L71\n                com.airealmobile.general.Main r2 = com.airealmobile.general.Main.this     // Catch: org.json.JSONException -> L6d\n                java.lang.String r7 = r3.getString(r7)     // Catch: org.json.JSONException -> L6d\n                com.airealmobile.general.Main.access$402(r2, r7)     // Catch: org.json.JSONException -> L6d\n                goto L71\n            L6d:\n                r7 = move-exception\n                com.airealmobile.general.LogUtils.logExceptionToLocalAndInsightOps(r7, r0)\n            L71:\n                return r1\n            */\n            throw new UnsupportedOperationException(\"Method not decompiled: com.airealmobile.general.Main.IpAddressRetriever.doInBackground(java.lang.String[]):java.lang.String\");\n        }\n\n        /* JADX INFO: Access modifiers changed from: protected */\n        @Override // android.os.AsyncTask\n        public void onPostExecute(String str) {\n            super.onPostExecute((IpAddressRetriever) str);\n            if (Main.this.ipAddress != null) {\n                Main.this.checkDeepLinking();\n            } else {\n                Main.this.showAppSearch();\n            }\n        }\n    }\n\n    /* JADX INFO: Access modifiers changed from: private */\n    /* loaded from: classes.dex */\n    public class GraphRetriever extends AsyncTask<String, Void, String> {\n        Context context;\n        AppObject linkedApp;\n        String url;\n\n        GraphRetriever(Context context) {\n            this.context = context;\n            this.url = \"https://aware3.net/api/v1/system/graph?ip=\" + Main.this.ipAddress + \"&os=Android&osv=\" + Build.VERSION.RELEASE + \"&offset=\" + ((new GregorianCalendar().getTimeZone().getRawOffset() / 1000) / 60);\n        }\n\n        /* JADX INFO: Access modifiers changed from: protected */\n        /* JADX WARN: Removed duplicated region for block: B:17:0x005c A[RETURN] */\n        /* JADX WARN: Removed duplicated region for block: B:47:0x005d A[EXC_TOP_SPLITTER, SYNTHETIC] */\n        @Override // android.os.AsyncTask\n        /*\n            Code decompiled incorrectly, please refer to instructions dump.\n            To view partially-correct add '--show-bad-code' argument\n        */\n        public java.lang.String doInBackground(java.lang.String... r11) {\n            /*\n                r10 = this;\n                java.lang.String r11 = \"standalone\"\n                java.lang.String r0 = \"listing_only\"\n                java.lang.String r1 = \"icon\"\n                java.lang.String r2 = \"subtitle\"\n                java.lang.String r3 = \"payload\"\n                java.lang.String r4 = \"com.airealmobile.general\"\n                r5 = 0\n                java.net.URL r6 = new java.net.URL     // Catch: java.io.IOException -> L55\n                java.lang.String r7 = r10.url     // Catch: java.io.IOException -> L55\n                r6.<init>(r7)     // Catch: java.io.IOException -> L55\n                java.net.URLConnection r6 = r6.openConnection()     // Catch: java.io.IOException -> L55\n                r7 = 10000(0x2710, float:1.4013E-41)\n                r6.setConnectTimeout(r7)     // Catch: java.io.IOException -> L55\n                r6.setReadTimeout(r7)     // Catch: java.io.IOException -> L55\n                java.io.BufferedInputStream r7 = new java.io.BufferedInputStream     // Catch: java.io.IOException -> L55\n                java.io.InputStream r6 = r6.getInputStream()     // Catch: java.io.IOException -> L55\n                r7.<init>(r6)     // Catch: java.io.IOException -> L55\n                java.lang.String r6 = \"UTF-8\"\n                java.io.BufferedReader r8 = new java.io.BufferedReader     // Catch: java.io.IOException -> L50\n                java.io.InputStreamReader r9 = new java.io.InputStreamReader     // Catch: java.io.IOException -> L50\n                r9.<init>(r7, r6)     // Catch: java.io.IOException -> L50\n                r6 = 8\n                r8.<init>(r9, r6)     // Catch: java.io.IOException -> L50\n                java.lang.StringBuilder r6 = new java.lang.StringBuilder     // Catch: java.io.IOException -> L50\n                r6.<init>()     // Catch: java.io.IOException -> L50\n            L3c:\n                java.lang.String r7 = r8.readLine()     // Catch: java.io.IOException -> L50\n                if (r7 == 0) goto L4b\n                r6.append(r7)     // Catch: java.io.IOException -> L50\n                java.lang.String r7 = \"\\n\"\n                r6.append(r7)     // Catch: java.io.IOException -> L50\n                goto L3c\n            L4b:\n                java.lang.String r6 = r6.toString()     // Catch: java.io.IOException -> L50\n                goto L5a\n            L50:\n                r6 = move-exception\n                com.airealmobile.general.LogUtils.logExceptionToLocalAndInsightOps(r6, r4)     // Catch: java.io.IOException -> L55\n                goto L59\n            L55:\n                r6 = move-exception\n                com.airealmobile.general.LogUtils.logExceptionToLocalAndInsightOps(r6, r4)\n            L59:\n                r6 = r5\n            L5a:\n                if (r6 != 0) goto L5d\n                return r5\n            L5d:\n                org.json.JSONObject r7 = new org.json.JSONObject     // Catch: org.json.JSONException -> Le6\n                r7.<init>(r6)     // Catch: org.json.JSONException -> Le6\n                boolean r6 = r7.has(r3)     // Catch: org.json.JSONException -> Le6\n                if (r6 == 0) goto Lea\n                boolean r6 = r7.isNull(r3)     // Catch: org.json.JSONException -> Le6\n                if (r6 != 0) goto Lea\n                org.json.JSONObject r3 = r7.getJSONObject(r3)     // Catch: org.json.JSONException -> Le6\n                com.airealmobile.modules.appsearch.AppObject r6 = new com.airealmobile.modules.appsearch.AppObject     // Catch: org.json.JSONException -> Le6\n                r6.<init>()     // Catch: org.json.JSONException -> Le6\n                java.lang.String r7 = \"app_id\"\n                java.lang.String r7 = r3.getString(r7)     // Catch: org.json.JSONException -> Le6\n                r6.setAppId(r7)     // Catch: org.json.JSONException -> Le6\n                java.lang.String r7 = \"api_key\"\n                java.lang.String r7 = r3.getString(r7)     // Catch: org.json.JSONException -> Le6\n                r6.setApiKey(r7)     // Catch: org.json.JSONException -> Le6\n                java.lang.String r7 = \"title\"\n                java.lang.String r7 = r3.getString(r7)     // Catch: org.json.JSONException -> Le6\n                r6.setAppName(r7)     // Catch: org.json.JSONException -> Le6\n                boolean r7 = r3.has(r2)     // Catch: org.json.JSONException -> Le6\n                if (r7 == 0) goto La5\n                boolean r7 = r3.isNull(r2)     // Catch: org.json.JSONException -> Le6\n                if (r7 != 0) goto La5\n                java.lang.String r2 = r3.getString(r2)     // Catch: org.json.JSONException -> Le6\n                r6.setAppSubtitle(r2)     // Catch: org.json.JSONException -> Le6\n            La5:\n                boolean r2 = r3.has(r1)     // Catch: org.json.JSONException -> Le6\n                if (r2 == 0) goto Lb8\n                boolean r2 = r3.isNull(r1)     // Catch: org.json.JSONException -> Le6\n                if (r2 != 0) goto Lb8\n                java.lang.String r1 = r3.getString(r1)     // Catch: org.json.JSONException -> Le6\n                r6.setAppImage(r1)     // Catch: org.json.JSONException -> Le6\n            Lb8:\n                boolean r1 = r3.has(r11)     // Catch: org.json.JSONException -> Le6\n                if (r1 == 0) goto Lcb\n                org.json.JSONObject r11 = r3.getJSONObject(r11)     // Catch: org.json.JSONException -> Le6\n                java.lang.String r1 = \"package_name\"\n                java.lang.String r11 = r11.getString(r1)     // Catch: org.json.JSONException -> Le6\n                r6.setPackageId(r11)     // Catch: org.json.JSONException -> Le6\n            Lcb:\n                boolean r11 = r3.has(r0)     // Catch: org.json.JSONException -> Le6\n                if (r11 == 0) goto Ldf\n                boolean r11 = r3.isNull(r0)     // Catch: org.json.JSONException -> Le6\n                if (r11 != 0) goto Ldf\n                boolean r11 = r3.getBoolean(r0)     // Catch: org.json.JSONException -> Le6\n                r6.setListingOnly(r11)     // Catch: org.json.JSONException -> Le6\n                goto Le3\n            Ldf:\n                r11 = 0\n                r6.setListingOnly(r11)     // Catch: org.json.JSONException -> Le6\n            Le3:\n                r10.linkedApp = r6     // Catch: org.json.JSONException -> Le6\n                goto Lea\n            Le6:\n                r11 = move-exception\n                com.airealmobile.general.LogUtils.logExceptionToLocalAndInsightOps(r11, r4)\n            Lea:\n                return r5\n            */\n            throw new UnsupportedOperationException(\"Method not decompiled: com.airealmobile.general.Main.GraphRetriever.doInBackground(java.lang.String[]):java.lang.String\");\n        }\n\n        /* JADX INFO: Access modifiers changed from: protected */\n        @Override // android.os.AsyncTask\n        public void onPostExecute(String str) {\n            super.onPostExecute((GraphRetriever) str);\n            if (this.linkedApp != null) {\n                Main.this.aware3Application.setCurrentApp(this.linkedApp);\n                Main.this.retrieveSetup(this.linkedApp);\n                return;\n            }\n            Main.this.showAppSearch();\n        }\n    }\n\n    /* JADX INFO: Access modifiers changed from: private */\n    /* loaded from: classes.dex */\n    public class OrganizationRetriever extends AsyncTask<String, Void, String> {\n        Context context;\n        ListingInfo listing;\n        String searchAppId;\n        String url = \"https://aware3.net/api/v1/organization\";\n\n        OrganizationRetriever(String str, Context context) {\n            this.context = context;\n            this.searchAppId = str;\n        }\n\n        /*  JADX ERROR: JadxRuntimeException in pass: BlockProcessor\n            jadx.core.utils.exceptions.JadxRuntimeException: Found unreachable blocks\n            \tat jadx.core.dex.visitors.blocks.DominatorTree.sortBlocks(DominatorTree.java:35)\n            \tat jadx.core.dex.visitors.blocks.DominatorTree.compute(DominatorTree.java:25)\n            \tat jadx.core.dex.visitors.blocks.BlockProcessor.computeDominators(BlockProcessor.java:202)\n            \tat jadx.core.dex.visitors.blocks.BlockProcessor.processBlocksTree(BlockProcessor.java:45)\n            \tat jadx.core.dex.visitors.blocks.BlockProcessor.visit(BlockProcessor.java:39)\n            */\n        /* JADX INFO: Access modifiers changed from: protected */\n        @Override // android.os.AsyncTask\n        public java.lang.String doInBackground(java.lang.String... r29) {\n            /*\n                Method dump skipped, instructions count: 1056\n                To view this dump add '--comments-level debug' option\n            */\n            throw new UnsupportedOperationException(\"Method not decompiled: com.airealmobile.general.Main.OrganizationRetriever.doInBackground(java.lang.String[]):java.lang.String\");\n        }\n\n        /* JADX INFO: Access modifiers changed from: protected */\n        @Override // android.os.AsyncTask\n        public void onPostExecute(String str) {\n            super.onPostExecute((OrganizationRetriever) str);\n            if (this.listing != null) {\n                Main.this.aware3Application.setCurrentListing(this.listing);\n            }\n            Main.this.retrieveProfile();\n        }\n    }\n\n    /* JADX INFO: Access modifiers changed from: private */\n    public void retrieveProfile() {\n        if (this.isRetrievingProfile) {\n            return;\n        }\n        this.isRetrievingProfile = true;\n        final String deviceIdentifier = new SharedPrefsHelperImpl(getApplicationContext()).getDeviceIdentifier();\n        AppObject currentApp = this.aware3Application.getCurrentApp();\n        if (currentApp != null && currentApp.getAppId() != null) {\n            this.identifier = currentApp.getAppId();\n        }\n        this.profileApiService.get().getProfile(deviceIdentifier, new Observer<EndUser>() { // from class: com.airealmobile.general.Main.8\n            @Override // io.reactivex.Observer\n            public void onSubscribe(Disposable disposable) {\n            }\n\n            @Override // io.reactivex.Observer\n            public void onNext(EndUser endUser) {\n                if (endUser == null || endUser.getEndUserId() == null) {\n                    new EndUser().setDeviceId(Main.this.identifier);\n                    Main.this.aware3Application.setProfile(new EndUser());\n                    return;\n                }\n                endUser.setDeviceId(deviceIdentifier);\n                Main.this.aware3Application.setProfile(endUser);\n                if (!Main.this.isRetrievingNotifications) {\n                    Main.this.retrieveNotifications();\n                }\n                if (endUser != null && endUser.getFirebaseToken() != null && Main.this.homeInfo != null && Main.this.homeInfo.isChat_enabled()) {\n                    Main.this.buildFirebaseData(endUser.getFirebaseToken());\n                }\n                Main.this.isRetrievingProfile = false;\n            }\n\n            @Override // io.reactivex.Observer\n            public void onError(Throwable th) {\n                new EndUser().setDeviceId(Main.this.identifier);\n                Main.this.aware3Application.setProfile(new EndUser());\n                if (!Main.this.isRetrievingNotifications) {\n                    Main.this.retrieveNotifications();\n                }\n                Main.this.isRetrievingProfile = false;\n            }\n\n            @Override // io.reactivex.Observer\n            public void onComplete() {\n                if (!Main.this.isRetrievingNotifications) {\n                    Main.this.retrieveNotifications();\n                }\n                Main.this.isRetrievingProfile = false;\n            }\n        });\n    }\n\n    /* JADX INFO: Access modifiers changed from: private */\n    public void buildFirebaseData(String str) {\n        if (str != null) {\n            final Aware3Application aware3Application = this.aware3Application;\n            final EndUser profile = aware3Application.getProfile();\n            try {\n                FirebaseAuth.getInstance().signInWithCustomToken(str).addOnCompleteListener(this, new OnCompleteListener<AuthResult>() { // from class: com.airealmobile.general.Main.9\n                    @Override // com.google.android.gms.tasks.OnCompleteListener\n                    public void onComplete(Task<AuthResult> task) {\n                        if (task.isSuccessful()) {\n                            final String uid = task.getResult().getUser().getUid();\n                            profile.setFireBaseUser(uid);\n                            final FirebaseDatabase firebaseDatabase = FirebaseDatabase.getInstance();\n                            final DatabaseReference reference = firebaseDatabase.getReference(\"users/\" + uid);\n                            final AppObject currentApp = aware3Application.getCurrentApp();\n                            reference.addListenerForSingleValueEvent(new ValueEventListener() { // from class: com.airealmobile.general.Main.9.1\n                                @Override // com.google.firebase.database.ValueEventListener\n                                public void onCancelled(DatabaseError databaseError) {\n                                }\n\n                                @Override // com.google.firebase.database.ValueEventListener\n                                public void onDataChange(DataSnapshot dataSnapshot) {\n                                    HashMap hashMap = new HashMap();\n                                    hashMap.put(\"app_id\", Integer.valueOf(currentApp.getAppId()));\n                                    if (profile.getProfilePhotoUrl() != null && !profile.getProfilePhotoUrl().equalsIgnoreCase(\"\")) {\n                                        hashMap.put(\"avatar\", \"https://aware3.net/api/image/\" + profile.getProfilePhotoUrl());\n                                    }\n                                    hashMap.put(\"first_name\", profile.getFirstName());\n                                    hashMap.put(\"last_name\", profile.getLastName());\n                                    hashMap.put(\"last_seen\", ServerValue.TIMESTAMP);\n                                    if (!dataSnapshot.exists()) {\n                                        hashMap.put(\"joined\", ServerValue.TIMESTAMP);\n                                    } else {\n                                        hashMap.put(\"joined\", ((HashMap) dataSnapshot.getValue()).get(\"joined\"));\n                                    }\n                                    reference.setValue(hashMap);\n                                    DatabaseReference reference2 = firebaseDatabase.getReference(\"apps/\" + currentApp.getAppId() + \"/online/\" + uid);\n                                    reference2.onDisconnect().removeValue();\n                                    reference2.child(\"online_since\").setValue(ServerValue.TIMESTAMP);\n                                    firebaseDatabase.getReference(\"user_history/\" + uid).child(\"last_seen\").setValue(ServerValue.TIMESTAMP);\n                                }\n                            });\n                            aware3Application.setProfile(profile);\n                            ChatManager.getInstance().refreshChannels();\n                        }\n                    }\n                });\n            } catch (Exception e) {\n                LogUtils.logExceptionToLocalAndInsightOps(e, \"com.airealmobile.general\");\n            }\n        }\n    }\n\n    /* JADX INFO: Access modifiers changed from: private */\n    public void retrieveNotifications() {\n        this.isRetrievingNotifications = true;\n        EndUser profile = this.aware3Application.getProfile();\n        new NotificationRetriever(profile != null ? profile.getEndUserId() : null, this).execute(new String[0]);\n    }\n\n    /* JADX INFO: Access modifiers changed from: private */\n    /* loaded from: classes.dex */\n    public class NotificationRetriever extends AsyncTask<String, Void, String> {\n        Context context;\n        ArrayList<com.airealmobile.modules.notifications.api.model.Notification> retrievedNotifications;\n        URL url;\n\n        NotificationRetriever(String str, Context context) {\n            this.context = context;\n            AppObject currentApp = Main.this.aware3Application.getCurrentApp();\n            if (currentApp == null || currentApp.getAppId() == null) {\n                return;\n            }\n            try {\n                String str2 = BuildConfig.A3_BASE_URL + \"api/push/retrieve/\" + currentApp.getAppId();\n                if (str != null) {\n                    str2 = str2 + \"/\" + str;\n                }\n                this.url = new URL(str2);\n            } catch (MalformedURLException e) {\n                LogUtils.logExceptionToLocalAndInsightOps(e, \"com.airealmobile.general\");\n            }\n        }\n\n        /* JADX INFO: Access modifiers changed from: protected */\n        /* JADX WARN: Removed duplicated region for block: B:17:0x004f A[RETURN] */\n        /* JADX WARN: Removed duplicated region for block: B:18:0x0050  */\n        @Override // android.os.AsyncTask\n        /*\n            Code decompiled incorrectly, please refer to instructions dump.\n            To view partially-correct add '--show-bad-code' argument\n        */\n        public java.lang.String doInBackground(java.lang.String... r7) {\n            /*\n                r6 = this;\n                java.lang.String r7 = \"items\"\n                java.lang.String r0 = \"com.airealmobile.general\"\n                r1 = 0\n                java.net.URL r2 = r6.url     // Catch: java.lang.Exception -> L48\n                java.net.URLConnection r2 = r2.openConnection()     // Catch: java.lang.Exception -> L48\n                r3 = 10000(0x2710, float:1.4013E-41)\n                r2.setConnectTimeout(r3)     // Catch: java.lang.Exception -> L48\n                r2.setReadTimeout(r3)     // Catch: java.lang.Exception -> L48\n                java.io.BufferedInputStream r3 = new java.io.BufferedInputStream     // Catch: java.lang.Exception -> L48\n                java.io.InputStream r2 = r2.getInputStream()     // Catch: java.lang.Exception -> L48\n                r3.<init>(r2)     // Catch: java.lang.Exception -> L48\n                java.lang.String r2 = \"UTF-8\"\n                java.io.BufferedReader r4 = new java.io.BufferedReader     // Catch: java.io.IOException -> L43 java.lang.Exception -> L48\n                java.io.InputStreamReader r5 = new java.io.InputStreamReader     // Catch: java.io.IOException -> L43 java.lang.Exception -> L48\n                r5.<init>(r3, r2)     // Catch: java.io.IOException -> L43 java.lang.Exception -> L48\n                r2 = 8\n                r4.<init>(r5, r2)     // Catch: java.io.IOException -> L43 java.lang.Exception -> L48\n                java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch: java.io.IOException -> L43 java.lang.Exception -> L48\n                r2.<init>()     // Catch: java.io.IOException -> L43 java.lang.Exception -> L48\n            L2f:\n                java.lang.String r3 = r4.readLine()     // Catch: java.io.IOException -> L43 java.lang.Exception -> L48\n                if (r3 == 0) goto L3e\n                r2.append(r3)     // Catch: java.io.IOException -> L43 java.lang.Exception -> L48\n                java.lang.String r3 = \"\\n\"\n                r2.append(r3)     // Catch: java.io.IOException -> L43 java.lang.Exception -> L48\n                goto L2f\n            L3e:\n                java.lang.String r2 = r2.toString()     // Catch: java.io.IOException -> L43 java.lang.Exception -> L48\n                goto L4d\n            L43:\n                r2 = move-exception\n                com.airealmobile.general.LogUtils.logExceptionToLocalAndInsightOps(r2, r0)     // Catch: java.lang.Exception -> L48\n                goto L4c\n            L48:\n                r2 = move-exception\n                com.airealmobile.general.LogUtils.logExceptionToLocalAndInsightOps(r2, r0)\n            L4c:\n                r2 = r1\n            L4d:\n                if (r2 != 0) goto L50\n                return r1\n            L50:\n                java.util.ArrayList r1 = new java.util.ArrayList\n                r1.<init>()\n                r6.retrievedNotifications = r1\n                java.util.ArrayList r1 = new java.util.ArrayList\n                r1.<init>()\n                org.json.JSONObject r3 = new org.json.JSONObject     // Catch: org.json.JSONException -> L84\n                r3.<init>(r2)     // Catch: org.json.JSONException -> L84\n                boolean r4 = r3.has(r7)     // Catch: org.json.JSONException -> L84\n                if (r4 == 0) goto L88\n                org.json.JSONArray r7 = r3.getJSONArray(r7)     // Catch: org.json.JSONException -> L84\n                r3 = 0\n            L6c:\n                int r4 = r7.length()     // Catch: org.json.JSONException -> L84\n                if (r3 >= r4) goto L88\n                org.json.JSONObject r4 = r7.getJSONObject(r3)     // Catch: org.json.JSONException -> L84\n                com.airealmobile.modules.notifications.api.model.Notification r5 = new com.airealmobile.modules.notifications.api.model.Notification     // Catch: org.json.JSONException -> L84\n                r5.<init>()     // Catch: org.json.JSONException -> L84\n                r5.buildFromJson(r4)     // Catch: org.json.JSONException -> L84\n                r1.add(r5)     // Catch: org.json.JSONException -> L84\n                int r3 = r3 + 1\n                goto L6c\n            L84:\n                r7 = move-exception\n                com.airealmobile.general.LogUtils.logExceptionToLocalAndInsightOps(r7, r0)\n            L88:\n                r6.retrievedNotifications = r1\n                return r2\n            */\n            throw new UnsupportedOperationException(\"Method not decompiled: com.airealmobile.general.Main.NotificationRetriever.doInBackground(java.lang.String[]):java.lang.String\");\n        }\n\n        /* JADX INFO: Access modifiers changed from: protected */\n        @Override // android.os.AsyncTask\n        public void onPostExecute(String str) {\n            super.onPostExecute((NotificationRetriever) str);\n            Set<String> stringSet = Main.this.getSharedPreferences(Aware3Application.NOTIFICATION_SHARED_PREF, 0).getStringSet(Aware3Application.NOTIFICATION_READ_MESSAGES, null);\n            Set<String> stringSet2 = Main.this.getSharedPreferences(Aware3Application.NOTIFICATION_DELETED_PREF, 0).getStringSet(Aware3Application.NOTIFICATION_DELETED_MESSAGES, null);\n            ArrayList<com.airealmobile.modules.notifications.api.model.Notification> arrayList = this.retrievedNotifications;\n            boolean z = true;\n            if (arrayList != null) {\n                if (stringSet != null) {\n                    Iterator<com.airealmobile.modules.notifications.api.model.Notification> it = arrayList.iterator();\n                    while (it.hasNext()) {\n                        com.airealmobile.modules.notifications.api.model.Notification next = it.next();\n                        if (stringSet2 == null || !stringSet2.contains(next.getNotificationId())) {\n                            if (!stringSet.contains(next.getNotificationId())) {\n                                break;\n                            }\n                        }\n                    }\n                } else if (stringSet2 == null) {\n                }\n                ConfigurationManager.getInstance().setHasUnreadNotifications(z);\n                Main.this.retrieveAuthToken();\n                Main.this.isRetrievingNotifications = false;\n            }\n            z = false;\n            ConfigurationManager.getInstance().setHasUnreadNotifications(z);\n            Main.this.retrieveAuthToken();\n            Main.this.isRetrievingNotifications = false;\n        }\n    }\n\n    /* JADX INFO: Access modifiers changed from: private */\n    public void retrieveAuthToken() {\n        AppObject currentApp = this.aware3Application.getCurrentApp();\n        EndUser profile = this.aware3Application.getProfile();\n        if (profile != null && profile.getEndUserId() != null) {\n            AuthTokenRetriever authTokenRetriever = new AuthTokenRetriever(profile.getEndUserId(), currentApp.getAppId(), profile.getDeviceId());\n            authTokenRetriever.setListener(this);\n            authTokenRetriever.execute(new Void[0]);\n            return;\n        }\n        currentApp.setAuthToken(\"\");\n        loadHomePage();\n    }\n\n    @Override // com.airealmobile.tasks.AuthTokenRetriever.AuthTokenRetrieverHandler\n    public void didFailToRetrieveAuthToken(AuthTokenRetriever authTokenRetriever) {\n        this.aware3Application.getCurrentApp().setAuthToken(\"\");\n        loadHomePage();\n    }\n\n    @Override // com.airealmobile.tasks.AuthTokenRetriever.AuthTokenRetrieverHandler\n    public void didRetrieveAuthToken(AuthTokenRetriever authTokenRetriever, String str) {\n        this.aware3Application.getCurrentApp().setAuthToken(str);\n        loadHomePage();\n    }\n}\n",
    "functions": [
        "private void showDevelopmentBannerIfDev() {\n    }",
        "protected void onCreate(Bundle bundle) {\n        super.onCreate(bundle);\n        ProcessLifecycleOwner.get().getLifecycle().addObserver(new ForegroundBackgroundListener());\n        AndroidInjection.inject(this);\n        Log.d(TAG, \"Main.onCreate()\");\n        Intent intent = getIntent();\n        if (intent.hasExtra(Notification.NOTIFICATION_ID)) {\n            this.push_message_id = intent.getStringExtra(Notification.NOTIFICATION_ID);\n        }\n        if (intent.hasExtra(Notification.NOTIFICATION_MESSAGE)) {\n            this.push_message_text = intent.getStringExtra(Notification.NOTIFICATION_MESSAGE);\n        }\n        if (intent.hasExtra(Notification.NOTIFICATION_MODULE_ID)) {\n            this.initial_module_id = intent.getStringExtra(Notification.NOTIFICATION_MODULE_ID);\n        }\n        GoogleApiAvailability googleApiAvailability = GoogleApiAvailability.getInstance();\n        int isGooglePlayServicesAvailable = googleApiAvailability.isGooglePlayServicesAvailable(this);\n        if (isGooglePlayServicesAvailable != 0) {\n            if (googleApiAvailability.isUserResolvableError(isGooglePlayServicesAvailable)) {\n                googleApiAvailability.getErrorDialog(this, isGooglePlayServicesAvailable, 9000).show();\n                return;\n            }\n            Log.i(\"Google Play Services\", \"This device is not supported.\");\n            finish();\n            return;\n        }",
        "private void setVersionCodes() {\n        try {\n            PackageManager packageManager = getPackageManager();\n            if (packageManager != null) {\n                PackageInfo packageInfo = packageManager.getPackageInfo(getPackageName(), 0);\n                VERSION_CODE = Integer.valueOf(packageInfo.versionCode);\n                VERSION_NAME = packageInfo.versionName;\n                SharedPreferences defaultSharedPreferences = PreferenceManager.getDefaultSharedPreferences(this);\n                if (!packageInfo.versionName.equals(defaultSharedPreferences.getString(Constants.PREVIOUS_A3_VERSION, null))) {\n                    togglePushEnabledOffOn();\n                }\n                SharedPreferences.Editor edit = defaultSharedPreferences.edit();\n                edit.putString(Constants.PREVIOUS_A3_VERSION, packageInfo.versionName);\n                edit.apply();\n                this.packageName = getPackageName();\n            }",
        "private void togglePushEnabledOffOn() {\n        new Thread(new Runnable() { // from class: com.airealmobile.general.-$$Lambda$Main$ykggEqfpcynCTuPcFeVLOP-tP-c\n            @Override // java.lang.Runnable\n            public final void run() {\n                Main.this.lambda$togglePushEnabledOffOn$0$Main();\n            }\n        }",
        "private void showLoadingScreen() {\n        setContentView(com.airealmobile.messiahlutheran_1122.R.layout.bootscreen_layout);\n        setVersionFooter();\n        showDevelopmentBannerIfDev();\n        checkForLoadedApp();\n    }",
        "private void setVersionFooter() {\n        try {\n            DotVersion dotVersion = new DotVersion(BuildConfig.VERSION_NAME);\n            TextView textView = (TextView) findViewById(com.airealmobile.messiahlutheran_1122.R.id.poweredByVersion);\n            if (!dotVersion.getVersion().equals(\"\")) {\n                textView.setText(getString(com.airealmobile.messiahlutheran_1122.R.string.poweredByAware3NoVersion) + \"  \u2022 \" + dotVersion.getVersion());\n            } else {\n                textView.setText(getString(com.airealmobile.messiahlutheran_1122.R.string.poweredByAware3NoVersion));\n            }\n        }",
        "private void checkForLoadedApp() {\n        setupConfigurationManager();\n        Log.d(TAG, \"Main.checkForLoadedApp()\");\n        if (this.packageName.contains(\"com.aware3.universal\")) {\n            if (this.aware3Application.getCurrentApp() != null) {\n                retrieveSetup(this.aware3Application.getCurrentApp());\n                return;\n            } else {\n                retrieveIpAddress();\n                return;\n            }\n        }",
        "private void setupConfigurationManager() {\n        EncryptionUtility.getInstance();\n        this.configurationManager = ConfigurationManager.getInstance();\n        this.configurationFetchCompletion = new ConfigurationFetchCompletion() { // from class: com.airealmobile.general.Main.1\n            @Override // com.airealmobile.configuration.ConfigurationFetchCompletion\n            public void configurationFetchSuccessful() {\n                Main.this.checkAppStatus();\n            }\n\n            @Override // com.airealmobile.configuration.ConfigurationFetchCompletion\n            public void configurationFetchFailed() {\n                Main.this.checkAppStatus();\n            }\n        }",
        "public void showAppSearch() {\n        new Timer().schedule(new TimerTask() { // from class: com.airealmobile.general.Main.2\n            @Override // java.util.TimerTask, java.lang.Runnable\n            public void run() {\n                Intent intent = new Intent(Main.this, AppSearchActivity.class);\n                intent.setFlags(335544320);\n                Main.this.startActivity(intent);\n            }\n        }",
        "public void retrieveSetup(AppObject appObject) {\n        if (appObject.isListingOnly()) {\n            listingOnlySetup(appObject);\n        } else {\n            fullSetupCall(appObject);\n        }\n    }",
        "private void listingOnlySetup(AppObject appObject) {\n        Log.d(TAG, \"Main.listingOnlySetup()\");\n        new OrganizationRetriever(appObject.getAppId(), this).execute(new String[0]);\n    }",
        "private void fullSetupCall(AppObject appObject) {\n        if (isFinishing()) {\n            return;\n        }\n        showDialog(DIALOG_INTERNET_LOADING);\n        Log.d(TAG, \"Main.fullSetupCall()\");\n        this.configurationManager.fetchConfiguration(this.configurationFetchCompletion);\n    }",
        "public void checkAppStatus() {\n        HomeInfo homeInfo = ConfigurationManager.getInstance().getHomeInfo();\n        this.homeInfo = homeInfo;\n        String prefAppStatus = (homeInfo == null || homeInfo.getPrefAppStatus() == null) ? null : this.homeInfo.getPrefAppStatus();\n        if (prefAppStatus != null && !prefAppStatus.isEmpty() && !prefAppStatus.contentEquals(Constants.APP_STATUS_EMPTY)) {\n            showDialog(1);\n            return;\n        }\n        setVersionCodes();\n        checkVersionNumber();\n    }",
        "private void checkVersionNumber() {\n        HomeInfo homeInfo = this.homeInfo;\n        if (homeInfo != null) {\n            DotVersion dotVersion = new DotVersion(homeInfo.getPrefSupportedVersion());\n            DotVersion dotVersion2 = new DotVersion(BuildConfig.VERSION_NAME);\n            if (!this.packageName.contains(\"com.aware3.universal\") && dotVersion.compareTo(dotVersion2) == 1) {\n                if (isFinishing()) {\n                    return;\n                }\n                showDialog(2, null);\n                return;\n            }",
        "protected void onStart() {\n        super.onStart();\n        EventBus.getDefault().register(this);\n    }",
        "protected void onStop() {\n        super.onStop();\n        EventBus.getDefault().unregister(this);\n    }",
        "public void onShowHomeScreenEvent(ShowHomeScreenEvent showHomeScreenEvent) {\n        loadHomePage();\n    }",
        "protected void loadHomePage() {\n        boolean z = false;\n        SharedPreferences preferences = getPreferences(0);\n        Boolean valueOf = Boolean.valueOf(preferences.getBoolean(\"pref_key_onboarding\", false));\n        EndUser profile = this.aware3Application.getProfile();\n        if (!valueOf.booleanValue() && profile != null && (profile.getEndUserId() == null || profile.getEndUserId().length() == 0)) {\n            z = true;\n        }\n        if (shouldShowListingHomeActivity()) {\n            Log.d(TAG, \"Main - SHOWING ListingHomeActivity\");\n            Intent intent = new Intent(this, ListingHomeActivity.class);\n            intent.setFlags(335544320);\n            if (z) {\n                intent.setFlags(65536 | intent.getFlags());\n            }\n            startActivity(intent);\n        }",
        "private boolean shouldShowListingHomeActivity() {\n        return this.aware3Application.getCurrentListing() != null;\n    }",
        "private void retrieveIpAddress() {\n        new IpAddressRetriever(this).execute(new String[0]);\n    }",
        "public void checkDeepLinking() {\n        new GraphRetriever(this).execute(new String[0]);\n    }",
        "public Dialog onCreateDialog(int i) {\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\n        if (i == 1) {\n            builder.setMessage(\"This app has been disabled. Please check back soon!\");\n            builder.setTitle(\"App Disabled\");\n            builder.setCancelable(false);\n            builder.setPositiveButton(\"Ok\", new DialogInterface.OnClickListener() { // from class: com.airealmobile.general.Main.3\n                @Override // android.content.DialogInterface.OnClickListener\n                public void onClick(DialogInterface dialogInterface, int i2) {\n                    System.exit(0);\n                }\n            }",
        "public void onClick(DialogInterface dialogInterface, int i2) {\n                    System.exit(0);\n                }",
        "public void onClick(DialogInterface dialogInterface, int i2) {\n                    Intent intent = new Intent(\"android.intent.action.VIEW\");\n                    intent.setData(Uri.parse(\"market://details?id=\" + Main.this.packageName));\n                    Main.this.startActivity(intent);\n                    Main.this.startActivity(intent);\n                    dialogInterface.dismiss();\n                    System.exit(0);\n                }",
        "public void onClick(DialogInterface dialogInterface, int i2) {\n                    dialogInterface.dismiss();\n                    Main.this.finish();\n                }",
        "public void onCancel(DialogInterface dialogInterface) {\n                    dialogInterface.dismiss();\n                    Main.this.finish();\n                }",
        "public String doInBackground(String... strArr) {\n            try {\n                DefaultHttpClient defaultHttpClient = new DefaultHttpClient();\n                HttpPost httpPost = new HttpPost(this.url);\n                JSONObject jSONObject = new JSONObject();\n                jSONObject.put(\"query\", \"\");\n                jSONObject.put(\"package_name\", this.packageName);\n                String encryptData = EncryptionUtility.getInstance().encryptData(jSONObject.toString());\n                MultipartEntityBuilder create = MultipartEntityBuilder.create();\n                create.setMode(HttpMultipartMode.BROWSER_COMPATIBLE);\n                create.addTextBody(\"encrypted_payload\", encryptData);\n                httpPost.setEntity(create.build());\n                HttpEntity entity = defaultHttpClient.execute(httpPost).getEntity();\n                this.searchResults = new ArrayList<>();\n                if (entity != null && entity.getContentLength() > 0) {\n                    StringBuilder sb = new StringBuilder();\n                    try {\n                        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(entity.getContent()), 65728);\n                        while (true) {\n                            String readLine = bufferedReader.readLine();\n                            if (readLine == null) {\n                                break;\n                            }\n                            sb.append(readLine);\n                        }",
        "public void onPostExecute(String str) {\n            super.onPostExecute((AppSearchRetriever) str);\n            ArrayList<AppObject> arrayList = this.searchResults;\n            if (arrayList == null || arrayList.size() <= 0) {\n                return;\n            }\n            AppObject appObject = null;\n            Iterator<AppObject> it = this.searchResults.iterator();\n            while (true) {\n                if (!it.hasNext()) {\n                    break;\n                }\n                AppObject next = it.next();\n                if (next.getPackageId().equalsIgnoreCase(this.packageName)) {\n                    appObject = next;\n                    break;\n                }\n            }",
        "public void onPostExecute(String str) {\n            super.onPostExecute((IpAddressRetriever) str);\n            if (Main.this.ipAddress != null) {\n                Main.this.checkDeepLinking();\n            } else {\n                Main.this.showAppSearch();\n            }\n        }",
        "public void onPostExecute(String str) {\n            super.onPostExecute((GraphRetriever) str);\n            if (this.linkedApp != null) {\n                Main.this.aware3Application.setCurrentApp(this.linkedApp);\n                Main.this.retrieveSetup(this.linkedApp);\n                return;\n            }\n            Main.this.showAppSearch();\n        }",
        "public void onPostExecute(String str) {\n            super.onPostExecute((OrganizationRetriever) str);\n            if (this.listing != null) {\n                Main.this.aware3Application.setCurrentListing(this.listing);\n            }\n            Main.this.retrieveProfile();\n        }",
        "public void retrieveProfile() {\n        if (this.isRetrievingProfile) {\n            return;\n        }\n        this.isRetrievingProfile = true;\n        final String deviceIdentifier = new SharedPrefsHelperImpl(getApplicationContext()).getDeviceIdentifier();\n        AppObject currentApp = this.aware3Application.getCurrentApp();\n        if (currentApp != null && currentApp.getAppId() != null) {\n            this.identifier = currentApp.getAppId();\n        }\n        this.profileApiService.get().getProfile(deviceIdentifier, new Observer<EndUser>() { // from class: com.airealmobile.general.Main.8\n            @Override // io.reactivex.Observer\n            public void onSubscribe(Disposable disposable) {\n            }\n\n            @Override // io.reactivex.Observer\n            public void onNext(EndUser endUser) {\n                if (endUser == null || endUser.getEndUserId() == null) {\n                    new EndUser().setDeviceId(Main.this.identifier);\n                    Main.this.aware3Application.setProfile(new EndUser());\n                    return;\n                }\n                endUser.setDeviceId(deviceIdentifier);\n                Main.this.aware3Application.setProfile(endUser);\n                if (!Main.this.isRetrievingNotifications) {\n                    Main.this.retrieveNotifications();\n                }\n                if (endUser != null && endUser.getFirebaseToken() != null && Main.this.homeInfo != null && Main.this.homeInfo.isChat_enabled()) {\n                    Main.this.buildFirebaseData(endUser.getFirebaseToken());\n                }\n                Main.this.isRetrievingProfile = false;\n            }",
        "public void onError(Throwable th) {\n                new EndUser().setDeviceId(Main.this.identifier);\n                Main.this.aware3Application.setProfile(new EndUser());\n                if (!Main.this.isRetrievingNotifications) {\n                    Main.this.retrieveNotifications();\n                }\n                Main.this.isRetrievingProfile = false;\n            }",
        "public void onComplete() {\n                if (!Main.this.isRetrievingNotifications) {\n                    Main.this.retrieveNotifications();\n                }\n                Main.this.isRetrievingProfile = false;\n            }",
        "public void buildFirebaseData(String str) {\n        if (str != null) {\n            final Aware3Application aware3Application = this.aware3Application;\n            final EndUser profile = aware3Application.getProfile();\n            try {\n                FirebaseAuth.getInstance().signInWithCustomToken(str).addOnCompleteListener(this, new OnCompleteListener<AuthResult>() { // from class: com.airealmobile.general.Main.9\n                    @Override // com.google.android.gms.tasks.OnCompleteListener\n                    public void onComplete(Task<AuthResult> task) {\n                        if (task.isSuccessful()) {\n                            final String uid = task.getResult().getUser().getUid();\n                            profile.setFireBaseUser(uid);\n                            final FirebaseDatabase firebaseDatabase = FirebaseDatabase.getInstance();\n                            final DatabaseReference reference = firebaseDatabase.getReference(\"users/\" + uid);\n                            final AppObject currentApp = aware3Application.getCurrentApp();\n                            reference.addListenerForSingleValueEvent(new ValueEventListener() { // from class: com.airealmobile.general.Main.9.1\n                                @Override // com.google.firebase.database.ValueEventListener\n                                public void onCancelled(DatabaseError databaseError) {\n                                }\n\n                                @Override // com.google.firebase.database.ValueEventListener\n                                public void onDataChange(DataSnapshot dataSnapshot) {\n                                    HashMap hashMap = new HashMap();\n                                    hashMap.put(\"app_id\", Integer.valueOf(currentApp.getAppId()));\n                                    if (profile.getProfilePhotoUrl() != null && !profile.getProfilePhotoUrl().equalsIgnoreCase(\"\")) {\n                                        hashMap.put(\"avatar\", \"https://aware3.net/api/image/\" + profile.getProfilePhotoUrl());\n                                    }\n                                    hashMap.put(\"first_name\", profile.getFirstName());\n                                    hashMap.put(\"last_name\", profile.getLastName());\n                                    hashMap.put(\"last_seen\", ServerValue.TIMESTAMP);\n                                    if (!dataSnapshot.exists()) {\n                                        hashMap.put(\"joined\", ServerValue.TIMESTAMP);\n                                    } else {\n                                        hashMap.put(\"joined\", ((HashMap) dataSnapshot.getValue()).get(\"joined\"));\n                                    }\n                                    reference.setValue(hashMap);\n                                    DatabaseReference reference2 = firebaseDatabase.getReference(\"apps/\" + currentApp.getAppId() + \"/online/\" + uid);\n                                    reference2.onDisconnect().removeValue();\n                                    reference2.child(\"online_since\").setValue(ServerValue.TIMESTAMP);\n                                    firebaseDatabase.getReference(\"user_history/\" + uid).child(\"last_seen\").setValue(ServerValue.TIMESTAMP);\n                                }",
        "public void retrieveNotifications() {\n        this.isRetrievingNotifications = true;\n        EndUser profile = this.aware3Application.getProfile();\n        new NotificationRetriever(profile != null ? profile.getEndUserId() : null, this).execute(new String[0]);\n    }",
        "public void onPostExecute(String str) {\n            super.onPostExecute((NotificationRetriever) str);\n            Set<String> stringSet = Main.this.getSharedPreferences(Aware3Application.NOTIFICATION_SHARED_PREF, 0).getStringSet(Aware3Application.NOTIFICATION_READ_MESSAGES, null);\n            Set<String> stringSet2 = Main.this.getSharedPreferences(Aware3Application.NOTIFICATION_DELETED_PREF, 0).getStringSet(Aware3Application.NOTIFICATION_DELETED_MESSAGES, null);\n            ArrayList<com.airealmobile.modules.notifications.api.model.Notification> arrayList = this.retrievedNotifications;\n            boolean z = true;\n            if (arrayList != null) {\n                if (stringSet != null) {\n                    Iterator<com.airealmobile.modules.notifications.api.model.Notification> it = arrayList.iterator();\n                    while (it.hasNext()) {\n                        com.airealmobile.modules.notifications.api.model.Notification next = it.next();\n                        if (stringSet2 == null || !stringSet2.contains(next.getNotificationId())) {\n                            if (!stringSet.contains(next.getNotificationId())) {\n                                break;\n                            }\n                        }",
        "public void retrieveAuthToken() {\n        AppObject currentApp = this.aware3Application.getCurrentApp();\n        EndUser profile = this.aware3Application.getProfile();\n        if (profile != null && profile.getEndUserId() != null) {\n            AuthTokenRetriever authTokenRetriever = new AuthTokenRetriever(profile.getEndUserId(), currentApp.getAppId(), profile.getDeviceId());\n            authTokenRetriever.setListener(this);\n            authTokenRetriever.execute(new Void[0]);\n            return;\n        }\n        currentApp.setAuthToken(\"\");\n        loadHomePage();\n    }",
        "public void didFailToRetrieveAuthToken(AuthTokenRetriever authTokenRetriever) {\n        this.aware3Application.getCurrentApp().setAuthToken(\"\");\n        loadHomePage();\n    }",
        "public void didRetrieveAuthToken(AuthTokenRetriever authTokenRetriever, String str) {\n        this.aware3Application.getCurrentApp().setAuthToken(str);\n        loadHomePage();\n    }"
    ]
}