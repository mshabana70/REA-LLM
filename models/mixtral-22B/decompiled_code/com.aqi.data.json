{
    "raw": "package com.app.aqi;\n\nimport android.content.Context;\nimport android.content.Intent;\nimport android.os.Build;\nimport android.os.Bundle;\nimport android.text.Html;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.view.Window;\nimport android.widget.LinearLayout;\nimport android.widget.TextView;\nimport androidx.viewpager.widget.PagerAdapter;\nimport androidx.viewpager.widget.ViewPager;\nimport butterknife.ButterKnife;\nimport com.app.base.BaseActivity;\nimport com.app.retroutils.ApiClient;\nimport com.app.utils.Global;\nimport com.app.utils.PreferenceManager;\nimport com.crashlytics.android.Crashlytics;\nimport com.google.gson.JsonObject;\nimport io.fabric.sdk.android.Fabric;\nimport io.github.inflationx.viewpump.ViewPumpContextWrapper;\nimport java.io.IOException;\nimport org.json.JSONException;\nimport org.json.JSONObject;\nimport retrofit2.Call;\nimport retrofit2.Callback;\nimport retrofit2.Response;\n/* loaded from: classes.dex */\npublic class WelcomeActivity extends BaseActivity {\n    public static WelcomeActivity activity;\n    private TextView btnGetStarted;\n    private TextView btnNext;\n    private TextView btnSkip;\n    private TextView[] dots;\n    private LinearLayout dotsLayout;\n    private int[] layouts;\n    private LinearLayout ll_view_progress;\n    private MyViewPagerAdapter myViewPagerAdapter;\n    private ViewPager viewPager;\n    ViewPager.OnPageChangeListener viewPagerPageChangeListener = new ViewPager.OnPageChangeListener() { // from class: com.app.aqi.WelcomeActivity.8\n        @Override // androidx.viewpager.widget.ViewPager.OnPageChangeListener\n        public void onPageScrollStateChanged(int i) {\n        }\n\n        @Override // androidx.viewpager.widget.ViewPager.OnPageChangeListener\n        public void onPageScrolled(int i, float f, int i2) {\n        }\n\n        @Override // androidx.viewpager.widget.ViewPager.OnPageChangeListener\n        public void onPageSelected(int i) {\n            WelcomeActivity.this.addBottomDots(i);\n            if (i == WelcomeActivity.this.layouts.length - 1) {\n                WelcomeActivity.this.btnNext.setText(\"GOT IT\");\n                WelcomeActivity.this.btnGetStarted.setVisibility(0);\n                WelcomeActivity.this.btnNext.setVisibility(4);\n                return;\n            }\n            WelcomeActivity.this.btnNext.setText(\"Next\");\n            WelcomeActivity.this.btnGetStarted.setVisibility(8);\n            WelcomeActivity.this.btnNext.setVisibility(0);\n        }\n    };\n\n    @Override // com.app.base.BaseActivity\n    protected int setLayout() {\n        return com.aqi.data.R.layout.activity_welcome;\n    }\n\n    /* JADX INFO: Access modifiers changed from: protected */\n    @Override // com.app.base.BaseActivity, androidx.appcompat.app.AppCompatActivity, android.app.Activity, android.view.ContextThemeWrapper, android.content.ContextWrapper\n    public void attachBaseContext(Context context) {\n        super.attachBaseContext(ViewPumpContextWrapper.wrap(context));\n    }\n\n    /* JADX INFO: Access modifiers changed from: protected */\n    @Override // com.app.base.BaseActivity, permission.auron.com.marshmallowpermissionhelper.ActivityManagePermission, androidx.appcompat.app.AppCompatActivity, androidx.fragment.app.FragmentActivity, androidx.activity.ComponentActivity, androidx.core.app.ComponentActivity, android.app.Activity\n    public void onCreate(Bundle bundle) {\n        super.onCreate(bundle);\n        Fabric.with(this, new Crashlytics());\n        ButterKnife.bind(this);\n    }\n\n    @Override // com.app.base.BaseActivity\n    protected void inItViews() {\n        activity = this;\n        this.ll_view_progress = (LinearLayout) findViewById(com.aqi.data.R.id.ll_view_progress);\n        this.viewPager = (ViewPager) findViewById(com.aqi.data.R.id.view_pager);\n        this.dotsLayout = (LinearLayout) findViewById(com.aqi.data.R.id.layoutDots);\n        this.btnSkip = (TextView) findViewById(com.aqi.data.R.id.btn_skip);\n        this.btnNext = (TextView) findViewById(com.aqi.data.R.id.btn_next);\n        this.btnGetStarted = (TextView) findViewById(com.aqi.data.R.id.btnGetStarted);\n        if (Global.isNetworkConnected(activity)) {\n            callApiCheckVersionsNew();\n        } else {\n            Global.showOkAlertWithFinishMessage(activity, getString(com.aqi.data.R.string.app_name), \"No Internet Connection\");\n        }\n    }\n\n    private void callApiCheckVersionsNew() {\n        Global.showProgressDialog(this);\n        ApiClient.getClient().callApiCheckVersionNew(\"1\", BuildConfig.VERSION_NAME, \"application/json\").enqueue(new Callback<JsonObject>() { // from class: com.app.aqi.WelcomeActivity.1\n            @Override // retrofit2.Callback\n            public void onResponse(Call<JsonObject> call, Response<JsonObject> response) {\n                Global.dismisLoderDialog();\n                if (response.isSuccessful()) {\n                    String jsonObject = response.body().toString();\n                    try {\n                        JSONObject jSONObject = new JSONObject(jsonObject);\n                        Global.printLog(\"VersionRes>>\", jsonObject);\n                        if (jSONObject.getInt(\"status\") != 0) {\n                            WelcomeActivity.this.loadContinueData();\n                        } else {\n                            Global.showOkAlertWithFinishRedirectPlayStoreMessage(WelcomeActivity.activity, WelcomeActivity.this.getString(com.aqi.data.R.string.app_name), jSONObject.getString(\"message\"));\n                        }\n                        return;\n                    } catch (JSONException e) {\n                        e.printStackTrace();\n                        Global.showOkAlertWithMessage(WelcomeActivity.activity, WelcomeActivity.this.getString(com.aqi.data.R.string.network_failed), \"\");\n                        return;\n                    }\n                }\n                try {\n                    JSONObject jSONObject2 = new JSONObject(response.errorBody().string());\n                    if (jSONObject2.getInt(\"status\") != 0) {\n                        WelcomeActivity.this.loadContinueData();\n                    } else {\n                        Global.showOkAlertWithFinishRedirectPlayStoreMessage(WelcomeActivity.activity, WelcomeActivity.this.getString(com.aqi.data.R.string.app_name), jSONObject2.getString(\"message\"));\n                    }\n                } catch (IOException e2) {\n                    e2.printStackTrace();\n                } catch (JSONException e3) {\n                    e3.printStackTrace();\n                }\n            }\n\n            @Override // retrofit2.Callback\n            public void onFailure(Call<JsonObject> call, Throwable th) {\n                Global.dismisLoderDialog();\n                Global.showOkAlertWithMessage(WelcomeActivity.activity, WelcomeActivity.this.getString(com.aqi.data.R.string.network_failed), \"\");\n                call.cancel();\n                th.printStackTrace();\n            }\n        });\n    }\n\n    private void callApiCheckVersions() {\n        Global.showProgressDialog(activity);\n        ApiClient.getClient().callApiCheckVersion(\"1\", BuildConfig.VERSION_NAME, \"application/json\").enqueue(new Callback<JsonObject>() { // from class: com.app.aqi.WelcomeActivity.2\n            @Override // retrofit2.Callback\n            public void onResponse(Call<JsonObject> call, Response<JsonObject> response) {\n                Global.dismisLoderDialog();\n                if (response.isSuccessful()) {\n                    String jsonObject = response.body().toString();\n                    try {\n                        JSONObject jSONObject = new JSONObject(jsonObject);\n                        Global.printLog(\"VersionRes>>\", jsonObject);\n                        if (jSONObject.getInt(\"status\") != 0) {\n                            WelcomeActivity.this.loadContinueData();\n                        } else {\n                            Global.showOkAlertWithFinishRedirectPlayStoreMessage(WelcomeActivity.activity, WelcomeActivity.this.getString(com.aqi.data.R.string.app_name), jSONObject.getString(\"message\"));\n                        }\n                        return;\n                    } catch (JSONException e) {\n                        e.printStackTrace();\n                        Global.showOkAlertWithMessage(WelcomeActivity.activity, WelcomeActivity.this.getString(com.aqi.data.R.string.network_failed), \"\");\n                        return;\n                    }\n                }\n                try {\n                    JSONObject jSONObject2 = new JSONObject(response.errorBody().string());\n                    if (jSONObject2.getInt(\"status\") != 0) {\n                        WelcomeActivity.this.loadContinueData();\n                    } else {\n                        Global.showOkAlertWithFinishRedirectPlayStoreMessage(WelcomeActivity.activity, WelcomeActivity.this.getString(com.aqi.data.R.string.app_name), jSONObject2.getString(\"message\"));\n                    }\n                } catch (IOException e2) {\n                    e2.printStackTrace();\n                } catch (JSONException e3) {\n                    e3.printStackTrace();\n                }\n            }\n\n            @Override // retrofit2.Callback\n            public void onFailure(Call<JsonObject> call, Throwable th) {\n                Global.dismisLoderDialog();\n                Global.showOkAlertWithMessage(WelcomeActivity.activity, WelcomeActivity.this.getString(com.aqi.data.R.string.network_failed), \"\");\n                call.cancel();\n                th.printStackTrace();\n            }\n        });\n    }\n\n    /* JADX INFO: Access modifiers changed from: private */\n    public void loadContinueData() {\n        if (PreferenceManager.getBooleanPref(this, PreferenceManager.IS_BOARDING_VIEW).booleanValue()) {\n            this.ll_view_progress.setVisibility(0);\n            runOnUiThread(new Runnable() { // from class: com.app.aqi.WelcomeActivity.3\n                @Override // java.lang.Runnable\n                public void run() {\n                    WelcomeActivity welcomeActivity = WelcomeActivity.this;\n                    welcomeActivity.startActivity(new Intent(welcomeActivity, SlidingDrawerActivity.class));\n                }\n            });\n            return;\n        }\n        PreferenceManager.setBooleanPref(this, PreferenceManager.IS_BOARDING_VIEW_CALLED, true);\n        this.layouts = new int[]{com.aqi.data.R.layout.welcome_slide1, com.aqi.data.R.layout.welcome_slide2, com.aqi.data.R.layout.welcome_slide3};\n        addBottomDots(0);\n        this.myViewPagerAdapter = new MyViewPagerAdapter();\n        this.viewPager.setAdapter(this.myViewPagerAdapter);\n        this.viewPager.addOnPageChangeListener(this.viewPagerPageChangeListener);\n        this.btnNext.setVisibility(0);\n        this.btnSkip.setOnClickListener(new View.OnClickListener() { // from class: com.app.aqi.WelcomeActivity.4\n            @Override // android.view.View.OnClickListener\n            public void onClick(View view) {\n                WelcomeActivity.this.launchHomeScreen();\n            }\n        });\n        this.btnNext.setOnClickListener(new View.OnClickListener() { // from class: com.app.aqi.WelcomeActivity.5\n            @Override // android.view.View.OnClickListener\n            public void onClick(View view) {\n                int item = WelcomeActivity.this.getItem(1);\n                if (item < WelcomeActivity.this.layouts.length) {\n                    WelcomeActivity.this.viewPager.setCurrentItem(item);\n                } else {\n                    WelcomeActivity.this.launchHomeScreen();\n                }\n            }\n        });\n        this.btnGetStarted.setOnClickListener(new View.OnClickListener() { // from class: com.app.aqi.WelcomeActivity.6\n            @Override // android.view.View.OnClickListener\n            public void onClick(View view) {\n                WelcomeActivity.this.launchHomeScreen();\n            }\n        });\n    }\n\n    /* JADX INFO: Access modifiers changed from: private */\n    public void addBottomDots(int i) {\n        TextView[] textViewArr;\n        this.dots = new TextView[this.layouts.length];\n        int[] intArray = getResources().getIntArray(com.aqi.data.R.array.array_dot_active_new);\n        int[] intArray2 = getResources().getIntArray(com.aqi.data.R.array.array_dot_inactive);\n        this.dotsLayout.removeAllViews();\n        int i2 = 0;\n        while (true) {\n            textViewArr = this.dots;\n            if (i2 >= textViewArr.length) {\n                break;\n            }\n            textViewArr[i2] = new TextView(this);\n            this.dots[i2].setText(Html.fromHtml(\"&#8226;\"));\n            this.dots[i2].setTextSize(40.0f);\n            this.dots[i2].setTextColor(intArray2[i]);\n            this.dotsLayout.addView(this.dots[i2]);\n            i2++;\n        }\n        if (textViewArr.length > 0) {\n            textViewArr[i].setTextColor(intArray[i]);\n        }\n    }\n\n    /* JADX INFO: Access modifiers changed from: private */\n    public int getItem(int i) {\n        return this.viewPager.getCurrentItem() + i;\n    }\n\n    /* JADX INFO: Access modifiers changed from: private */\n    public void launchHomeScreen() {\n        this.ll_view_progress.setVisibility(0);\n        runOnUiThread(new Runnable() { // from class: com.app.aqi.WelcomeActivity.7\n            @Override // java.lang.Runnable\n            public void run() {\n                WelcomeActivity welcomeActivity = WelcomeActivity.this;\n                welcomeActivity.startActivity(new Intent(welcomeActivity, SlidingDrawerActivity.class));\n            }\n        });\n    }\n\n    private void changeStatusBarColor() {\n        if (Build.VERSION.SDK_INT >= 21) {\n            Window window = getWindow();\n            window.addFlags(Integer.MIN_VALUE);\n            window.setStatusBarColor(0);\n        }\n    }\n\n    /* loaded from: classes.dex */\n    public class MyViewPagerAdapter extends PagerAdapter {\n        private LayoutInflater layoutInflater;\n\n        @Override // androidx.viewpager.widget.PagerAdapter\n        public boolean isViewFromObject(View view, Object obj) {\n            return view == obj;\n        }\n\n        public MyViewPagerAdapter() {\n        }\n\n        @Override // androidx.viewpager.widget.PagerAdapter\n        public Object instantiateItem(ViewGroup viewGroup, int i) {\n            this.layoutInflater = (LayoutInflater) WelcomeActivity.this.getSystemService(\"layout_inflater\");\n            View inflate = this.layoutInflater.inflate(WelcomeActivity.this.layouts[i], viewGroup, false);\n            viewGroup.addView(inflate);\n            return inflate;\n        }\n\n        @Override // androidx.viewpager.widget.PagerAdapter\n        public int getCount() {\n            return WelcomeActivity.this.layouts.length;\n        }\n\n        @Override // androidx.viewpager.widget.PagerAdapter\n        public void destroyItem(ViewGroup viewGroup, int i, Object obj) {\n            viewGroup.removeView((View) obj);\n        }\n    }\n}\n",
    "functions": [
        "public void onPageScrollStateChanged(int i) {\n        }",
        "public void onPageScrolled(int i, float f, int i2) {\n        }",
        "public void onPageSelected(int i) {\n            WelcomeActivity.this.addBottomDots(i);\n            if (i == WelcomeActivity.this.layouts.length - 1) {\n                WelcomeActivity.this.btnNext.setText(\"GOT IT\");\n                WelcomeActivity.this.btnGetStarted.setVisibility(0);\n                WelcomeActivity.this.btnNext.setVisibility(4);\n                return;\n            }\n            WelcomeActivity.this.btnNext.setText(\"Next\");\n            WelcomeActivity.this.btnGetStarted.setVisibility(8);\n            WelcomeActivity.this.btnNext.setVisibility(0);\n        }",
        "protected int setLayout() {\n        return com.aqi.data.R.layout.activity_welcome;\n    }",
        "public void attachBaseContext(Context context) {\n        super.attachBaseContext(ViewPumpContextWrapper.wrap(context));\n    }",
        "public void onCreate(Bundle bundle) {\n        super.onCreate(bundle);\n        Fabric.with(this, new Crashlytics());\n        ButterKnife.bind(this);\n    }",
        "protected void inItViews() {\n        activity = this;\n        this.ll_view_progress = (LinearLayout) findViewById(com.aqi.data.R.id.ll_view_progress);\n        this.viewPager = (ViewPager) findViewById(com.aqi.data.R.id.view_pager);\n        this.dotsLayout = (LinearLayout) findViewById(com.aqi.data.R.id.layoutDots);\n        this.btnSkip = (TextView) findViewById(com.aqi.data.R.id.btn_skip);\n        this.btnNext = (TextView) findViewById(com.aqi.data.R.id.btn_next);\n        this.btnGetStarted = (TextView) findViewById(com.aqi.data.R.id.btnGetStarted);\n        if (Global.isNetworkConnected(activity)) {\n            callApiCheckVersionsNew();\n        } else {\n            Global.showOkAlertWithFinishMessage(activity, getString(com.aqi.data.R.string.app_name), \"No Internet Connection\");\n        }\n    }",
        "private void callApiCheckVersionsNew() {\n        Global.showProgressDialog(this);\n        ApiClient.getClient().callApiCheckVersionNew(\"1\", BuildConfig.VERSION_NAME, \"application/json\").enqueue(new Callback<JsonObject>() { // from class: com.app.aqi.WelcomeActivity.1\n            @Override // retrofit2.Callback\n            public void onResponse(Call<JsonObject> call, Response<JsonObject> response) {\n                Global.dismisLoderDialog();\n                if (response.isSuccessful()) {\n                    String jsonObject = response.body().toString();\n                    try {\n                        JSONObject jSONObject = new JSONObject(jsonObject);\n                        Global.printLog(\"VersionRes>>\", jsonObject);\n                        if (jSONObject.getInt(\"status\") != 0) {\n                            WelcomeActivity.this.loadContinueData();\n                        } else {\n                            Global.showOkAlertWithFinishRedirectPlayStoreMessage(WelcomeActivity.activity, WelcomeActivity.this.getString(com.aqi.data.R.string.app_name), jSONObject.getString(\"message\"));\n                        }\n                        return;\n                    }",
        "public void onFailure(Call<JsonObject> call, Throwable th) {\n                Global.dismisLoderDialog();\n                Global.showOkAlertWithMessage(WelcomeActivity.activity, WelcomeActivity.this.getString(com.aqi.data.R.string.network_failed), \"\");\n                call.cancel();\n                th.printStackTrace();\n            }",
        "private void callApiCheckVersions() {\n        Global.showProgressDialog(activity);\n        ApiClient.getClient().callApiCheckVersion(\"1\", BuildConfig.VERSION_NAME, \"application/json\").enqueue(new Callback<JsonObject>() { // from class: com.app.aqi.WelcomeActivity.2\n            @Override // retrofit2.Callback\n            public void onResponse(Call<JsonObject> call, Response<JsonObject> response) {\n                Global.dismisLoderDialog();\n                if (response.isSuccessful()) {\n                    String jsonObject = response.body().toString();\n                    try {\n                        JSONObject jSONObject = new JSONObject(jsonObject);\n                        Global.printLog(\"VersionRes>>\", jsonObject);\n                        if (jSONObject.getInt(\"status\") != 0) {\n                            WelcomeActivity.this.loadContinueData();\n                        } else {\n                            Global.showOkAlertWithFinishRedirectPlayStoreMessage(WelcomeActivity.activity, WelcomeActivity.this.getString(com.aqi.data.R.string.app_name), jSONObject.getString(\"message\"));\n                        }\n                        return;\n                    }",
        "public void onFailure(Call<JsonObject> call, Throwable th) {\n                Global.dismisLoderDialog();\n                Global.showOkAlertWithMessage(WelcomeActivity.activity, WelcomeActivity.this.getString(com.aqi.data.R.string.network_failed), \"\");\n                call.cancel();\n                th.printStackTrace();\n            }",
        "public void loadContinueData() {\n        if (PreferenceManager.getBooleanPref(this, PreferenceManager.IS_BOARDING_VIEW).booleanValue()) {\n            this.ll_view_progress.setVisibility(0);\n            runOnUiThread(new Runnable() { // from class: com.app.aqi.WelcomeActivity.3\n                @Override // java.lang.Runnable\n                public void run() {\n                    WelcomeActivity welcomeActivity = WelcomeActivity.this;\n                    welcomeActivity.startActivity(new Intent(welcomeActivity, SlidingDrawerActivity.class));\n                }\n            }",
        "public void onClick(View view) {\n                WelcomeActivity.this.launchHomeScreen();\n            }",
        "public void onClick(View view) {\n                int item = WelcomeActivity.this.getItem(1);\n                if (item < WelcomeActivity.this.layouts.length) {\n                    WelcomeActivity.this.viewPager.setCurrentItem(item);\n                } else {\n                    WelcomeActivity.this.launchHomeScreen();\n                }\n            }",
        "public void onClick(View view) {\n                WelcomeActivity.this.launchHomeScreen();\n            }",
        "public void addBottomDots(int i) {\n        TextView[] textViewArr;\n        this.dots = new TextView[this.layouts.length];\n        int[] intArray = getResources().getIntArray(com.aqi.data.R.array.array_dot_active_new);\n        int[] intArray2 = getResources().getIntArray(com.aqi.data.R.array.array_dot_inactive);\n        this.dotsLayout.removeAllViews();\n        int i2 = 0;\n        while (true) {\n            textViewArr = this.dots;\n            if (i2 >= textViewArr.length) {\n                break;\n            }\n            textViewArr[i2] = new TextView(this);\n            this.dots[i2].setText(Html.fromHtml(\"&#8226;\"));\n            this.dots[i2].setTextSize(40.0f);\n            this.dots[i2].setTextColor(intArray2[i]);\n            this.dotsLayout.addView(this.dots[i2]);\n            i2++;\n        }",
        "public int getItem(int i) {\n        return this.viewPager.getCurrentItem() + i;\n    }",
        "public void launchHomeScreen() {\n        this.ll_view_progress.setVisibility(0);\n        runOnUiThread(new Runnable() { // from class: com.app.aqi.WelcomeActivity.7\n            @Override // java.lang.Runnable\n            public void run() {\n                WelcomeActivity welcomeActivity = WelcomeActivity.this;\n                welcomeActivity.startActivity(new Intent(welcomeActivity, SlidingDrawerActivity.class));\n            }\n        }",
        "private void changeStatusBarColor() {\n        if (Build.VERSION.SDK_INT >= 21) {\n            Window window = getWindow();\n            window.addFlags(Integer.MIN_VALUE);\n            window.setStatusBarColor(0);\n        }\n    }",
        "public boolean isViewFromObject(View view, Object obj) {\n            return view == obj;\n        }",
        "public Object instantiateItem(ViewGroup viewGroup, int i) {\n            this.layoutInflater = (LayoutInflater) WelcomeActivity.this.getSystemService(\"layout_inflater\");\n            View inflate = this.layoutInflater.inflate(WelcomeActivity.this.layouts[i], viewGroup, false);\n            viewGroup.addView(inflate);\n            return inflate;\n        }",
        "public int getCount() {\n            return WelcomeActivity.this.layouts.length;\n        }",
        "public void destroyItem(ViewGroup viewGroup, int i, Object obj) {\n            viewGroup.removeView((View) obj);\n        }"
    ]
}